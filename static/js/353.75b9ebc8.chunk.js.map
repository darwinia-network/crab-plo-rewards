{"version":3,"file":"static/js/353.75b9ebc8.chunk.js","mappings":"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","sources":["../node_modules/@polkadot/keyring/node_modules/bn.js/lib/bn.js","../node_modules/ed2curve/ed2curve.js","../node_modules/tweetnacl/nacl-fast.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@polkadot/keyring/node_modules/@noble/secp256k1/lib/esm/index.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/secp256k1/pair/fromSeed.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/sr25519/pair/fromU8a.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/sr25519/pair/fromSeed.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/keccak/asU8a.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/is/number.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/object/keys.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/object/spread.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/is/boolean.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/hex/toBn.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/is/bigInt.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/is/object.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/is/helpers.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/is/toBigInt.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/is/toBn.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/bn/toBn.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/bn/toU8a.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/bn.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/secp256k1/expand.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/ethereum/encode.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/base64/bs64.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/is/bn.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/bn/consts.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/compact/toU8a.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/compact/addLength.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/key/DeriveJunction.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/is/string.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/key/extractPath.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/key/extractSuri.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/hashes/esm/pbkdf2.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/random/asU8a.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/pbkdf2/encode.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/sha/asU8a.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/mnemonic/bip39-en.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/mnemonic/bip39.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/mnemonic/validate.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/mnemonic/toEntropy.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/hmac/shaAsU8a.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/bi/consts.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/u8a/toBigInt.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/bi/toBigInt.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/hex/toBigInt.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/bi/toU8a.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/secp256k1/tweakAdd.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/hd/validatePath.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/hd/ethereum/index.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/secp256k1/deriveHard.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/key/hdkdDerive.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/key/hdkdEcdsa.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/ed25519/deriveHard.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/key/hdkdEd25519.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/sr25519/derive.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/sr25519/pair/toU8a.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/sr25519/deriveHard.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/sr25519/deriveSoft.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/key/fromPath.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/key/hdkdSr25519.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/u8a/eq.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/secp256k1/hasher.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/secp256k1/sign.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/nacl/open.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/ed25519/convertKey.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/nacl/seal.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/secp256k1/compress.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/u8a/wrap.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/ed25519/verify.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/secp256k1/recover.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/sr25519/verify.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/signature/verify.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/secp256k1/verify.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/sr25519/vrfSign.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/sr25519/vrfVerify.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/u8a/fixLength.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/nacl/decrypt.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/u8a/toBn.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/scrypt/defaults.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/scrypt/fromU8a.js","../node_modules/@noble/hashes/esm/scrypt.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/scrypt/encode.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/json/constants.js","../node_modules/@polkadot/keyring/pair/defaults.js","../node_modules/@polkadot/keyring/pair/decode.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/json/decryptData.js","../node_modules/@polkadot/keyring/pair/encode.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/nacl/encrypt.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/scrypt/toU8a.js","../node_modules/@polkadot/keyring/pair/toJson.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/json/encryptFormat.js","../node_modules/@polkadot/keyring/pair/index.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/ed25519/sign.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/sr25519/sign.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/u8a/empty.js","../node_modules/@polkadot/keyring/pairs.js","../node_modules/@polkadot/keyring/keyring.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/mnemonic/toLegacySeed.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/mnemonic/toMiniSecret.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/helpers.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/assert.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/is/null.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/is/undefined.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/wasm-crypto/bundle.js"],"sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*\n * ed2curve: convert Ed25519 signing key pair into Curve25519\n * key pair suitable for Diffie-Hellman key exchange.\n *\n * Written by Dmitry Chestnykh in 2014. Public domain.\n */\n/* jshint newcap: false */\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f(require('tweetnacl'));\n  else root.ed2curve = f(root.nacl);\n}(this, function(nacl) {\n  'use strict';\n  if (!nacl) throw new Error('tweetnacl not loaded');\n\n  // -- Operations copied from TweetNaCl.js. --\n\n  var gf = function(init) {\n    var i, r = new Float64Array(16);\n    if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n    return r;\n  };\n\n  var gf0 = gf(),\n      gf1 = gf([1]),\n      D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n      I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\n  function car25519(o) {\n    var c;\n    var i;\n    for (i = 0; i < 16; i++) {\n      o[i] += 65536;\n      c = Math.floor(o[i] / 65536);\n      o[(i+1)*(i<15?1:0)] += c - 1 + 37 * (c-1) * (i===15?1:0);\n      o[i] -= (c * 65536);\n    }\n  }\n\n  function sel25519(p, q, b) {\n    var t, c = ~(b-1);\n    for (var i = 0; i < 16; i++) {\n      t = c & (p[i] ^ q[i]);\n      p[i] ^= t;\n      q[i] ^= t;\n    }\n  }\n\n  function unpack25519(o, n) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n    o[15] &= 0x7fff;\n  }\n\n  // addition\n  function A(o, a, b) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = (a[i] + b[i])|0;\n  }\n\n  // subtraction\n  function Z(o, a, b) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = (a[i] - b[i])|0;\n  }\n\n  // multiplication\n  function M(o, a, b) {\n    var i, j, t = new Float64Array(31);\n    for (i = 0; i < 31; i++) t[i] = 0;\n    for (i = 0; i < 16; i++) {\n      for (j = 0; j < 16; j++) {\n        t[i+j] += a[i] * b[j];\n      }\n    }\n    for (i = 0; i < 15; i++) {\n      t[i] += 38 * t[i+16];\n    }\n    for (i = 0; i < 16; i++) o[i] = t[i];\n    car25519(o);\n    car25519(o);\n  }\n\n  // squaring\n  function S(o, a) {\n    M(o, a, a);\n  }\n\n  // inversion\n  function inv25519(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++) c[a] = i[a];\n    for (a = 253; a >= 0; a--) {\n      S(c, c);\n      if(a !== 2 && a !== 4) M(c, c, i);\n    }\n    for (a = 0; a < 16; a++) o[a] = c[a];\n  }\n\n  function pack25519(o, n) {\n    var i, j, b;\n    var m = gf(), t = gf();\n    for (i = 0; i < 16; i++) t[i] = n[i];\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (j = 0; j < 2; j++) {\n      m[0] = t[0] - 0xffed;\n      for (i = 1; i < 15; i++) {\n        m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n        m[i-1] &= 0xffff;\n      }\n      m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n      b = (m[15]>>16) & 1;\n      m[14] &= 0xffff;\n      sel25519(t, m, 1-b);\n    }\n    for (i = 0; i < 16; i++) {\n      o[2*i] = t[i] & 0xff;\n      o[2*i+1] = t[i] >> 8;\n    }\n  }\n\n  function par25519(a) {\n    var d = new Uint8Array(32);\n    pack25519(d, a);\n    return d[0] & 1;\n  }\n\n  function vn(x, xi, y, yi, n) {\n    var i, d = 0;\n    for (i = 0; i < n; i++) d |= x[xi + i] ^ y[yi + i];\n    return (1 & ((d - 1) >>> 8)) - 1;\n  }\n\n  function crypto_verify_32(x, xi, y, yi) {\n    return vn(x, xi, y, yi, 32);\n  }\n\n  function neq25519(a, b) {\n    var c = new Uint8Array(32), d = new Uint8Array(32);\n    pack25519(c, a);\n    pack25519(d, b);\n    return crypto_verify_32(c, 0, d, 0);\n  }\n\n  function pow2523(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++) c[a] = i[a];\n    for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if (a !== 1) M(c, c, i);\n    }\n    for (a = 0; a < 16; a++) o[a] = c[a];\n  }\n\n  function set25519(r, a) {\n    var i;\n    for (i = 0; i < 16; i++) r[i] = a[i] | 0;\n  }\n\n  function unpackneg(r, p) {\n    var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n    set25519(r[2], gf1);\n    unpack25519(r[1], p);\n    S(num, r[1]);\n    M(den, num, D);\n    Z(num, num, r[2]);\n    A(den, r[2], den);\n\n    S(den2, den);\n    S(den4, den2);\n    M(den6, den4, den2);\n    M(t, den6, num);\n    M(t, t, den);\n\n    pow2523(t, t);\n    M(t, t, num);\n    M(t, t, den);\n    M(t, t, den);\n    M(r[0], t, den);\n\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) M(r[0], r[0], I);\n\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) return -1;\n\n    if (par25519(r[0]) === (p[31] >> 7)) Z(r[0], gf0, r[0]);\n\n    M(r[3], r[0], r[1]);\n    return 0;\n  }\n\n  // ----\n\n  // Converts Ed25519 public key to Curve25519 public key.\n  // montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p\n  function convertPublicKey(pk) {\n    var z = new Uint8Array(32),\n      q = [gf(), gf(), gf(), gf()],\n      a = gf(), b = gf();\n\n    if (unpackneg(q, pk)) return null; // reject invalid key\n\n    var y = q[1];\n\n    A(a, gf1, y);\n    Z(b, gf1, y);\n    inv25519(b, b);\n    M(a, a, b);\n\n    pack25519(z, a);\n    return z;\n  }\n\n  // Converts Ed25519 secret key to Curve25519 secret key.\n  function convertSecretKey(sk) {\n    var d = new Uint8Array(64), o = new Uint8Array(32), i;\n    nacl.lowlevel.crypto_hash(d, sk, 32);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    for (i = 0; i < 32; i++) o[i] = d[i];\n    for (i = 0; i < 64; i++) d[i] = 0;\n    return o;\n  }\n\n  function convertKeyPair(edKeyPair) {\n    var publicKey = convertPublicKey(edKeyPair.publicKey);\n    if (!publicKey) return null;\n    return {\n      publicKey: publicKey,\n      secretKey: convertSecretKey(edKeyPair.secretKey)\n    };\n  }\n\n  return {\n    convertPublicKey: convertPublicKey,\n    convertSecretKey: convertSecretKey,\n    convertKeyPair: convertKeyPair,\n  };\n\n}));\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nexport const shrSH = (h, l, s) => h >>> s;\nexport const shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nexport const rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexport const rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nexport const rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexport const rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nexport const rotr32H = (h, l) => l;\nexport const rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nexport const rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexport const rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nexport const rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexport const rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nexport const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexport const add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexport const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexport const add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexport const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexport const add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianess.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte))\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// Currently avoid insertion of polyfills with packers (browserify/webpack/etc)\n// But setTimeout is pretty slow, maybe worth to investigate howto do minimal polyfill here\nexport const nextTick = (() => {\n    const nodeRequire = typeof module !== 'undefined' &&\n        typeof module.require === 'function' &&\n        module.require.bind(module);\n    try {\n        if (nodeRequire) {\n            const { setImmediate } = nodeRequire('timers');\n            return () => new Promise((resolve) => setImmediate(resolve));\n        }\n    }\n    catch (e) { }\n    return () => new Promise((resolve) => setTimeout(resolve, 0));\n})();\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function assertBool(b) {\n    if (typeof b !== 'boolean') {\n        throw new Error(`Expected boolean, not ${b}`);\n    }\n}\nexport function assertBytes(bytes, ...lengths) {\n    if (bytes instanceof Uint8Array && (!lengths.length || lengths.includes(bytes.length))) {\n        return;\n    }\n    throw new TypeError(`Expected ${lengths} bytes, not ${typeof bytes} with length=${bytes.length}`);\n}\nexport function assertHash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    assertNumber(hash.outputLen);\n    assertNumber(hash.blockLen);\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(def, _opts) {\n    if (_opts !== undefined && (typeof _opts !== 'object' || !isPlainObject(_opts)))\n        throw new TypeError('Options should be object or undefined');\n    const opts = Object.assign(def, _opts);\n    return opts;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst POW_2_256 = _2n ** BigInt(256);\nconst CURVE = {\n    a: _0n,\n    b: BigInt(7),\n    P: POW_2_256 - _2n ** BigInt(32) - BigInt(977),\n    n: POW_2_256 - BigInt('432420386565659656852420866394968145599'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n};\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        const a = this;\n        const b = other;\n        const az2 = mod(a.z * a.z);\n        const az3 = mod(a.z * az2);\n        const bz2 = mod(b.z * b.z);\n        const bz3 = mod(b.z * bz2);\n        return mod(a.x * bz2) === mod(az2 * b.x) && mod(a.y * bz3) === mod(az3 * b.y);\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const X1 = this.x;\n        const Y1 = this.y;\n        const Z1 = this.z;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(B ** _2n);\n        const D = mod(_2n * (mod(mod((X1 + B) ** _2n)) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E ** _2n);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint)) {\n            throw new TypeError('JacobianPoint#add: expected JacobianPoint');\n        }\n        const X1 = this.x;\n        const Y1 = this.y;\n        const Z1 = this.z;\n        const X2 = other.x;\n        const Y2 = other.y;\n        const Z2 = other.z;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(Y1 * Z2 * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H ** _2n);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r ** _2n - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar);\n        if (!USE_ENDOMORPHISM) {\n            let p = JacobianPoint.ZERO;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = JacobianPoint.ZERO;\n        let k2p = JacobianPoint.ZERO;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            let { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const invZ2 = invZ ** _2n;\n        const x = mod(this.x * invZ2);\n        const y = mod(this.y * invZ2 * invZ);\n        return new Point(x, y);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.slice(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.slice(1, 33));\n        const y = bytesToNumber(bytes.slice(33));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const header = bytes[0];\n        if (bytes.length === 32 || (bytes.length === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (bytes.length === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${bytes.length}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        if (h === _0n)\n            throw new Error('Cannot recover signature: msgHash cannot be 0');\n        const prefix = 2 + (recovery & 1);\n        const P_ = Point.fromHex(`0${prefix}${numTo32bStr(r)}`);\n        const sP = JacobianPoint.fromAffine(P_).multiplyUnsafe(s);\n        const hG = JacobianPoint.BASE.multiply(h);\n        const rinv = invert(r, CURVE.n);\n        const Q = sP.subtract(hG).multiplyUnsafe(rinv);\n        const point = Q.toAffine();\n        point.assertValidity();\n        return point;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            return `${this.y & _1n ? '03' : '02'}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = isUint8a(hex);\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = isUint8a(hex);\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHex(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHex(this.r));\n        const rLen = numberToHex(rHex.length / 2);\n        const sLen = numberToHex(sHex.length / 2);\n        const length = numberToHex(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every(isUint8a))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction isUint8a(bytes) {\n    return bytes instanceof Uint8Array;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction numTo32bStr(num) {\n    if (num > POW_2_256)\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    return hexToBytes(numTo32bStr(num));\n}\nfunction numberToHex(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= 0 ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, n = CURVE.P) {\n    const len = nums.length;\n    const scratch = new Array(len);\n    let acc = _1n;\n    for (let i = 0; i < len; i++) {\n        if (nums[i] === _0n)\n            continue;\n        scratch[i] = acc;\n        acc = mod(acc * nums[i], n);\n    }\n    acc = invert(acc, n);\n    for (let i = len - 1; i >= 0; i--) {\n        if (nums[i] === _0n)\n            continue;\n        const tmp = mod(acc * nums[i], n);\n        nums[i] = mod(acc * scratch[i], n);\n        acc = tmp;\n    }\n    return nums;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst POW_2_128 = _2n ** BigInt(128);\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n    const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n    const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n    const b2 = a1;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128)\n        throw new Error('splitScalarEndo: Endomorphism failed');\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        if (typeof utils.hmacSha256Sync !== 'function')\n            throw new Error('utils.hmacSha256Sync is undefined, you need to set it');\n        const res = utils.hmacSha256Sync(this.k, ...values);\n        if (res instanceof Promise)\n            throw new Error('To use sync sign(), ensure utils.hmacSha256 is sync');\n        return res;\n    }\n    incr() {\n        if (this.counter >= 1000) {\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        }\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (isUint8a(key)) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes();\n}\nfunction isPub(item) {\n    const arr = isUint8a(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    const hex = numTo32bStr(num);\n    return hexToBytes(hex);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    if (h === _0n)\n        return false;\n    let pubKey;\n    try {\n        pubKey = JacobianPoint.fromAffine(normalizePublicKey(publicKey));\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const s1 = invert(s, n);\n    const u1 = mod(h * s1, n);\n    const u2 = mod(r * s1, n);\n    const Ghs1 = JacobianPoint.BASE.multiply(u1);\n    const Prs1 = pubKey.multiplyUnsafe(u2);\n    const R = Ghs1.add(Prs1).toAffine();\n    const v = mod(R.x, n);\n    return v === r;\n}\nasync function taggedHash(tag, ...messages) {\n    const tagB = new Uint8Array(tag.split('').map((c) => c.charCodeAt(0)));\n    const tagH = await utils.sha256(tagB);\n    const h = await utils.sha256(concatBytes(tagH, tagH, ...messages));\n    return bytesToNumber(h);\n}\nasync function createChallenge(x, P, message) {\n    const rx = numTo32b(x);\n    const t = await taggedHash('BIP0340/challenge', rx, P.toRawX(), message);\n    return mod(t, CURVE.n);\n}\nfunction hasEvenY(point) {\n    return mod(point.y, _2n) === _0n;\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.slice(0, 32));\n        const s = bytesToNumber(bytes.slice(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nasync function schnorrSign(message, privateKey, auxRand = utils.randomBytes()) {\n    if (message == null)\n        throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n    const { n } = CURVE;\n    const m = ensureBytes(message);\n    const d0 = normalizePrivateKey(privateKey);\n    const rand = ensureBytes(auxRand);\n    if (rand.length !== 32)\n        throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    const P = Point.fromPrivateKey(d0);\n    const d = hasEvenY(P) ? d0 : n - d0;\n    const t0h = await taggedHash('BIP0340/aux', rand);\n    const t = d ^ t0h;\n    const k0h = await taggedHash('BIP0340/nonce', numTo32b(t), P.toRawX(), m);\n    const k0 = mod(k0h, n);\n    if (k0 === _0n)\n        throw new Error('sign: Creation of signature failed. k is zero');\n    const R = Point.fromPrivateKey(k0);\n    const k = hasEvenY(R) ? k0 : n - k0;\n    const e = await createChallenge(R.x, P, m);\n    const sig = new SchnorrSignature(R.x, mod(k + e * d, n));\n    const isValid = await schnorrVerify(sig.toRawBytes(), m, P.toRawX());\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig.toRawBytes();\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    const sig = signature instanceof SchnorrSignature ? signature : SchnorrSignature.fromHex(signature);\n    const m = ensureBytes(message);\n    const P = normalizePublicKey(publicKey);\n    const e = await createChallenge(sig.r, P, m);\n    const sG = Point.fromPrivateKey(sig.s);\n    const eP = P.multiply(e);\n    const R = sG.subtract(eP);\n    if (R.equals(Point.BASE) || !hasEvenY(R) || R.x !== sig.r)\n        return false;\n    return true;\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        let i = 8;\n        while (i--) {\n            const b32 = utils.randomBytes(32);\n            const num = bytesToNumber(b32);\n            if (isWithinCurveOrder(num) && num !== _1n)\n                return b32;\n        }\n        throw new Error('Valid private key was not found in 8 iterations. PRNG is broken');\n    },\n    bytesToHex,\n    mod,\n    sha256: async (message) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            return Uint8Array.from(createHash('sha256').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\n","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { getPublicKey } from '@noble/secp256k1';\nimport { assert, hasBigInt } from '@polkadot/util';\nimport { isReady, secp256k1FromSeed } from '@polkadot/wasm-crypto';\n/**\n * @name secp256k1PairFromSeed\n * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.\n */\n\nexport function secp256k1PairFromSeed(seed, onlyJs) {\n  assert(seed.length === 32, 'Expected valid 32-byte private key as a seed');\n\n  if (!hasBigInt || !onlyJs && isReady()) {\n    const full = secp256k1FromSeed(seed);\n    return {\n      publicKey: full.slice(32),\n      secretKey: full.slice(0, 32)\n    };\n  }\n\n  return {\n    publicKey: getPublicKey(seed, true),\n    secretKey: seed\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport nacl from 'tweetnacl';\nimport { ed25519KeypairFromSeed, isReady } from '@polkadot/wasm-crypto';\n/**\n * @name ed25519PairFromSeed\n * @summary Creates a new public/secret keypair from a seed.\n * @description\n * Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519PairFromSeed } from '@polkadot/util-crypto';\n *\n * ed25519PairFromSeed(...); // => { secretKey: [...], publicKey: [...] }\n * ```\n */\n\nexport function ed25519PairFromSeed(seed, onlyJs) {\n  if (!onlyJs && isReady()) {\n    const full = ed25519KeypairFromSeed(seed);\n    return {\n      publicKey: full.slice(32),\n      secretKey: full.slice(0, 64)\n    };\n  }\n\n  return nacl.sign.keyPair.fromSeed(seed);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util';\nconst SEC_LEN = 64;\nconst PUB_LEN = 32;\nconst TOT_LEN = SEC_LEN + PUB_LEN;\nexport function sr25519PairFromU8a(full) {\n  const fullU8a = u8aToU8a(full);\n  assert(fullU8a.length === TOT_LEN, () => `Expected keypair with ${TOT_LEN} bytes, found ${fullU8a.length}`);\n  return {\n    publicKey: fullU8a.slice(SEC_LEN, TOT_LEN),\n    secretKey: fullU8a.slice(0, SEC_LEN)\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util';\nimport { sr25519KeypairFromSeed } from '@polkadot/wasm-crypto';\nimport { sr25519PairFromU8a } from \"./fromU8a.js\";\n/**\n * @name sr25519PairFromSeed\n * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.\n */\n\nexport function sr25519PairFromSeed(seed) {\n  const seedU8a = u8aToU8a(seed);\n  assert(seedU8a.length === 32, () => `Expected a seed matching 32 bytes, found ${seedU8a.length}`);\n  return sr25519PairFromU8a(sr25519KeypairFromSeed(seedU8a));\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { keccak_256 as keccak256Js, keccak_512 as keccak512Js } from '@noble/hashes/sha3';\nimport { keccak256, keccak512 } from '@polkadot/wasm-crypto';\nimport { createAsHex, createBitHasher, createDualHasher } from \"../helpers.js\";\n/**\n * @name keccakAsU8a\n * @summary Creates a keccak Uint8Array from the input.\n * @description\n * From either a `string` or a `Buffer` input, create the keccak and return the result as a `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { keccakAsU8a } from '@polkadot/util-crypto';\n *\n * keccakAsU8a('123'); // => Uint8Array\n * ```\n */\n\nexport const keccakAsU8a = createDualHasher({\n  256: keccak256,\n  512: keccak512\n}, {\n  256: keccak256Js,\n  512: keccak512Js\n});\n/**\n * @name keccak256AsU8a\n * @description Creates a keccak256 Uint8Array from the input.\n */\n\nexport const keccak256AsU8a = createBitHasher(256, keccakAsU8a);\n/**\n * @name keccak512AsU8a\n * @description Creates a keccak512 Uint8Array from the input.\n */\n\nexport const keccak512AsU8a = createBitHasher(512, keccakAsU8a);\n/**\n * @name keccakAsHex\n * @description Creates a keccak hex string from the input.\n */\n\nexport const keccakAsHex = createAsHex(keccakAsU8a);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isNumber\n * @summary Tests for a JavaScript number.\n * @description\n * Checks to see if the input value is a valid number.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isNumber } from '@polkadot/util';\n *\n * console.log('isNumber', isNumber(1234)); // => true\n * ```\n */\nexport function isNumber(value) {\n  return typeof value === 'number';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name objectKeys\n * @summary A version of Object.keys that is typed for TS\n */\nexport function objectKeys(value) {\n  return Object.keys(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectKeys } from \"./keys.js\";\n/**\n * @name objectSpread\n * @summary Concats all sources into the destination\n */\n\nexport function objectSpread(dest, ...sources) {\n  for (let i = 0; i < sources.length; i++) {\n    const src = sources[i];\n\n    if (src) {\n      const keys = objectKeys(src);\n\n      for (let j = 0; j < keys.length; j++) {\n        const key = keys[j];\n        dest[key] = src[key];\n      }\n    }\n  }\n\n  return dest;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isBoolean\n * @summary Tests for a boolean value.\n * @description\n * Checks to see if the input value is a JavaScript boolean.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBoolean } from '@polkadot/util';\n *\n * isBoolean(false); // => true\n * ```\n */\nexport function isBoolean(value) {\n  return typeof value === 'boolean';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"../bn/bn.js\";\nimport { isBoolean } from \"../is/boolean.js\";\nimport { objectSpread } from \"../object/spread.js\";\nimport { hexStripPrefix } from \"./stripPrefix.js\";\nconst DEFAULT_OPTS = {\n  isLe: false,\n  isNegative: false\n};\n/**\n * @name hexToBn\n * @summary Creates a BN.js object from a hex string.\n * @description\n * `null` inputs returns a `BN(0)` result. Hex input values return the actual value converted to a BN. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @param _value The value to convert\n * @param _options Options to pass while converting\n * @param _options.isLe Convert using Little Endian\n * @param _options.isNegative Convert using two's complement\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToBn } from '@polkadot/util';\n *\n * hexToBn('0x123480001f'); // => BN(0x123480001f)\n * ```\n */\n\nexport function hexToBn(value, options = DEFAULT_OPTS) {\n  if (!value || value === '0x') {\n    return new BN(0);\n  }\n\n  const {\n    isLe,\n    isNegative\n  } = objectSpread({\n    isLe: false,\n    isNegative: false\n  }, isBoolean(options) ? {\n    isLe: options\n  } : options);\n  const stripped = hexStripPrefix(value);\n  const bn = new BN(stripped, 16, isLe ? 'le' : 'be'); // fromTwos takes as parameter the number of bits, which is the hex length\n  // multiplied by 4.\n\n  return isNegative ? bn.fromTwos(stripped.length * 4) : bn;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isBigInt\n * @summary Tests for a `BigInt` object instance.\n * @description\n * Checks to see if the input object is an instance of `BigInt`\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBigInt } from '@polkadot/util';\n *\n * console.log('isBigInt', isBigInt(123_456n)); // => true\n * ```\n */\nexport function isBigInt(value) {\n  return typeof value === 'bigint';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isObject\n * @summary Tests for an `object`.\n * @description\n * Checks to see if the input value is a JavaScript object.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isObject } from '@polkadot/util';\n *\n * isObject({}); // => true\n * isObject('something'); // => false\n * ```\n */\nexport function isObject(value) {\n  return !!value && typeof value === 'object';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from \"./function.js\";\nimport { isObject } from \"./object.js\";\nexport function isOn(...fns) {\n  return value => (isObject(value) || isFunction(value)) && fns.every(f => isFunction(value[f]));\n}\nexport function isOnObject(...fns) {\n  return value => isObject(value) && fns.every(f => isFunction(value[f]));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isOn } from \"./helpers.js\";\nexport const isToBigInt = isOn('toBigInt');","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isOn } from \"./helpers.js\";\nexport const isToBn = isOn('toBn');","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToBn } from \"../hex/toBn.js\";\nimport { isBigInt } from \"../is/bigInt.js\";\nimport { isHex } from \"../is/hex.js\";\nimport { isToBigInt } from \"../is/toBigInt.js\";\nimport { isToBn } from \"../is/toBn.js\";\nimport { BN } from \"./bn.js\";\n/**\n * @name bnToBn\n * @summary Creates a BN value from a BN, bigint, string (base 10 or hex) or number input.\n * @description\n * `null` inputs returns a `0x0` result, BN values returns the value, numbers returns a BN representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnToBn } from '@polkadot/util';\n *\n * bnToBn(0x1234); // => BN(0x1234)\n * bnToBn(new BN(0x1234)); // => BN(0x1234)\n * ```\n */\n\nexport function bnToBn(value) {\n  return BN.isBN(value) ? value : !value ? new BN(0) : isHex(value) ? hexToBn(value.toString()) : isBigInt(value) ? new BN(value.toString()) : isToBn(value) ? value.toBn() : isToBigInt(value) ? new BN(value.toBigInt().toString()) : new BN(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNumber } from \"../is/number.js\";\nimport { objectSpread } from \"../object/spread.js\";\nimport { bnToBn } from \"./toBn.js\";\nconst DEFAULT_OPTS = {\n  bitLength: -1,\n  isLe: true,\n  isNegative: false\n};\n\nfunction createEmpty(byteLength, options) {\n  return options.bitLength === -1 ? new Uint8Array() : new Uint8Array(byteLength);\n}\n\nfunction createValue(valueBn, byteLength, {\n  isLe,\n  isNegative\n}) {\n  const output = new Uint8Array(byteLength);\n  const bn = isNegative ? valueBn.toTwos(byteLength * 8) : valueBn;\n  output.set(bn.toArray(isLe ? 'le' : 'be', byteLength), 0);\n  return output;\n}\n/**\n * @name bnToU8a\n * @summary Creates a Uint8Array object from a BN.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `Uint8Array` result. `BN` input values return the actual bytes value converted to a `Uint8Array`. Optionally convert using little-endian format if `isLE` is set.\n * @example\n * <BR>\n *\n * ```javascript\n * import { bnToU8a } from '@polkadot/util';\n *\n * bnToU8a(new BN(0x1234)); // => [0x12, 0x34]\n * ```\n */\n\n\nfunction bnToU8a(value, arg1 = DEFAULT_OPTS, arg2) {\n  const options = objectSpread({\n    bitLength: -1,\n    isLe: true,\n    isNegative: false\n  }, isNumber(arg1) ? {\n    bitLength: arg1,\n    isLe: arg2\n  } : arg1);\n  const valueBn = bnToBn(value);\n  const byteLength = options.bitLength === -1 ? Math.ceil(valueBn.bitLength() / 8) : Math.ceil((options.bitLength || 0) / 8);\n  return value ? createValue(valueBn, byteLength, options) : createEmpty(byteLength, options);\n}\n\nexport { bnToU8a };","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const BN_BE_OPTS = {\n  isLe: false\n};\nexport const BN_LE_OPTS = {\n  isLe: true\n};\nexport const BN_LE_16_OPTS = {\n  bitLength: 16,\n  isLe: true\n};\nexport const BN_BE_32_OPTS = {\n  bitLength: 32,\n  isLe: false\n};\nexport const BN_LE_32_OPTS = {\n  bitLength: 32,\n  isLe: true\n};\nexport const BN_BE_256_OPTS = {\n  bitLength: 256,\n  isLe: false\n};\nexport const BN_LE_256_OPTS = {\n  bitLength: 256,\n  isLe: true\n};\nexport const BN_LE_512_OPTS = {\n  bitLength: 512,\n  isLe: true\n};","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Point } from '@noble/secp256k1';\nimport { assert, bnToU8a, hasBigInt, u8aConcat } from '@polkadot/util';\nimport { isReady, secp256k1Expand as wasm } from '@polkadot/wasm-crypto';\nimport { BN_BE_256_OPTS } from \"../bn.js\";\nexport function secp256k1Expand(publicKey, onlyJs) {\n  if (publicKey.length === 65) {\n    return publicKey.subarray(1);\n  }\n\n  assert(publicKey.length === 33, 'Invalid publicKey provided');\n\n  if (!hasBigInt || !onlyJs && isReady()) {\n    return wasm(publicKey).subarray(1);\n  }\n\n  const {\n    x,\n    y\n  } = Point.fromHex(publicKey);\n  return u8aConcat(bnToU8a(x, BN_BE_256_OPTS), bnToU8a(y, BN_BE_256_OPTS));\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { keccakAsU8a } from \"../keccak/index.js\";\nimport { secp256k1Expand } from \"../secp256k1/index.js\";\n\nfunction getH160(u8a) {\n  if ([33, 65].includes(u8a.length)) {\n    u8a = keccakAsU8a(secp256k1Expand(u8a));\n  }\n\n  return u8a.slice(-20);\n}\n\nexport function ethereumEncode(addressOrPublic) {\n  if (!addressOrPublic) {\n    return '0x';\n  }\n\n  const u8aAddress = u8aToU8a(addressOrPublic);\n  assert([20, 32, 33, 65].includes(u8aAddress.length), 'Invalid address or publicKey passed');\n  const address = u8aToHex(getH160(u8aAddress), -1, false);\n  const hash = u8aToHex(keccakAsU8a(address), -1, false);\n  let result = '';\n\n  for (let i = 0; i < 40; i++) {\n    result = `${result}${parseInt(hash[i], 16) > 7 ? address[i].toUpperCase() : address[i]}`;\n  }\n\n  return `0x${result}`;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { base64 } from '@scure/base';\nimport { createDecode, createEncode, createIs, createValidate } from \"../base32/helpers.js\";\nconst config = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  coder: base64,\n  type: 'base64'\n};\n/**\n * @name base64Validate\n * @summary Validates a base64 value.\n * @description\n * Validates that the supplied value is valid base64\n */\n\nexport const base64Validate = createValidate(config);\n/**\n * @name isBase64\n * @description Checks if the input is in base64, returning true/false\n */\n\nexport const isBase64 = createIs(base64Validate);\n/**\n * @name base64Decode\n * @summary Decodes a base64 value.\n * @description\n * From the provided input, decode the base64 and return the result as an `Uint8Array`.\n */\n\nexport const base64Decode = createDecode(config, base64Validate);\n/**\n * @name base64Encode\n * @summary Creates a base64 value.\n * @description\n * From the provided input, create the base64 and return the result as a string.\n */\n\nexport const base64Encode = createEncode(config);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"../bn/bn.js\";\n/**\n * @name isBn\n * @summary Tests for a `BN` object instance.\n * @description\n * Checks to see if the input object is an instance of `BN` (bn.js).\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { isBn } from '@polkadot/util';\n *\n * console.log('isBn', isBn(new BN(1))); // => true\n * ```\n */\n\nexport function isBn(value) {\n  return BN.isBN(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"./bn.js\";\n/**\n * @name BN_ZERO\n * @summary BN constant for 0.\n */\n\nexport const BN_ZERO = new BN(0);\n/**\n * @name BN_ONE\n * @summary BN constant for 1.\n */\n\nexport const BN_ONE = new BN(1);\n/**\n * @name BN_TWO\n * @summary BN constant for 2.\n */\n\nexport const BN_TWO = new BN(2);\n/**\n * @name BN_THREE\n * @summary BN constant for 3.\n */\n\nexport const BN_THREE = new BN(3);\n/**\n * @name BN_FOUR\n * @summary BN constant for 4.\n */\n\nexport const BN_FOUR = new BN(4);\n/**\n * @name BN_FIVE\n * @summary BN constant for 5.\n */\n\nexport const BN_FIVE = new BN(5);\n/**\n * @name BN_SIX\n * @summary BN constant for 6.\n */\n\nexport const BN_SIX = new BN(6);\n/**\n * @name BN_SEVEN\n * @summary BN constant for 7.\n */\n\nexport const BN_SEVEN = new BN(7);\n/**\n * @name BN_EIGHT\n * @summary BN constant for 8.\n */\n\nexport const BN_EIGHT = new BN(8);\n/**\n * @name BN_NINE\n * @summary BN constant for 9.\n */\n\nexport const BN_NINE = new BN(9);\n/**\n * @name BN_TEN\n * @summary BN constant for 10.\n */\n\nexport const BN_TEN = new BN(10);\n/**\n * @name BN_HUNDRED\n * @summary BN constant for 100.\n */\n\nexport const BN_HUNDRED = new BN(100);\n/**\n * @name BN_THOUSAND\n * @summary BN constant for 1,000.\n */\n\nexport const BN_THOUSAND = new BN(1000);\n/**\n * @name BN_MILLION\n * @summary BN constant for 1,000,000.\n */\n\nexport const BN_MILLION = new BN(1000000);\n/**\n * @name BN_BILLION\n * @summary BN constant for 1,000,000,000.\n */\n\nexport const BN_BILLION = new BN(1000000000);\n/**\n * @name BN_QUINTILL\n * @summary BN constant for 1,000,000,000,000,000,000.\n */\n\nexport const BN_QUINTILL = BN_BILLION.mul(BN_BILLION);\n/**\n * @name BN_MAX_INTEGER\n * @summary BN constant for MAX_SAFE_INTEGER\n */\n\nexport const BN_MAX_INTEGER = new BN(Number.MAX_SAFE_INTEGER);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from \"../assert.js\";\nimport { BN, BN_ONE, BN_TWO, bnToBn, bnToU8a } from \"../bn/index.js\";\nimport { u8aConcat } from \"../u8a/index.js\";\nconst MAX_U8 = BN_TWO.pow(new BN(8 - 2)).isub(BN_ONE);\nconst MAX_U16 = BN_TWO.pow(new BN(16 - 2)).isub(BN_ONE);\nconst MAX_U32 = BN_TWO.pow(new BN(32 - 2)).isub(BN_ONE);\n/**\n * @name compactToU8a\n * @description Encodes a number into a compact representation\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactToU8a } from '@polkadot/util';\n *\n * console.log(compactToU8a(511, 32)); // Uint8Array([0b11111101, 0b00000111])\n * ```\n */\n\nexport function compactToU8a(value) {\n  const bn = bnToBn(value);\n\n  if (bn.lte(MAX_U8)) {\n    return new Uint8Array([bn.toNumber() << 2]);\n  } else if (bn.lte(MAX_U16)) {\n    return bnToU8a(bn.shln(2).iadd(BN_ONE), 16, true);\n  } else if (bn.lte(MAX_U32)) {\n    return bnToU8a(bn.shln(2).iadd(BN_TWO), 32, true);\n  }\n\n  const u8a = bnToU8a(bn);\n  let length = u8a.length; // adjust to the minimum number of bytes\n\n  while (u8a[length - 1] === 0) {\n    length--;\n  }\n\n  assert(length >= 4, 'Invalid length, previous checks match anything less than 2^30');\n  return u8aConcat( // subtract 4 as minimum (also catered for in decoding)\n  [(length - 4 << 2) + 0b11], u8a.subarray(0, length));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aConcat } from \"../u8a/index.js\";\nimport { compactToU8a } from \"./toU8a.js\";\n/**\n * @name compactAddLength\n * @description Adds a length prefix to the input value\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactAddLength } from '@polkadot/util';\n *\n * console.log(compactAddLength(new Uint8Array([0xde, 0xad, 0xbe, 0xef]))); // Uint8Array([4 << 2, 0xde, 0xad, 0xbe, 0xef])\n * ```\n */\n\nexport function compactAddLength(input) {\n  return u8aConcat(compactToU8a(input.length), input);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN, bnToU8a, compactAddLength, hexToU8a, isBigInt, isBn, isHex, isNumber, isString, stringToU8a } from '@polkadot/util';\nimport { blake2AsU8a } from \"../blake2/asU8a.js\";\nimport { BN_LE_256_OPTS } from \"../bn.js\";\nconst RE_NUMBER = /^\\d+$/;\nconst JUNCTION_ID_LEN = 32;\nexport class DeriveJunction {\n  #chainCode = new Uint8Array(32);\n  #isHard = false;\n\n  static from(value) {\n    const result = new DeriveJunction();\n    const [code, isHard] = value.startsWith('/') ? [value.substr(1), true] : [value, false];\n    result.soft(RE_NUMBER.test(code) ? new BN(code, 10) : code);\n    return isHard ? result.harden() : result;\n  }\n\n  get chainCode() {\n    return this.#chainCode;\n  }\n\n  get isHard() {\n    return this.#isHard;\n  }\n\n  get isSoft() {\n    return !this.#isHard;\n  }\n\n  hard(value) {\n    return this.soft(value).harden();\n  }\n\n  harden() {\n    this.#isHard = true;\n    return this;\n  }\n\n  soft(value) {\n    if (isNumber(value) || isBn(value) || isBigInt(value)) {\n      return this.soft(bnToU8a(value, BN_LE_256_OPTS));\n    } else if (isHex(value)) {\n      return this.soft(hexToU8a(value));\n    } else if (isString(value)) {\n      return this.soft(compactAddLength(stringToU8a(value)));\n    } else if (value.length > JUNCTION_ID_LEN) {\n      return this.soft(blake2AsU8a(value));\n    }\n\n    this.#chainCode.fill(0);\n    this.#chainCode.set(value, 0);\n    return this;\n  }\n\n  soften() {\n    this.#isHard = false;\n    return this;\n  }\n\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isString\n * @summary Tests for a string.\n * @description\n * Checks to see if the input value is a JavaScript string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isString } from '@polkadot/util';\n *\n * console.log('isString', isString('test')); // => true\n * ```\n */\nexport function isString(value) {\n  return typeof value === 'string' || value instanceof String;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\nimport { DeriveJunction } from \"./DeriveJunction.js\";\nconst RE_JUNCTION = /\\/(\\/?)([^/]+)/g;\n\n/**\n * @description Extract derivation junctions from the supplied path\n */\nexport function keyExtractPath(derivePath) {\n  const parts = derivePath.match(RE_JUNCTION);\n  const path = [];\n  let constructed = '';\n\n  if (parts) {\n    constructed = parts.join('');\n\n    for (const p of parts) {\n      path.push(DeriveJunction.from(p.substr(1)));\n    }\n  }\n\n  assert(constructed === derivePath, () => `Re-constructed path \"${constructed}\" does not match input`);\n  return {\n    parts,\n    path\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isNull } from '@polkadot/util';\nimport { keyExtractPath } from \"./extractPath.js\";\nconst RE_CAPTURE = /^(\\w+( \\w+)*)((\\/\\/?[^/]+)*)(\\/\\/\\/(.*))?$/;\n/**\n * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed).\n */\n\nexport function keyExtractSuri(suri) {\n  // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n  const matches = suri.match(RE_CAPTURE);\n  assert(!isNull(matches), 'Unable to match provided value to a secret URI');\n  const [, phrase,, derivePath,,, password] = matches;\n  const {\n    path\n  } = keyExtractPath(derivePath);\n  return {\n    derivePath,\n    password,\n    path,\n    phrase\n  };\n}","import { assertHash, Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length !== this.outputLen)\n            throw new Error('HMAC: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","import { hmac } from './hmac.js';\n// prettier-ignore\nimport { createView, toBytes, assertNumber, assertHash, checkOpts, asyncLoop } from './utils.js';\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    assertHash(hash);\n    const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    assertNumber(c);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = toBytes(_password);\n    const salt = toBytes(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexport async function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await asyncLoop(c - 1, asyncTick, (i) => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        const { view, buffer, blockLen, finished } = this;\n        if (finished)\n            throw new Error('digest() was already called');\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length < this.outputLen)\n            throw new Error('_Sha2: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // NOTE: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64bit of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","import { SHA2 } from './_sha2.js';\nimport * as u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { getRandomValues } from '@polkadot/x-randomvalues';\nimport { createAsHex } from \"../helpers.js\";\n/**\n * @name randomAsU8a\n * @summary Creates a Uint8Array filled with random bytes.\n * @description\n * Returns a `Uint8Array` with the specified (optional) length filled with random bytes.\n * @example\n * <BR>\n *\n * ```javascript\n * import { randomAsU8a } from '@polkadot/util-crypto';\n *\n * randomAsU8a(); // => Uint8Array([...])\n * ```\n */\n\nexport function randomAsU8a(length = 32) {\n  return getRandomValues(new Uint8Array(length));\n}\n/**\n * @name randomAsHex\n * @description Creates a hex string filled with random bytes.\n */\n\nexport const randomAsHex = createAsHex(randomAsU8a);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { pbkdf2 as pbkdf2Js } from '@noble/hashes/pbkdf2';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { isReady, pbkdf2 } from '@polkadot/wasm-crypto';\nimport { randomAsU8a } from \"../random/asU8a.js\";\nexport function pbkdf2Encode(passphrase, salt = randomAsU8a(), rounds = 2048, onlyJs) {\n  const u8aPass = u8aToU8a(passphrase);\n  const u8aSalt = u8aToU8a(salt);\n  return {\n    password: !hasBigInt || !onlyJs && isReady() ? pbkdf2(u8aPass, u8aSalt, rounds) : pbkdf2Js(sha512, u8aPass, u8aSalt, {\n      c: rounds,\n      dkLen: 64\n    }),\n    rounds,\n    salt\n  };\n}","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\n","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sha256 as sha256Js } from '@noble/hashes/sha256';\nimport { sha512 as sha512Js } from '@noble/hashes/sha512';\nimport { sha256, sha512 } from '@polkadot/wasm-crypto';\nimport { createBitHasher, createDualHasher } from \"../helpers.js\";\n/**\n * @name shaAsU8a\n * @summary Creates a sha Uint8Array from the input.\n */\n\nexport const shaAsU8a = createDualHasher({\n  256: sha256,\n  512: sha512\n}, {\n  256: sha256Js,\n  512: sha512Js\n});\n/**\n * @name sha256AsU8a\n * @summary Creates a sha256 Uint8Array from the input.\n */\n\nexport const sha256AsU8a = createBitHasher(256, shaAsU8a);\n/**\n * @name sha512AsU8a\n * @summary Creates a sha512 Uint8Array from the input.\n */\n\nexport const sha512AsU8a = createBitHasher(512, shaAsU8a);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Adapted from the bitcoinjs/bip39 source\n// https://github.com/bitcoinjs/bip39/blob/1d063b6a6aee4145b34d701037cd3e67f5446ff9/ts_src/\nexport default 'abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo'.split('|');","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Adapted from the bitcoinjs/bip39 source\n// https://github.com/bitcoinjs/bip39/blob/1d063b6a6aee4145b34d701037cd3e67f5446ff9/ts_src/index.ts\n// Copyright (c) 2014, Wei Lu <luwei.here@gmail.com> and Daniel Cousens <email@dcousens.com>\n// ISC Licence\n//\n// Change made in this version -\n//   - Adjust formatting (just eslint differences)\n//   - Only English wordlist (this aligns with the wasm-crypto implementation)\n//   - Use util-crypto randomAsU8a (instead of randombytes)\n//   - Remove setting of wordlist passing of wordlist in functions\n//   - Remove mnemonicToSeed (we only use the sync variant)\nimport { assert, stringToU8a, u8aToU8a } from '@polkadot/util';\nimport { pbkdf2Encode } from \"../pbkdf2/index.js\";\nimport { randomAsU8a } from \"../random/index.js\";\nimport { sha256AsU8a } from \"../sha/index.js\";\nimport DEFAULT_WORDLIST from \"./bip39-en.js\";\nconst INVALID_MNEMONIC = 'Invalid mnemonic';\nconst INVALID_ENTROPY = 'Invalid entropy';\nconst INVALID_CHECKSUM = 'Invalid mnemonic checksum';\n\nfunction normalize(str) {\n  return (str || '').normalize('NFKD');\n}\n\nfunction binaryToByte(bin) {\n  return parseInt(bin, 2);\n}\n\nfunction bytesToBinary(bytes) {\n  return bytes.map(x => x.toString(2).padStart(8, '0')).join('');\n}\n\nfunction deriveChecksumBits(entropyBuffer) {\n  return bytesToBinary(Array.from(sha256AsU8a(entropyBuffer))).slice(0, entropyBuffer.length * 8 / 32);\n}\n\nexport function mnemonicToSeedSync(mnemonic, password) {\n  return pbkdf2Encode(stringToU8a(normalize(mnemonic)), stringToU8a(`mnemonic${normalize(password)}`)).password;\n}\nexport function mnemonicToEntropy(mnemonic) {\n  var _entropyBits$match;\n\n  const words = normalize(mnemonic).split(' ');\n  assert(words.length % 3 === 0, INVALID_MNEMONIC); // convert word indices to 11 bit binary strings\n\n  const bits = words.map(word => {\n    const index = DEFAULT_WORDLIST.indexOf(word);\n    assert(index !== -1, INVALID_MNEMONIC);\n    return index.toString(2).padStart(11, '0');\n  }).join(''); // split the binary string into ENT/CS\n\n  const dividerIndex = Math.floor(bits.length / 33) * 32;\n  const entropyBits = bits.slice(0, dividerIndex);\n  const checksumBits = bits.slice(dividerIndex); // calculate the checksum and compare\n\n  const entropyBytes = (_entropyBits$match = entropyBits.match(/(.{1,8})/g)) === null || _entropyBits$match === void 0 ? void 0 : _entropyBits$match.map(binaryToByte);\n  assert(entropyBytes && entropyBytes.length % 4 === 0 && entropyBytes.length >= 16 && entropyBytes.length <= 32, INVALID_ENTROPY);\n  const entropy = u8aToU8a(entropyBytes);\n  const newChecksum = deriveChecksumBits(entropy);\n  assert(newChecksum === checksumBits, INVALID_CHECKSUM);\n  return entropy;\n}\nexport function entropyToMnemonic(entropy) {\n  // 128 <= ENT <= 256\n  assert(entropy.length % 4 === 0 && entropy.length >= 16 && entropy.length <= 32, INVALID_ENTROPY);\n  const entropyBits = bytesToBinary(Array.from(entropy));\n  const checksumBits = deriveChecksumBits(entropy); // we just set it prior, so this is a safe check\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n  return (entropyBits + checksumBits).match(/(.{1,11})/g).map(binary => DEFAULT_WORDLIST[binaryToByte(binary)]).join(' ');\n}\nexport function generateMnemonic(strength) {\n  strength = strength || 128;\n  assert(strength % 32 === 0, INVALID_ENTROPY);\n  return entropyToMnemonic(randomAsU8a(strength / 8));\n}\nexport function validateMnemonic(mnemonic) {\n  try {\n    mnemonicToEntropy(mnemonic);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasBigInt } from '@polkadot/util';\nimport { bip39Validate, isReady } from '@polkadot/wasm-crypto';\nimport { validateMnemonic } from \"./bip39.js\";\n/**\n * @name mnemonicValidate\n * @summary Validates a mnemonic input using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate, mnemonicValidate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean\n * ```\n */\n\nexport function mnemonicValidate(mnemonic, onlyJs) {\n  return !hasBigInt || !onlyJs && isReady() ? bip39Validate(mnemonic) : validateMnemonic(mnemonic);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasBigInt } from '@polkadot/util';\nimport { bip39ToEntropy, isReady } from '@polkadot/wasm-crypto';\nimport { mnemonicToEntropy as jsToEntropy } from \"./bip39.js\";\nexport function mnemonicToEntropy(mnemonic, onlyJs) {\n  return !hasBigInt || !onlyJs && isReady() ? bip39ToEntropy(mnemonic) : jsToEntropy(mnemonic);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hmac } from '@noble/hashes/hmac';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { hmacSha256, hmacSha512, isReady } from '@polkadot/wasm-crypto';\nconst JS_HASH = {\n  256: sha256,\n  512: sha512\n};\nconst WA_MHAC = {\n  256: hmacSha256,\n  512: hmacSha512\n};\n\nfunction createSha(bitLength) {\n  return (key, data, onlyJs) => hmacShaAsU8a(key, data, bitLength, onlyJs);\n}\n/**\n * @name hmacShaAsU8a\n * @description creates a Hmac Sha (256/512) Uint8Array from the key & data\n */\n\n\nexport function hmacShaAsU8a(key, data, bitLength = 256, onlyJs) {\n  const u8aKey = u8aToU8a(key);\n  return !hasBigInt || !onlyJs && isReady() ? WA_MHAC[bitLength](u8aKey, data) : hmac(JS_HASH[bitLength], u8aKey, data);\n}\n/**\n * @name hmacSha256AsU8a\n * @description creates a Hmac Sha256 Uint8Array from the key & data\n */\n\nexport const hmacSha256AsU8a = createSha(256);\n/**\n * @name hmacSha512AsU8a\n * @description creates a Hmac Sha512 Uint8Array from the key & data\n */\n\nexport const hmacSha512AsU8a = createSha(512);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInt } from '@polkadot/x-bigint';\n/**\n * @name _0n\n * @summary BigInt constant for 0.\n */\n\nexport const _0n = BigInt(0);\n/**\n * @name _1n\n * @summary BigInt constant for 1.\n */\n\nexport const _1n = BigInt(1);\n/**\n * @name _1Mn\n * @summary BigInt constant for 1,000,000.\n */\n\nexport const _1Mn = BigInt(1000000);\n/**\n* @name _1Bn\n* @summary BigInt constant for 1,000,000,000.\n*/\n\nexport const _1Bn = BigInt(1000000000);\n/**\n* @name _1Qn\n* @summary BigInt constant for 1,000,000,000,000,000,000.\n*/\n\nexport const _1Qn = _1Bn * _1Bn;\n/**\n* @name _2pow53n\n* @summary BigInt constant for MAX_SAFE_INTEGER\n*/\n\nexport const _2pow53n = BigInt(Number.MAX_SAFE_INTEGER);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInt } from '@polkadot/x-bigint';\nimport { _1n } from \"../bi/consts.js\";\nimport { objectSpread } from \"../object/spread.js\";\nconst U8_MAX = BigInt(256);\nconst U16_MAX = BigInt(256 * 256);\n\nfunction xor(input) {\n  const result = new Uint8Array(input.length);\n  const dvI = new DataView(input.buffer, input.byteOffset);\n  const dvO = new DataView(result.buffer);\n  const mod = input.length % 2;\n  const length = input.length - mod;\n\n  for (let i = 0; i < length; i += 2) {\n    dvO.setUint16(i, dvI.getUint16(i) ^ 0xffff);\n  }\n\n  if (mod) {\n    dvO.setUint8(length, dvI.getUint8(length) ^ 0xff);\n  }\n\n  return result;\n}\n\nfunction toBigInt(input) {\n  const dvI = new DataView(input.buffer, input.byteOffset);\n  const mod = input.length % 2;\n  const length = input.length - mod;\n  let result = BigInt(0);\n\n  for (let i = 0; i < length; i += 2) {\n    result = result * U16_MAX + BigInt(dvI.getUint16(i));\n  }\n\n  if (mod) {\n    result = result * U8_MAX + BigInt(dvI.getUint8(length));\n  }\n\n  return result;\n}\n/**\n * @name u8aToBigInt\n * @summary Creates a BigInt from a Uint8Array object.\n */\n\n\nexport function u8aToBigInt(value, options = {}) {\n  if (!value || !value.length) {\n    return BigInt(0);\n  }\n\n  const {\n    isLe,\n    isNegative\n  } = objectSpread({\n    isLe: true,\n    isNegative: false\n  }, options);\n  const u8a = isLe ? value.reverse() : value;\n  return isNegative ? toBigInt(xor(u8a)) * -_1n - _1n : toBigInt(u8a);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInt } from '@polkadot/x-bigint';\nimport { hexToBigInt } from \"../hex/toBigInt.js\";\nimport { isBn } from \"../is/bn.js\";\nimport { isHex } from \"../is/hex.js\";\nimport { isToBigInt } from \"../is/toBigInt.js\";\nimport { isToBn } from \"../is/toBn.js\";\n/**\n * @name nToBigInt\n * @summary Creates a bigInt value from a BN, bigint, string (base 10 or hex) or number input.\n */\n\nexport function nToBigInt(value) {\n  return typeof value === 'bigint' ? value : !value ? BigInt(0) : isHex(value) ? hexToBigInt(value.toString()) : isBn(value) ? BigInt(value.toString()) : isToBigInt(value) ? value.toBigInt() : isToBn(value) ? BigInt(value.toBn().toString()) : BigInt(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInt } from '@polkadot/x-bigint';\nimport { objectSpread } from \"../object/spread.js\";\nimport { u8aToBigInt } from \"../u8a/toBigInt.js\";\nimport { hexToU8a } from \"./toU8a.js\";\n/**\n * @name hexToBigInt\n * @summary Creates a BigInt instance object from a hex string.\n */\n\nexport function hexToBigInt(value, options = {}) {\n  return !value || value === '0x' ? BigInt(0) : u8aToBigInt(hexToU8a(value), objectSpread({\n    isLe: false,\n    isNegative: false\n  }, options));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInt } from '@polkadot/x-bigint';\nimport { objectSpread } from \"../object/spread.js\";\nimport { _0n, _1n } from \"./consts.js\";\nimport { nToBigInt } from \"./toBigInt.js\";\nconst DIV = BigInt(256);\nconst NEG_MASK = BigInt(0xff);\n\nfunction createEmpty({\n  bitLength = 0\n}) {\n  return bitLength === -1 ? new Uint8Array() : new Uint8Array(Math.ceil(bitLength / 8));\n}\n\nfunction toU8a(value, {\n  isLe,\n  isNegative\n}) {\n  const arr = [];\n\n  if (isNegative) {\n    value = (value + _1n) * -_1n;\n  }\n\n  while (value !== _0n) {\n    const mod = value % DIV;\n    const val = Number(isNegative ? mod ^ NEG_MASK : mod);\n\n    if (isLe) {\n      arr.push(val);\n    } else {\n      arr.unshift(val);\n    }\n\n    value = (value - mod) / DIV;\n  }\n\n  return Uint8Array.from(arr);\n}\n/**\n * @name nToU8a\n * @summary Creates a Uint8Array object from a bigint.\n */\n\n\nexport function nToU8a(value, options) {\n  const opts = objectSpread({\n    bitLength: -1,\n    isLe: true,\n    isNegative: false\n  }, options);\n  const valueBi = nToBigInt(value);\n\n  if (valueBi === _0n) {\n    return createEmpty(opts);\n  }\n\n  const u8a = toU8a(valueBi, opts);\n\n  if (opts.bitLength === -1) {\n    return u8a;\n  }\n\n  const byteLength = Math.ceil((opts.bitLength || 0) / 8);\n  const output = new Uint8Array(byteLength);\n\n  if (opts.isNegative) {\n    output.fill(0xff);\n  }\n\n  output.set(u8a, opts.isLe ? 0 : byteLength - u8a.length);\n  return output;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { _0n, assert, BN, bnToU8a, hasBigInt, isU8a, nToU8a, u8aToBigInt } from '@polkadot/util';\nimport { BigInt } from '@polkadot/x-bigint';\nimport { BN_BE_256_OPTS, BN_BE_OPTS } from \"../bn.js\"; // pre-defined curve param as lifted form elliptic\n// https://github.com/indutny/elliptic/blob/e71b2d9359c5fe9437fbf46f1f05096de447de57/lib/elliptic/curves.js#L182\n\nconst N = 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141'.replace(/ /g, '');\nconst N_BI = BigInt(`0x${N}`);\nconst N_BN = new BN(N, 'hex');\n\nfunction addBi(seckey, tweak) {\n  let res = u8aToBigInt(tweak, BN_BE_OPTS);\n  assert(res < N_BI, 'Tweak parameter is out of range');\n  res += u8aToBigInt(seckey, BN_BE_OPTS);\n\n  if (res >= N_BI) {\n    res -= N_BI;\n  }\n\n  assert(res !== _0n, 'Invalid resulting private key');\n  return nToU8a(res, BN_BE_256_OPTS);\n}\n\nfunction addBn(seckey, tweak) {\n  const res = new BN(tweak);\n  assert(res.cmp(N_BN) < 0, 'Tweak parameter is out of range');\n  res.iadd(new BN(seckey));\n\n  if (res.cmp(N_BN) >= 0) {\n    res.isub(N_BN);\n  }\n\n  assert(!res.isZero(), 'Invalid resulting private key');\n  return bnToU8a(res, BN_BE_256_OPTS);\n}\n\nexport function secp256k1PrivateKeyTweakAdd(seckey, tweak, onlyBn) {\n  assert(isU8a(seckey) && seckey.length === 32, 'Expected seckey to be an Uint8Array with length 32');\n  assert(isU8a(tweak) && tweak.length === 32, 'Expected tweak to be an Uint8Array with length 32');\n  return !hasBigInt || onlyBn ? addBn(seckey, tweak) : addBi(seckey, tweak);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const HARDENED = 0x80000000;\nexport function hdValidatePath(path) {\n  if (!path.startsWith('m/')) {\n    return false;\n  }\n\n  const parts = path.split('/').slice(1);\n\n  for (const p of parts) {\n    const n = /^\\d+'?$/.test(p) ? parseInt(p.replace(/'$/, ''), 10) : Number.NaN;\n\n    if (isNaN(n) || n >= HARDENED || n < 0) {\n      return false;\n    }\n  }\n\n  return true;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, bnToU8a, stringToU8a, u8aConcat } from '@polkadot/util';\nimport { BN_BE_32_OPTS } from \"../../bn.js\";\nimport { hmacShaAsU8a } from \"../../hmac/index.js\";\nimport { secp256k1PairFromSeed, secp256k1PrivateKeyTweakAdd } from \"../../secp256k1/index.js\";\nimport { HARDENED, hdValidatePath } from \"../validatePath.js\";\nconst MASTER_SECRET = stringToU8a('Bitcoin seed');\n\nfunction createCoded(secretKey, chainCode) {\n  return {\n    chainCode,\n    publicKey: secp256k1PairFromSeed(secretKey).publicKey,\n    secretKey\n  };\n}\n\nfunction deriveChild(hd, index) {\n  const indexBuffer = bnToU8a(index, BN_BE_32_OPTS);\n  const data = index >= HARDENED ? u8aConcat(new Uint8Array(1), hd.secretKey, indexBuffer) : u8aConcat(hd.publicKey, indexBuffer);\n\n  try {\n    const I = hmacShaAsU8a(hd.chainCode, data, 512);\n    return createCoded(secp256k1PrivateKeyTweakAdd(hd.secretKey, I.slice(0, 32)), I.slice(32));\n  } catch (err) {\n    // In case parse256(IL) >= n or ki == 0, proceed with the next value for i\n    return deriveChild(hd, index + 1);\n  }\n}\n\nexport function hdEthereum(seed, path = '') {\n  const I = hmacShaAsU8a(MASTER_SECRET, seed, 512);\n  let hd = createCoded(I.slice(0, 32), I.slice(32));\n\n  if (!path || path === 'm' || path === 'M' || path === \"m'\" || path === \"M'\") {\n    return hd;\n  }\n\n  assert(hdValidatePath(path), 'Invalid derivation path');\n  const parts = path.split('/').slice(1);\n\n  for (const p of parts) {\n    hd = deriveChild(hd, parseInt(p, 10) + (p.length > 1 && p.endsWith(\"'\") ? HARDENED : 0));\n  }\n\n  return hd;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, compactAddLength, isU8a, stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from \"../blake2/asU8a.js\";\nconst HDKD = compactAddLength(stringToU8a('Secp256k1HDKD'));\nexport function secp256k1DeriveHard(seed, chainCode) {\n  assert(isU8a(chainCode) && chainCode.length === 32, 'Invalid chainCode passed to derive'); // NOTE This is specific to the Substrate HDD derivation, so always use the blake2 hasher\n\n  return blake2AsU8a(u8aConcat(HDKD, seed, chainCode), 256);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\nexport function createSeedDeriveFn(fromSeed, derive) {\n  return (keypair, {\n    chainCode,\n    isHard\n  }) => {\n    assert(isHard, 'A soft key was found in the path and is not supported');\n    return fromSeed(derive(keypair.secretKey.subarray(0, 32), chainCode));\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { secp256k1DeriveHard } from \"../secp256k1/deriveHard.js\";\nimport { secp256k1PairFromSeed } from \"../secp256k1/pair/fromSeed.js\";\nimport { createSeedDeriveFn } from \"./hdkdDerive.js\";\nexport const keyHdkdEcdsa = createSeedDeriveFn(secp256k1PairFromSeed, secp256k1DeriveHard);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, compactAddLength, isU8a, stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from \"../blake2/asU8a.js\";\nconst HDKD = compactAddLength(stringToU8a('Ed25519HDKD'));\nexport function ed25519DeriveHard(seed, chainCode) {\n  assert(isU8a(chainCode) && chainCode.length === 32, 'Invalid chainCode passed to derive');\n  return blake2AsU8a(u8aConcat(HDKD, seed, chainCode));\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { ed25519DeriveHard, ed25519PairFromSeed } from \"../ed25519/index.js\";\nimport { createSeedDeriveFn } from \"./hdkdDerive.js\";\nexport const keyHdkdEd25519 = createSeedDeriveFn(ed25519PairFromSeed, ed25519DeriveHard);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isU8a } from '@polkadot/util';\nimport { sr25519PairFromU8a } from \"./pair/fromU8a.js\";\nimport { sr25519KeypairToU8a } from \"./pair/toU8a.js\";\nexport function createDeriveFn(derive) {\n  return (keypair, chainCode) => {\n    assert(isU8a(chainCode) && chainCode.length === 32, 'Invalid chainCode passed to derive');\n    return sr25519PairFromU8a(derive(sr25519KeypairToU8a(keypair), chainCode));\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aConcat } from '@polkadot/util';\nexport function sr25519KeypairToU8a({\n  publicKey,\n  secretKey\n}) {\n  return u8aConcat(secretKey, publicKey).slice();\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sr25519DeriveKeypairHard } from '@polkadot/wasm-crypto';\nimport { createDeriveFn } from \"./derive.js\";\nexport const sr25519DeriveHard = createDeriveFn(sr25519DeriveKeypairHard);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sr25519DeriveKeypairSoft } from '@polkadot/wasm-crypto';\nimport { createDeriveFn } from \"./derive.js\";\nexport const sr25519DeriveSoft = createDeriveFn(sr25519DeriveKeypairSoft);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { keyHdkdEcdsa } from \"./hdkdEcdsa.js\";\nimport { keyHdkdEd25519 } from \"./hdkdEd25519.js\";\nimport { keyHdkdSr25519 } from \"./hdkdSr25519.js\";\nconst generators = {\n  ecdsa: keyHdkdEcdsa,\n  ed25519: keyHdkdEd25519,\n  // FIXME This is Substrate-compatible, not Ethereum-compatible\n  ethereum: keyHdkdEcdsa,\n  sr25519: keyHdkdSr25519\n};\nexport function keyFromPath(pair, path, type) {\n  const keyHdkd = generators[type];\n  let result = pair;\n\n  for (const junction of path) {\n    result = keyHdkd(result, junction);\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sr25519DeriveHard } from \"../sr25519/deriveHard.js\";\nimport { sr25519DeriveSoft } from \"../sr25519/deriveSoft.js\";\nexport function keyHdkdSr25519(keypair, {\n  chainCode,\n  isSoft\n}) {\n  return isSoft ? sr25519DeriveSoft(keypair, chainCode) : sr25519DeriveHard(keypair, chainCode);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from \"./toU8a.js\";\n/**\n * @name u8aEq\n * @summary Compares two Uint8Arrays for equality.\n * @description\n * For `UInt8Array` (or hex string) input values true if there is a match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */\n\nexport function u8aEq(a, b) {\n  const u8aa = u8aToU8a(a);\n  const u8ab = u8aToU8a(b);\n\n  if (u8aa.length === u8ab.length) {\n    const dvA = new DataView(u8aa.buffer, u8aa.byteOffset);\n    const dvB = new DataView(u8ab.buffer, u8ab.byteOffset);\n    const mod = u8aa.length % 4;\n    const length = u8aa.length - mod;\n\n    for (let i = 0; i < length; i += 4) {\n      if (dvA.getUint32(i) !== dvB.getUint32(i)) {\n        return false;\n      }\n    }\n\n    for (let i = length; i < u8aa.length; i++) {\n      if (u8aa[i] !== u8ab[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { blake2AsU8a } from \"../blake2/index.js\";\nimport { keccakAsU8a } from \"../keccak/index.js\";\nexport function hasher(hashType, data, onlyJs) {\n  return hashType === 'keccak' ? keccakAsU8a(data, undefined, onlyJs) : blake2AsU8a(data, undefined, undefined, onlyJs);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Signature, signSync } from '@noble/secp256k1';\nimport { assert, bnToU8a, hasBigInt, u8aConcat } from '@polkadot/util';\nimport { isReady, secp256k1Sign as wasm } from '@polkadot/wasm-crypto';\nimport { BN_BE_256_OPTS } from \"../bn.js\";\nimport { hasher } from \"./hasher.js\";\n/**\n * @name secp256k1Sign\n * @description Returns message signature of `message`, using the supplied pair\n */\n\nexport function secp256k1Sign(message, {\n  secretKey\n}, hashType = 'blake2', onlyJs) {\n  assert((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) === 32, 'Expected valid secp256k1 secretKey, 32-bytes');\n  const data = hasher(hashType, message, onlyJs);\n\n  if (!hasBigInt || !onlyJs && isReady()) {\n    return wasm(data, secretKey);\n  }\n\n  const [sigBytes, recoveryParam] = signSync(data, secretKey, {\n    canonical: true,\n    recovered: true\n  });\n  const {\n    r,\n    s\n  } = Signature.fromHex(sigBytes);\n  return u8aConcat(bnToU8a(r, BN_BE_256_OPTS), bnToU8a(s, BN_BE_256_OPTS), new Uint8Array([recoveryParam || 0]));\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport nacl from 'tweetnacl';\n/**\n * @name naclOpen\n * @summary Opens a message using the receiver's secretKey and nonce\n * @description\n * Returns a message sealed by the sender, using the receiver's `secret` and `nonce`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { naclOpen } from '@polkadot/util-crypto';\n *\n * naclOpen([...], [...], [...]); // => [...]\n * ```\n */\n\nexport function naclOpen(sealed, nonce, senderBoxPublic, receiverBoxSecret) {\n  return nacl.box.open(sealed, nonce, senderBoxPublic, receiverBoxSecret) || null;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport ed2curve from 'ed2curve';\nimport { assertReturn } from '@polkadot/util';\nexport function convertSecretKeyToCurve25519(secretKey) {\n  return ed2curve.convertSecretKey(secretKey);\n}\nexport function convertPublicKeyToCurve25519(publicKey) {\n  return assertReturn(ed2curve.convertPublicKey(publicKey), 'Unable to convert publicKey to ed25519');\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport nacl from 'tweetnacl';\nimport { randomAsU8a } from \"../random/asU8a.js\";\n\n/**\n * @name naclSeal\n * @summary Seals a message using the sender's encrypting secretKey, receiver's public key, and nonce\n * @description\n * Returns an encrypted message which can be open only by receiver's secretKey. If the `nonce` was not supplied, a random value is generated.\n * @example\n * <BR>\n *\n * ```javascript\n * import { naclSeal } from '@polkadot/util-crypto';\n *\n * naclSeal([...], [...], [...], [...]); // => [...]\n * ```\n */\nexport function naclSeal(message, senderBoxSecret, receiverBoxPublic, nonce = randomAsU8a(24)) {\n  return {\n    nonce,\n    sealed: nacl.box(message, nonce, receiverBoxPublic, senderBoxSecret)\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Point } from '@noble/secp256k1';\nimport { assert, hasBigInt } from '@polkadot/util';\nimport { isReady, secp256k1Compress as wasm } from '@polkadot/wasm-crypto';\nexport function secp256k1Compress(publicKey, onlyJs) {\n  if (publicKey.length === 33) {\n    return publicKey;\n  }\n\n  assert(publicKey.length === 65, 'Invalid publicKey provided');\n  return !hasBigInt || !onlyJs && isReady() ? wasm(publicKey) : Point.fromHex(publicKey).toRawBytes(true);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Originally from https://github.com/polkadot-js/extension/pull/743\nimport { u8aConcat } from \"./concat.js\";\nimport { u8aEq } from \"./eq.js\";\nimport { u8aToU8a } from \"./toU8a.js\";\nexport const U8A_WRAP_ETHEREUM = u8aToU8a('\\x19Ethereum Signed Message:\\n');\nexport const U8A_WRAP_PREFIX = u8aToU8a('<Bytes>');\nexport const U8A_WRAP_POSTFIX = u8aToU8a('</Bytes>');\nconst WRAP_LEN = U8A_WRAP_PREFIX.length + U8A_WRAP_POSTFIX.length;\nexport function u8aIsWrapped(u8a, withEthereum) {\n  return u8a.length >= WRAP_LEN && u8aEq(u8a.subarray(0, U8A_WRAP_PREFIX.length), U8A_WRAP_PREFIX) && u8aEq(u8a.slice(-U8A_WRAP_POSTFIX.length), U8A_WRAP_POSTFIX) || withEthereum && u8a.length >= U8A_WRAP_ETHEREUM.length && u8aEq(u8a.subarray(0, U8A_WRAP_ETHEREUM.length), U8A_WRAP_ETHEREUM);\n}\nexport function u8aUnwrapBytes(bytes) {\n  const u8a = u8aToU8a(bytes); // we don't want to unwrap Ethereum-style wraps\n\n  return u8aIsWrapped(u8a, false) ? u8a.subarray(U8A_WRAP_PREFIX.length, u8a.length - U8A_WRAP_POSTFIX.length) : u8a;\n}\nexport function u8aWrapBytes(bytes) {\n  const u8a = u8aToU8a(bytes); // if Ethereum-wrapping, we don't add our wrapping bytes\n\n  return u8aIsWrapped(u8a, true) ? u8a : u8aConcat(U8A_WRAP_PREFIX, u8a, U8A_WRAP_POSTFIX);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport nacl from 'tweetnacl';\nimport { assert, u8aToU8a } from '@polkadot/util';\nimport { ed25519Verify as wasmVerify, isReady } from '@polkadot/wasm-crypto';\n/**\n * @name ed25519Sign\n * @summary Verifies the signature on the supplied message.\n * @description\n * Verifies the `signature` on `message` with the supplied `publicKey`. Returns `true` on sucess, `false` otherwise.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519Verify } from '@polkadot/util-crypto';\n *\n * ed25519Verify([...], [...], [...]); // => true/false\n * ```\n */\n\nexport function ed25519Verify(message, signature, publicKey, onlyJs) {\n  const messageU8a = u8aToU8a(message);\n  const publicKeyU8a = u8aToU8a(publicKey);\n  const signatureU8a = u8aToU8a(signature);\n  assert(publicKeyU8a.length === 32, () => `Invalid publicKey, received ${publicKeyU8a.length}, expected 32`);\n  assert(signatureU8a.length === 64, () => `Invalid signature, received ${signatureU8a.length} bytes, expected 64`);\n  return !onlyJs && isReady() ? wasmVerify(signatureU8a, messageU8a, publicKeyU8a) : nacl.sign.detached.verify(messageU8a, signatureU8a, publicKeyU8a);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { recoverPublicKey, Signature } from '@noble/secp256k1';\nimport { assert, hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { isReady, secp256k1Recover as wasm } from '@polkadot/wasm-crypto';\nimport { secp256k1Compress } from \"./compress.js\";\nimport { secp256k1Expand } from \"./expand.js\";\n/**\n * @name secp256k1Recover\n * @description Recovers a publicKey from the supplied signature\n */\n\nexport function secp256k1Recover(msgHash, signature, recovery, hashType = 'blake2', onlyJs) {\n  const sig = u8aToU8a(signature).subarray(0, 64);\n  const msg = u8aToU8a(msgHash);\n  const publicKey = !hasBigInt || !onlyJs && isReady() ? wasm(msg, sig, recovery) : recoverPublicKey(msg, Signature.fromCompact(sig).toRawBytes(), recovery);\n  assert(publicKey, 'Unable to recover publicKey from signature');\n  return hashType === 'keccak' ? secp256k1Expand(publicKey, onlyJs) : secp256k1Compress(publicKey, onlyJs);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util';\nimport { sr25519Verify as wasmVerify } from '@polkadot/wasm-crypto';\n/**\n * @name sr25519Verify\n * @description Verifies the signature of `message`, using the supplied pair\n */\n\nexport function sr25519Verify(message, signature, publicKey) {\n  const publicKeyU8a = u8aToU8a(publicKey);\n  const signatureU8a = u8aToU8a(signature);\n  assert(publicKeyU8a.length === 32, () => `Invalid publicKey, received ${publicKeyU8a.length} bytes, expected 32`);\n  assert(signatureU8a.length === 64, () => `Invalid signature, received ${signatureU8a.length} bytes, expected 64`);\n  return wasmVerify(signatureU8a, u8aToU8a(message), publicKeyU8a);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aIsWrapped, u8aToU8a, u8aUnwrapBytes, u8aWrapBytes } from '@polkadot/util';\nimport { decodeAddress } from \"../address/decode.js\";\nimport { ed25519Verify } from \"../ed25519/verify.js\";\nimport { secp256k1Verify } from \"../secp256k1/verify.js\";\nimport { sr25519Verify } from \"../sr25519/verify.js\";\n\nconst secp256k1VerifyHasher = hashType => (message, signature, publicKey) => secp256k1Verify(message, signature, publicKey, hashType);\n\nconst VERIFIERS_ECDSA = [['ecdsa', secp256k1VerifyHasher('blake2')], ['ethereum', secp256k1VerifyHasher('keccak')]];\nconst VERIFIERS = [['ed25519', ed25519Verify], ['sr25519', sr25519Verify], ...VERIFIERS_ECDSA];\nconst CRYPTO_TYPES = ['ed25519', 'sr25519', 'ecdsa'];\n\nfunction verifyDetect(result, {\n  message,\n  publicKey,\n  signature\n}, verifiers = VERIFIERS) {\n  result.isValid = verifiers.some(([crypto, verify]) => {\n    try {\n      if (verify(message, signature, publicKey)) {\n        result.crypto = crypto;\n        return true;\n      }\n    } catch (error) {// do nothing, result.isValid still set to false\n    }\n\n    return false;\n  });\n  return result;\n}\n\nfunction verifyMultisig(result, {\n  message,\n  publicKey,\n  signature\n}) {\n  assert([0, 1, 2].includes(signature[0]), () => `Unknown crypto type, expected signature prefix [0..2], found ${signature[0]}`);\n  const type = CRYPTO_TYPES[signature[0]] || 'none';\n  result.crypto = type;\n\n  try {\n    result.isValid = {\n      ecdsa: () => verifyDetect(result, {\n        message,\n        publicKey,\n        signature: signature.subarray(1)\n      }, VERIFIERS_ECDSA).isValid,\n      ed25519: () => ed25519Verify(message, signature.subarray(1), publicKey),\n      none: () => {\n        throw Error('no verify for `none` crypto type');\n      },\n      sr25519: () => sr25519Verify(message, signature.subarray(1), publicKey)\n    }[type]();\n  } catch (error) {// ignore, result.isValid still set to false\n  }\n\n  return result;\n}\n\nfunction getVerifyFn(signature) {\n  return [0, 1, 2].includes(signature[0]) && [65, 66].includes(signature.length) ? verifyMultisig : verifyDetect;\n}\n\nexport function signatureVerify(message, signature, addressOrPublicKey) {\n  const signatureU8a = u8aToU8a(signature);\n  assert([64, 65, 66].includes(signatureU8a.length), () => `Invalid signature length, expected [64..66] bytes, found ${signatureU8a.length}`);\n  const publicKey = decodeAddress(addressOrPublicKey);\n  const input = {\n    message: u8aToU8a(message),\n    publicKey,\n    signature: signatureU8a\n  };\n  const result = {\n    crypto: 'none',\n    isValid: false,\n    isWrapped: u8aIsWrapped(input.message, true),\n    publicKey\n  };\n  const isWrappedBytes = u8aIsWrapped(input.message, false);\n  const verifyFn = getVerifyFn(signatureU8a);\n  verifyFn(result, input);\n\n  if (result.crypto !== 'none' || result.isWrapped && !isWrappedBytes) {\n    return result;\n  }\n\n  input.message = isWrappedBytes ? u8aUnwrapBytes(input.message) : u8aWrapBytes(input.message);\n  return verifyFn(result, input);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aEq, u8aToU8a } from '@polkadot/util';\nimport { hasher } from \"./hasher.js\";\nimport { secp256k1Recover } from \"./recover.js\";\n/**\n * @name secp256k1Verify\n * @description Verifies the signature of `message`, using the supplied pair\n */\n\nexport function secp256k1Verify(msgHash, signature, address, hashType = 'blake2', onlyJs) {\n  const sig = u8aToU8a(signature);\n  assert(sig.length === 65, `Expected signature with 65 bytes, ${sig.length} found instead`);\n  const publicKey = secp256k1Recover(hasher(hashType, msgHash), sig, sig[64], hashType, onlyJs);\n  const signerAddr = hasher(hashType, publicKey, onlyJs);\n  const inputAddr = u8aToU8a(address); // for Ethereum (keccak) the last 20 bytes is the address\n\n  return u8aEq(publicKey, inputAddr) || (hashType === 'keccak' ? u8aEq(signerAddr.slice(-20), inputAddr.slice(-20)) : u8aEq(signerAddr, inputAddr));\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util';\nimport { vrfSign } from '@polkadot/wasm-crypto';\nconst EMPTY_U8A = new Uint8Array();\n/**\n * @name sr25519VrfSign\n * @description Sign with sr25519 vrf signing (deterministic)\n */\n\nexport function sr25519VrfSign(message, {\n  secretKey\n}, context = EMPTY_U8A, extra = EMPTY_U8A) {\n  assert((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) === 64, 'Invalid secretKey, expected 64-bytes');\n  return vrfSign(secretKey, u8aToU8a(context), u8aToU8a(message), u8aToU8a(extra));\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util';\nimport { vrfVerify } from '@polkadot/wasm-crypto';\nconst EMPTY_U8A = new Uint8Array();\n/**\n * @name sr25519VrfVerify\n * @description Verify with sr25519 vrf verification\n */\n\nexport function sr25519VrfVerify(message, signOutput, publicKey, context = EMPTY_U8A, extra = EMPTY_U8A) {\n  const publicKeyU8a = u8aToU8a(publicKey);\n  const proofU8a = u8aToU8a(signOutput);\n  assert(publicKeyU8a.length === 32, 'Invalid publicKey, expected 32-bytes');\n  assert(proofU8a.length === 96, 'Invalid vrfSign output, expected 96 bytes');\n  return vrfVerify(publicKeyU8a, u8aToU8a(context), u8aToU8a(message), u8aToU8a(extra), proofU8a);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name u8aFixLength\n * @summary Shifts a Uint8Array to a specific bitLength\n * @description\n * Returns a uint8Array with the specified number of bits contained in the return value. (If bitLength is -1, length checking is not done). Values with more bits are trimmed to the specified length.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aFixLength } from '@polkadot/util';\n *\n * u8aFixLength('0x12') // => 0x12\n * u8aFixLength('0x12', 16) // => 0x0012\n * u8aFixLength('0x1234', 8) // => 0x12\n * ```\n */\nexport function u8aFixLength(value, bitLength = -1, atStart = false) {\n  const byteLength = Math.ceil(bitLength / 8);\n\n  if (bitLength === -1 || value.length === byteLength) {\n    return value;\n  } else if (value.length > byteLength) {\n    return value.subarray(0, byteLength);\n  }\n\n  const result = new Uint8Array(byteLength);\n  result.set(value, atStart ? 0 : byteLength - value.length);\n  return result;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport nacl from 'tweetnacl';\n/**\n * @name naclDecrypt\n * @summary Decrypts a message using the supplied secretKey and nonce\n * @description\n * Returns an decrypted message, using the `secret` and `nonce`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { naclDecrypt } from '@polkadot/util-crypto';\n *\n * naclDecrypt([...], [...], [...]); // => [...]\n * ```\n */\n\nexport function naclDecrypt(encrypted, nonce, secret) {\n  return nacl.secretbox.open(encrypted, nonce, secret) || null;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToBn } from \"../hex/toBn.js\";\nimport { u8aToHex } from \"./toHex.js\";\nconst DEFAULT_OPTS = {\n  isLe: true,\n  isNegative: false\n};\n/**\n * @name u8aToBn\n * @summary Creates a BN from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual BN. `null` or `undefined` values returns an `0x0` value.\n * @param value The value to convert\n * @param options Options to pass while converting\n * @param options.isLe Convert using Little Endian\n * @param options.isNegative Convert using two's complement\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToBn } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */\n\nexport function u8aToBn(value, options = DEFAULT_OPTS) {\n  return hexToBn(u8aToHex(value), options);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const DEFAULT_PARAMS = {\n  N: 1 << 15,\n  p: 1,\n  r: 8\n};","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToBn } from '@polkadot/util';\nimport { BN_LE_OPTS } from \"../bn.js\";\nimport { DEFAULT_PARAMS } from \"./defaults.js\";\nexport function scryptFromU8a(data) {\n  const salt = data.subarray(0, 32);\n  const N = u8aToBn(data.subarray(32 + 0, 32 + 4), BN_LE_OPTS).toNumber();\n  const p = u8aToBn(data.subarray(32 + 4, 32 + 8), BN_LE_OPTS).toNumber();\n  const r = u8aToBn(data.subarray(32 + 8, 32 + 12), BN_LE_OPTS).toNumber(); // FIXME At this moment we assume these to be fixed params, this is not a great idea since we lose flexibility\n  // and updates for greater security. However we need some protection against carefully-crafted params that can\n  // eat up CPU since these are user inputs. So we need to get very clever here, but atm we only allow the defaults\n  // and if no match, bail out\n\n  assert(N === DEFAULT_PARAMS.N && p === DEFAULT_PARAMS.p && r === DEFAULT_PARAMS.r, 'Invalid injected scrypt params found');\n  return {\n    params: {\n      N,\n      p,\n      r\n    },\n    salt\n  };\n}","import { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { assertNumber, asyncLoop, checkOpts, u32 } from './utils.js';\n// RFC 7914 Scrypt KDF\n// Left rotate for uint32\nconst rotl = (a, b) => (a << b) | (a >>> (32 - b));\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(prev, pi, input, ii, out, oi) {\n    // Based on https://cr.yp.to/salsa20.html\n    // Xor blocks\n    let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n    let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n    let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n    let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n    let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n    let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n    let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n    let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n    // Save state to temporary variables (salsa)\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    // Main loop (salsa)\n    for (let i = 0; i < 8; i += 2) {\n        x04 ^= rotl(x00 + x12 | 0, 7);\n        x08 ^= rotl(x04 + x00 | 0, 9);\n        x12 ^= rotl(x08 + x04 | 0, 13);\n        x00 ^= rotl(x12 + x08 | 0, 18);\n        x09 ^= rotl(x05 + x01 | 0, 7);\n        x13 ^= rotl(x09 + x05 | 0, 9);\n        x01 ^= rotl(x13 + x09 | 0, 13);\n        x05 ^= rotl(x01 + x13 | 0, 18);\n        x14 ^= rotl(x10 + x06 | 0, 7);\n        x02 ^= rotl(x14 + x10 | 0, 9);\n        x06 ^= rotl(x02 + x14 | 0, 13);\n        x10 ^= rotl(x06 + x02 | 0, 18);\n        x03 ^= rotl(x15 + x11 | 0, 7);\n        x07 ^= rotl(x03 + x15 | 0, 9);\n        x11 ^= rotl(x07 + x03 | 0, 13);\n        x15 ^= rotl(x11 + x07 | 0, 18);\n        x01 ^= rotl(x00 + x03 | 0, 7);\n        x02 ^= rotl(x01 + x00 | 0, 9);\n        x03 ^= rotl(x02 + x01 | 0, 13);\n        x00 ^= rotl(x03 + x02 | 0, 18);\n        x06 ^= rotl(x05 + x04 | 0, 7);\n        x07 ^= rotl(x06 + x05 | 0, 9);\n        x04 ^= rotl(x07 + x06 | 0, 13);\n        x05 ^= rotl(x04 + x07 | 0, 18);\n        x11 ^= rotl(x10 + x09 | 0, 7);\n        x08 ^= rotl(x11 + x10 | 0, 9);\n        x09 ^= rotl(x08 + x11 | 0, 13);\n        x10 ^= rotl(x09 + x08 | 0, 18);\n        x12 ^= rotl(x15 + x14 | 0, 7);\n        x13 ^= rotl(x12 + x15 | 0, 9);\n        x14 ^= rotl(x13 + x12 | 0, 13);\n        x15 ^= rotl(x14 + x13 | 0, 18);\n    }\n    // Write output (salsa)\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\nfunction BlockMix(input, ii, out, oi, r) {\n    // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n    let head = oi + 0;\n    let tail = oi + 16 * r;\n    for (let i = 0; i < 16; i++)\n        out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n    for (let i = 0; i < r; i++, head += 16, ii += 16) {\n        // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n        XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n        if (i > 0)\n            tail += 16; // First iteration overwrites tmp value in tail\n        XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n    }\n}\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password, salt, _opts) {\n    // Maxmem - 1GB+1KB by default\n    const opts = checkOpts({\n        dkLen: 32,\n        asyncTick: 10,\n        maxmem: 1024 ** 3 + 1024,\n    }, _opts);\n    const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n    assertNumber(N);\n    assertNumber(r);\n    assertNumber(p);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    assertNumber(maxmem);\n    if (onProgress !== undefined && typeof onProgress !== 'function')\n        throw new Error('progressCb should be function');\n    const blockSize = 128 * r;\n    const blockSize32 = blockSize / 4;\n    if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n        // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n        // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n        throw new Error('Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32');\n    }\n    if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n        throw new Error('Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)');\n    }\n    if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n        throw new Error('Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32');\n    }\n    const memUsed = blockSize * (N + p);\n    if (memUsed > maxmem) {\n        throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`);\n    }\n    // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n    // Since it has only one iteration there is no reason to use async variant\n    const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n    const B32 = u32(B);\n    // Re-used between parallel iterations. Array(iterations) of B\n    const V = u32(new Uint8Array(blockSize * N));\n    const tmp = u32(new Uint8Array(blockSize));\n    let blockMixCb = () => { };\n    if (onProgress) {\n        const totalBlockMix = 2 * N * p;\n        // Invoke callback if progress changes from 10.01 to 10.02\n        // Allows to draw smooth progress bar on up to 8K screen\n        const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n        let blockMixCnt = 0;\n        blockMixCb = () => {\n            blockMixCnt++;\n            if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n                onProgress(blockMixCnt / totalBlockMix);\n        };\n    }\n    return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\nfunction scryptOutput(password, dkLen, B, V, tmp) {\n    const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n    B.fill(0);\n    V.fill(0);\n    tmp.fill(0);\n    return res;\n}\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(password, salt, opts);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        for (let i = 0, pos = 0; i < N - 1; i++) {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        }\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        for (let i = 0; i < N; i++) {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        }\n    }\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(password, salt, opts);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        let pos = 0;\n        await asyncLoop(N - 1, asyncTick, (i) => {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        });\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        await asyncLoop(N, asyncTick, (i) => {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        });\n    }\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { scrypt as scryptJs } from '@noble/hashes/scrypt';\nimport { hasBigInt, objectSpread, u8aToU8a } from '@polkadot/util';\nimport { isReady, scrypt } from '@polkadot/wasm-crypto';\nimport { randomAsU8a } from \"../random/asU8a.js\";\nimport { DEFAULT_PARAMS } from \"./defaults.js\";\nexport function scryptEncode(passphrase, salt = randomAsU8a(), params = DEFAULT_PARAMS, onlyJs) {\n  const u8a = u8aToU8a(passphrase);\n  return {\n    params,\n    password: !hasBigInt || !onlyJs && isReady() ? scrypt(u8a, salt, Math.log2(params.N), params.r, params.p) : scryptJs(u8a, salt, objectSpread({\n      dkLen: 64\n    }, params)),\n    salt\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const ENCODING = ['scrypt', 'xsalsa20-poly1305'];\nexport const ENCODING_NONE = ['none'];\nexport const ENCODING_VERSION = '3';\nexport const NONCE_LENGTH = 24;\nexport const SCRYPT_LENGTH = 32 + 3 * 4;","// Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const PKCS8_DIVIDER = new Uint8Array([161, 35, 3, 33, 0]);\nexport const PKCS8_HEADER = new Uint8Array([48, 83, 2, 1, 1, 48, 5, 6, 3, 43, 101, 112, 4, 34, 4, 32]);\nexport const PUB_LENGTH = 32;\nexport const SALT_LENGTH = 32;\nexport const SEC_LENGTH = 64;\nexport const SEED_LENGTH = 32;","// Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isUndefined, u8aEq } from '@polkadot/util';\nimport { jsonDecryptData } from '@polkadot/util-crypto';\nimport { PKCS8_DIVIDER, PKCS8_HEADER, PUB_LENGTH, SEC_LENGTH, SEED_LENGTH } from \"./defaults.js\";\nconst SEED_OFFSET = PKCS8_HEADER.length;\nexport function decodePair(passphrase, encrypted, _encType) {\n  const encType = Array.isArray(_encType) || isUndefined(_encType) ? _encType : [_encType];\n  const decrypted = jsonDecryptData(encrypted, passphrase, encType);\n  const header = decrypted.subarray(0, PKCS8_HEADER.length);\n  assert(u8aEq(header, PKCS8_HEADER), 'Invalid Pkcs8 header found in body');\n  let secretKey = decrypted.subarray(SEED_OFFSET, SEED_OFFSET + SEC_LENGTH);\n  let divOffset = SEED_OFFSET + SEC_LENGTH;\n  let divider = decrypted.subarray(divOffset, divOffset + PKCS8_DIVIDER.length); // old-style, we have the seed here\n\n  if (!u8aEq(divider, PKCS8_DIVIDER)) {\n    divOffset = SEED_OFFSET + SEED_LENGTH;\n    secretKey = decrypted.subarray(SEED_OFFSET, divOffset);\n    divider = decrypted.subarray(divOffset, divOffset + PKCS8_DIVIDER.length);\n    assert(u8aEq(divider, PKCS8_DIVIDER), 'Invalid Pkcs8 divider found in body');\n  }\n\n  const pubOffset = divOffset + PKCS8_DIVIDER.length;\n  const publicKey = decrypted.subarray(pubOffset, pubOffset + PUB_LENGTH);\n  return {\n    publicKey,\n    secretKey\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, stringToU8a, u8aFixLength } from '@polkadot/util';\nimport { naclDecrypt } from \"../nacl/index.js\";\nimport { scryptEncode, scryptFromU8a } from \"../scrypt/index.js\";\nimport { ENCODING, NONCE_LENGTH, SCRYPT_LENGTH } from \"./constants.js\";\nexport function jsonDecryptData(encrypted, passphrase, encType = ENCODING) {\n  assert(encrypted, 'No encrypted data available to decode');\n  assert(passphrase || !encType.includes('xsalsa20-poly1305'), 'Password required to decode encrypted data');\n  let encoded = encrypted;\n\n  if (passphrase) {\n    let password;\n\n    if (encType.includes('scrypt')) {\n      const {\n        params,\n        salt\n      } = scryptFromU8a(encrypted);\n      password = scryptEncode(passphrase, salt, params).password;\n      encrypted = encrypted.subarray(SCRYPT_LENGTH);\n    } else {\n      password = stringToU8a(passphrase);\n    }\n\n    encoded = naclDecrypt(encrypted.subarray(NONCE_LENGTH), encrypted.subarray(0, NONCE_LENGTH), u8aFixLength(password, 256, true));\n  }\n\n  assert(encoded, 'Unable to decode using the supplied passphrase');\n  return encoded;\n}","// Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aConcat } from '@polkadot/util';\nimport { naclEncrypt, scryptEncode, scryptToU8a } from '@polkadot/util-crypto';\nimport { PKCS8_DIVIDER, PKCS8_HEADER } from \"./defaults.js\";\nexport function encodePair({\n  publicKey,\n  secretKey\n}, passphrase) {\n  assert(secretKey, 'Expected a valid secretKey to be passed to encode');\n  const encoded = u8aConcat(PKCS8_HEADER, secretKey, PKCS8_DIVIDER, publicKey);\n\n  if (!passphrase) {\n    return encoded;\n  }\n\n  const {\n    params,\n    password,\n    salt\n  } = scryptEncode(passphrase);\n  const {\n    encrypted,\n    nonce\n  } = naclEncrypt(encoded, password.subarray(0, 32));\n  return u8aConcat(scryptToU8a(salt, params), nonce, encrypted);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport nacl from 'tweetnacl';\nimport { randomAsU8a } from \"../random/asU8a.js\";\n\n/**\n * @name naclEncrypt\n * @summary Encrypts a message using the supplied secretKey and nonce\n * @description\n * Returns an encrypted message, using the `secretKey` and `nonce`. If the `nonce` was not supplied, a random value is generated.\n * @example\n * <BR>\n *\n * ```javascript\n * import { naclEncrypt } from '@polkadot/util-crypto';\n *\n * naclEncrypt([...], [...]); // => [...]\n * ```\n */\nexport function naclEncrypt(message, secret, nonce = randomAsU8a(24)) {\n  return {\n    encrypted: nacl.secretbox(message, nonce, secret),\n    nonce\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToU8a, u8aConcat } from '@polkadot/util';\nimport { BN_LE_32_OPTS } from \"../bn.js\";\nexport function scryptToU8a(salt, {\n  N,\n  p,\n  r\n}) {\n  return u8aConcat(salt, bnToU8a(N, BN_LE_32_OPTS), bnToU8a(p, BN_LE_32_OPTS), bnToU8a(r, BN_LE_32_OPTS));\n}","// Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util';\nimport { jsonEncryptFormat } from '@polkadot/util-crypto';\nexport function pairToJson(type, {\n  address,\n  meta\n}, encoded, isEncrypted) {\n  return objectSpread(jsonEncryptFormat(encoded, ['pkcs8', type], isEncrypted), {\n    address,\n    meta\n  });\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Encode } from \"../base64/index.js\";\nimport { ENCODING, ENCODING_NONE, ENCODING_VERSION } from \"./constants.js\";\nexport function jsonEncryptFormat(encoded, contentType, isEncrypted) {\n  return {\n    encoded: base64Encode(encoded),\n    encoding: {\n      content: contentType,\n      type: isEncrypted ? ENCODING : ENCODING_NONE,\n      version: ENCODING_VERSION\n    }\n  };\n}","// Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, objectSpread, u8aConcat, u8aEmpty, u8aEq, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { blake2AsU8a, convertPublicKeyToCurve25519, convertSecretKeyToCurve25519, ed25519PairFromSeed as ed25519FromSeed, ed25519Sign, ethereumEncode, keccakAsU8a, keyExtractPath, keyFromPath, naclOpen, naclSeal, secp256k1Compress, secp256k1Expand, secp256k1PairFromSeed as secp256k1FromSeed, secp256k1Sign, signatureVerify, sr25519PairFromSeed as sr25519FromSeed, sr25519Sign, sr25519VrfSign, sr25519VrfVerify } from '@polkadot/util-crypto';\nimport { decodePair } from \"./decode.js\";\nimport { encodePair } from \"./encode.js\";\nimport { pairToJson } from \"./toJson.js\";\nconst SIG_TYPE_NONE = new Uint8Array();\nconst TYPE_FROM_SEED = {\n  ecdsa: secp256k1FromSeed,\n  ed25519: ed25519FromSeed,\n  ethereum: secp256k1FromSeed,\n  sr25519: sr25519FromSeed\n};\nconst TYPE_PREFIX = {\n  ecdsa: new Uint8Array([2]),\n  ed25519: new Uint8Array([0]),\n  ethereum: new Uint8Array([2]),\n  sr25519: new Uint8Array([1])\n};\nconst TYPE_SIGNATURE = {\n  ecdsa: (m, p) => secp256k1Sign(m, p, 'blake2'),\n  ed25519: ed25519Sign,\n  ethereum: (m, p) => secp256k1Sign(m, p, 'keccak'),\n  sr25519: sr25519Sign\n};\nconst TYPE_ADDRESS = {\n  ecdsa: p => p.length > 32 ? blake2AsU8a(p) : p,\n  ed25519: p => p,\n  ethereum: p => p.length === 20 ? p : keccakAsU8a(secp256k1Expand(p)),\n  sr25519: p => p\n};\n\nfunction isLocked(secretKey) {\n  return !secretKey || u8aEmpty(secretKey);\n}\n\nfunction vrfHash(proof, context, extra) {\n  return blake2AsU8a(u8aConcat(context || '', extra || '', proof));\n}\n/**\n * @name createPair\n * @summary Creates a keyring pair object\n * @description Creates a keyring pair object with provided account public key, metadata, and encoded arguments.\n * The keyring pair stores the account state including the encoded address and associated metadata.\n *\n * It has properties whose values are functions that may be called to perform account actions:\n *\n * - `address` function retrieves the address associated with the account.\n * - `decodedPkcs8` function is called with the account passphrase and account encoded public key.\n * It decodes the encoded public key using the passphrase provided to obtain the decoded account public key\n * and associated secret key that are then available in memory, and changes the account address stored in the\n * state of the pair to correspond to the address of the decoded public key.\n * - `encodePkcs8` function when provided with the correct passphrase associated with the account pair\n * and when the secret key is in memory (when the account pair is not locked) it returns an encoded\n * public key of the account.\n * - `meta` is the metadata that is stored in the state of the pair, either when it was originally\n * created or set via `setMeta`.\n * - `publicKey` returns the public key stored in memory for the pair.\n * - `sign` may be used to return a signature by signing a provided message with the secret\n * key (if it is in memory) using Nacl.\n * - `toJson` calls another `toJson` function and provides the state of the pair,\n * it generates arguments to be passed to the other `toJson` function including an encoded public key of the account\n * that it generates using the secret key from memory (if it has been made available in memory)\n * and the optionally provided passphrase argument. It passes a third boolean argument to `toJson`\n * indicating whether the public key has been encoded or not (if a passphrase argument was provided then it is encoded).\n * The `toJson` function that it calls returns a JSON object with properties including the `address`\n * and `meta` that are assigned with the values stored in the corresponding state variables of the account pair,\n * an `encoded` property that is assigned with the encoded public key in hex format, and an `encoding`\n * property that indicates whether the public key value of the `encoded` property is encoded or not.\n */\n\n\nexport function createPair({\n  toSS58,\n  type\n}, {\n  publicKey,\n  secretKey\n}, meta = {}, encoded = null, encTypes) {\n  const decodePkcs8 = (passphrase, userEncoded) => {\n    const decoded = decodePair(passphrase, userEncoded || encoded, encTypes);\n\n    if (decoded.secretKey.length === 64) {\n      publicKey = decoded.publicKey;\n      secretKey = decoded.secretKey;\n    } else {\n      const pair = TYPE_FROM_SEED[type](decoded.secretKey);\n      publicKey = pair.publicKey;\n      secretKey = pair.secretKey;\n    }\n  };\n\n  const recode = passphrase => {\n    isLocked(secretKey) && encoded && decodePkcs8(passphrase, encoded);\n    encoded = encodePair({\n      publicKey,\n      secretKey\n    }, passphrase); // re-encode, latest version\n\n    encTypes = undefined; // swap to defaults, latest version follows\n\n    return encoded;\n  };\n\n  const encodeAddress = () => {\n    const raw = TYPE_ADDRESS[type](publicKey);\n    return type === 'ethereum' ? ethereumEncode(raw) : toSS58(raw);\n  };\n\n  return {\n    get address() {\n      return encodeAddress();\n    },\n\n    get addressRaw() {\n      const raw = TYPE_ADDRESS[type](publicKey);\n      return type === 'ethereum' ? raw.slice(-20) : raw;\n    },\n\n    get isLocked() {\n      return isLocked(secretKey);\n    },\n\n    get meta() {\n      return meta;\n    },\n\n    get publicKey() {\n      return publicKey;\n    },\n\n    get type() {\n      return type;\n    },\n\n    // eslint-disable-next-line sort-keys\n    decodePkcs8,\n    decryptMessage: (encryptedMessageWithNonce, senderPublicKey) => {\n      assert(!isLocked(secretKey), 'Cannot encrypt with a locked key pair');\n      assert(!['ecdsa', 'ethereum'].includes(type), 'Secp256k1 not supported yet');\n      const messageU8a = u8aToU8a(encryptedMessageWithNonce);\n      return naclOpen(messageU8a.slice(24, messageU8a.length), messageU8a.slice(0, 24), convertPublicKeyToCurve25519(u8aToU8a(senderPublicKey)), convertSecretKeyToCurve25519(secretKey));\n    },\n    derive: (suri, meta) => {\n      assert(type !== 'ethereum', 'Unable to derive on this keypair');\n      assert(!isLocked(secretKey), 'Cannot derive on a locked keypair');\n      const {\n        path\n      } = keyExtractPath(suri);\n      const derived = keyFromPath({\n        publicKey,\n        secretKey\n      }, path, type);\n      return createPair({\n        toSS58,\n        type\n      }, derived, meta, null);\n    },\n    encodePkcs8: passphrase => {\n      return recode(passphrase);\n    },\n    encryptMessage: (message, recipientPublicKey, nonceIn) => {\n      assert(!isLocked(secretKey), 'Cannot encrypt with a locked key pair');\n      assert(!['ecdsa', 'ethereum'].includes(type), 'Secp256k1 not supported yet');\n      const {\n        nonce,\n        sealed\n      } = naclSeal(u8aToU8a(message), convertSecretKeyToCurve25519(secretKey), convertPublicKeyToCurve25519(u8aToU8a(recipientPublicKey)), nonceIn);\n      return u8aConcat(nonce, sealed);\n    },\n    lock: () => {\n      secretKey = new Uint8Array();\n    },\n    setMeta: additional => {\n      meta = objectSpread({}, meta, additional);\n    },\n    sign: (message, options = {}) => {\n      assert(!isLocked(secretKey), 'Cannot sign with a locked key pair');\n      return u8aConcat(options.withType ? TYPE_PREFIX[type] : SIG_TYPE_NONE, TYPE_SIGNATURE[type](u8aToU8a(message), {\n        publicKey,\n        secretKey\n      }));\n    },\n    toJson: passphrase => {\n      // NOTE: For ecdsa and ethereum, the publicKey cannot be extracted from the address. For these\n      // pass the hex-encoded publicKey through to the address portion of the JSON (before decoding)\n      // unless the publicKey is already an address\n      const address = ['ecdsa', 'ethereum'].includes(type) ? publicKey.length === 20 ? u8aToHex(publicKey) : u8aToHex(secp256k1Compress(publicKey)) : encodeAddress();\n      return pairToJson(type, {\n        address,\n        meta\n      }, recode(passphrase), !!passphrase);\n    },\n    unlock: passphrase => {\n      return decodePkcs8(passphrase);\n    },\n    verify: (message, signature, signerPublic) => {\n      return signatureVerify(message, signature, TYPE_ADDRESS[type](u8aToU8a(signerPublic))).isValid;\n    },\n    vrfSign: (message, context, extra) => {\n      assert(!isLocked(secretKey), 'Cannot sign with a locked key pair');\n\n      if (type === 'sr25519') {\n        return sr25519VrfSign(message, {\n          secretKey\n        }, context, extra);\n      }\n\n      const proof = TYPE_SIGNATURE[type](u8aToU8a(message), {\n        publicKey,\n        secretKey\n      });\n      return u8aConcat(vrfHash(proof, context, extra), proof);\n    },\n    vrfVerify: (message, vrfResult, signerPublic, context, extra) => {\n      if (type === 'sr25519') {\n        return sr25519VrfVerify(message, vrfResult, publicKey, context, extra);\n      }\n\n      const result = signatureVerify(message, u8aConcat(TYPE_PREFIX[type], vrfResult.subarray(32)), TYPE_ADDRESS[type](u8aToU8a(signerPublic)));\n      return result.isValid && u8aEq(vrfResult.subarray(0, 32), vrfHash(vrfResult.subarray(32), context, extra));\n    }\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport nacl from 'tweetnacl';\nimport { assert, u8aToU8a } from '@polkadot/util';\nimport { ed25519Sign as wasmSign, isReady } from '@polkadot/wasm-crypto';\n/**\n * @name ed25519Sign\n * @summary Signs a message using the supplied secretKey\n * @description\n * Returns message signature of `message`, using the `secretKey`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519Sign } from '@polkadot/util-crypto';\n *\n * ed25519Sign([...], [...]); // => [...]\n * ```\n */\n\nexport function ed25519Sign(message, {\n  publicKey,\n  secretKey\n}, onlyJs) {\n  assert(secretKey, 'Expected a valid secretKey');\n  const messageU8a = u8aToU8a(message);\n  return !onlyJs && isReady() ? wasmSign(publicKey, secretKey.subarray(0, 32), messageU8a) : nacl.sign.detached(messageU8a, secretKey);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util';\nimport { sr25519Sign as wasmSign } from '@polkadot/wasm-crypto';\n/**\n * @name sr25519Sign\n * @description Returns message signature of `message`, using the supplied pair\n */\n\nexport function sr25519Sign(message, {\n  publicKey,\n  secretKey\n}) {\n  assert((publicKey === null || publicKey === void 0 ? void 0 : publicKey.length) === 32, 'Expected a valid publicKey, 32-bytes');\n  assert((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) === 64, 'Expected a valid secretKey, 64-bytes');\n  return wasmSign(publicKey, secretKey, u8aToU8a(message));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name u8aEmpty\n * @summary Tests for a `Uint8Array` for emptyness\n * @description\n * Checks to see if the input `Uint8Array` has zero length or contains all 0 values.\n */\nexport function u8aEmpty(value) {\n  // on smaller values < 64 bytes, the byte-by-byte compare is faster than\n  // allocating yet another object for DataView (on large buffers the DataView\n  // is much faster)\n  for (let i = 0; i < value.length; i++) {\n    if (value[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}","// Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isHex, isU8a, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nexport class Pairs {\n  #map = {};\n\n  add(pair) {\n    this.#map[decodeAddress(pair.address).toString()] = pair;\n    return pair;\n  }\n\n  all() {\n    return Object.values(this.#map);\n  }\n\n  get(address) {\n    const pair = this.#map[decodeAddress(address).toString()];\n    assert(pair, () => `Unable to retrieve keypair '${isU8a(address) || isHex(address) ? u8aToHex(u8aToU8a(address)) : address}'`);\n    return pair;\n  }\n\n  remove(address) {\n    delete this.#map[decodeAddress(address).toString()];\n  }\n\n}","// Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, hexToU8a, isHex, isUndefined, stringToU8a } from '@polkadot/util';\nimport { base64Decode, decodeAddress, ed25519PairFromSeed as ed25519FromSeed, encodeAddress, ethereumEncode, hdEthereum, keyExtractSuri, keyFromPath, mnemonicToLegacySeed, mnemonicToMiniSecret, secp256k1PairFromSeed as secp256k1FromSeed, sr25519PairFromSeed as sr25519FromSeed } from '@polkadot/util-crypto';\nimport { DEV_PHRASE } from \"./defaults.js\";\nimport { createPair } from \"./pair/index.js\";\nimport { Pairs } from \"./pairs.js\";\nconst PairFromSeed = {\n  ecdsa: seed => secp256k1FromSeed(seed),\n  ed25519: seed => ed25519FromSeed(seed),\n  ethereum: seed => secp256k1FromSeed(seed),\n  sr25519: seed => sr25519FromSeed(seed)\n};\n\nfunction pairToPublic({\n  publicKey\n}) {\n  return publicKey;\n}\n/**\n * # @polkadot/keyring\n *\n * ## Overview\n *\n * @name Keyring\n * @summary Keyring management of user accounts\n * @description Allows generation of keyring pairs from a variety of input combinations, such as\n * json object containing account address or public key, account metadata, and account encoded using\n * `addFromJson`, or by providing those values as arguments separately to `addFromAddress`,\n * or by providing the mnemonic (seed phrase) and account metadata as arguments to `addFromMnemonic`.\n * Stores the keyring pairs in a keyring pair dictionary. Removal of the keyring pairs from the keyring pair\n * dictionary is achieved using `removePair`. Retrieval of all the stored pairs via `getPairs` or perform\n * lookup of a pair for a given account address or public key using `getPair`. JSON metadata associated with\n * an account may be obtained using `toJson` accompanied by the account passphrase.\n */\n\n\nexport class Keyring {\n  #pairs;\n  #type;\n  #ss58;\n  decodeAddress = decodeAddress;\n\n  constructor(options = {}) {\n    options.type = options.type || 'ed25519';\n    assert(['ecdsa', 'ethereum', 'ed25519', 'sr25519'].includes(options.type || 'undefined'), () => `Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '${options.type || 'unknown'}`);\n    this.#pairs = new Pairs();\n    this.#ss58 = options.ss58Format;\n    this.#type = options.type;\n  }\n  /**\n   * @description retrieve the pairs (alias for getPairs)\n   */\n\n\n  get pairs() {\n    return this.getPairs();\n  }\n  /**\n   * @description retrieve the publicKeys (alias for getPublicKeys)\n   */\n\n\n  get publicKeys() {\n    return this.getPublicKeys();\n  }\n  /**\n   * @description Returns the type of the keyring, ed25519, sr25519 or ecdsa\n   */\n\n\n  get type() {\n    return this.#type;\n  }\n  /**\n   * @name addPair\n   * @summary Stores an account, given a keyring pair, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n   */\n\n\n  addPair(pair) {\n    return this.#pairs.add(pair);\n  }\n  /**\n   * @name addFromAddress\n   * @summary Stores an account, given an account address, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n   * @description Allows user to explicitly provide separate inputs including account address or public key, and optionally\n   * the associated account metadata, and the default encoded value as arguments (that may be obtained from the json file\n   * of an account backup), and then generates a keyring pair from them that it passes to\n   * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n   */\n\n\n  addFromAddress(address, meta = {}, encoded = null, type = this.type, ignoreChecksum, encType) {\n    const publicKey = this.decodeAddress(address, ignoreChecksum);\n    return this.addPair(createPair({\n      toSS58: this.encodeAddress,\n      type\n    }, {\n      publicKey,\n      secretKey: new Uint8Array()\n    }, meta, encoded, encType));\n  }\n  /**\n   * @name addFromJson\n   * @summary Stores an account, given JSON data, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n   * @description Allows user to provide a json object argument that contains account information (that may be obtained from the json file\n   * of an account backup), and then generates a keyring pair from it that it passes to\n   * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n   */\n\n\n  addFromJson(json, ignoreChecksum) {\n    return this.addPair(this.createFromJson(json, ignoreChecksum));\n  }\n  /**\n   * @name addFromMnemonic\n   * @summary Stores an account, given a mnemonic, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n   * @description Allows user to provide a mnemonic (seed phrase that is provided when account is originally created)\n   * argument and a metadata argument that contains account information (that may be obtained from the json file\n   * of an account backup), and then generates a keyring pair from it that it passes to\n   * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n   */\n\n\n  addFromMnemonic(mnemonic, meta = {}, type = this.type) {\n    return this.addFromUri(mnemonic, meta, type);\n  }\n  /**\n   * @name addFromPair\n   * @summary Stores an account created from an explicit publicKey/secreteKey combination\n   */\n\n\n  addFromPair(pair, meta = {}, type = this.type) {\n    return this.addPair(this.createFromPair(pair, meta, type));\n  }\n  /**\n   * @name addFromSeed\n   * @summary Stores an account, given seed data, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n   * @description Stores in a keyring pair dictionary the public key of the pair as a key and the pair as the associated value.\n   * Allows user to provide the account seed as an argument, and then generates a keyring pair from it that it passes to\n   * `addPair` to store in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n   */\n\n\n  addFromSeed(seed, meta = {}, type = this.type) {\n    return this.addPair(createPair({\n      toSS58: this.encodeAddress,\n      type\n    }, PairFromSeed[type](seed), meta, null));\n  }\n  /**\n   * @name addFromUri\n   * @summary Creates an account via an suri\n   * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed). The secret can be a hex string, mnemonic phrase or a string (to be padded)\n   */\n\n\n  addFromUri(suri, meta = {}, type = this.type) {\n    return this.addPair(this.createFromUri(suri, meta, type));\n  }\n  /**\n   * @name createFromJson\n   * @description Creates a pair from a JSON keyfile\n   */\n\n\n  createFromJson({\n    address,\n    encoded,\n    encoding: {\n      content,\n      type,\n      version\n    },\n    meta\n  }, ignoreChecksum) {\n    assert(version !== '3' || content[0] === 'pkcs8', () => `Unable to decode non-pkcs8 type, [${content.join(',')}] found}`);\n    const cryptoType = version === '0' || !Array.isArray(content) ? this.type : content[1];\n    const encType = !Array.isArray(type) ? [type] : type;\n    assert(['ed25519', 'sr25519', 'ecdsa', 'ethereum'].includes(cryptoType), () => `Unknown crypto type ${cryptoType}`); // Here the address and publicKey are 32 bytes and isomorphic. This is why the address field needs to be the public key for ethereum type pairs\n\n    const publicKey = isHex(address) ? hexToU8a(address) : this.decodeAddress(address, ignoreChecksum);\n    const decoded = isHex(encoded) ? hexToU8a(encoded) : base64Decode(encoded);\n    return createPair({\n      toSS58: this.encodeAddress,\n      type: cryptoType\n    }, {\n      publicKey,\n      secretKey: new Uint8Array()\n    }, meta, decoded, encType);\n  }\n  /**\n   * @name createFromPair\n   * @summary Creates a pair from an explicit publicKey/secreteKey combination\n   */\n\n\n  createFromPair(pair, meta = {}, type = this.type) {\n    return createPair({\n      toSS58: this.encodeAddress,\n      type\n    }, pair, meta, null);\n  }\n  /**\n   * @name createFromUri\n   * @summary Creates a Keypair from an suri\n   * @description This creates a pair from the suri, but does not add it to the keyring\n   */\n\n\n  createFromUri(_suri, meta = {}, type = this.type) {\n    // here we only aut-add the dev phrase if we have a hard-derived path\n    const suri = _suri.startsWith('//') ? `${DEV_PHRASE}${_suri}` : _suri;\n    const {\n      derivePath,\n      password,\n      path,\n      phrase\n    } = keyExtractSuri(suri);\n    let seed;\n    const isPhraseHex = isHex(phrase, 256);\n\n    if (isPhraseHex) {\n      seed = hexToU8a(phrase);\n    } else {\n      const parts = phrase.split(' ');\n\n      if ([12, 15, 18, 21, 24].includes(parts.length)) {\n        seed = type === 'ethereum' ? mnemonicToLegacySeed(phrase, '', false, 64) : mnemonicToMiniSecret(phrase, password);\n      } else {\n        assert(phrase.length <= 32, 'specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes');\n        seed = stringToU8a(phrase.padEnd(32));\n      }\n    }\n\n    const derived = type === 'ethereum' ? isPhraseHex ? PairFromSeed[type](seed) // for eth, if the private key is provided as suri, it must be derived only once\n    : hdEthereum(seed, derivePath.substring(1)) : keyFromPath(PairFromSeed[type](seed), path, type);\n    return createPair({\n      toSS58: this.encodeAddress,\n      type\n    }, derived, meta, null);\n  }\n  /**\n   * @name encodeAddress\n   * @description Encodes the input into an ss58 representation\n   */\n\n\n  encodeAddress = (address, ss58Format) => {\n    return this.type === 'ethereum' ? ethereumEncode(address) : encodeAddress(address, isUndefined(ss58Format) ? this.#ss58 : ss58Format);\n  };\n  /**\n   * @name getPair\n   * @summary Retrieves an account keyring pair from the Keyring Pair Dictionary, given an account address\n   * @description Returns a keyring pair value from the keyring pair dictionary by performing\n   * a key lookup using the provided account address or public key (after decoding it).\n   */\n\n  getPair(address) {\n    return this.#pairs.get(address);\n  }\n  /**\n   * @name getPairs\n   * @summary Retrieves all account keyring pairs from the Keyring Pair Dictionary\n   * @description Returns an array list of all the keyring pair values that are stored in the keyring pair dictionary.\n   */\n\n\n  getPairs() {\n    return this.#pairs.all();\n  }\n  /**\n   * @name getPublicKeys\n   * @summary Retrieves Public Keys of all Keyring Pairs stored in the Keyring Pair Dictionary\n   * @description Returns an array list of all the public keys associated with each of the keyring pair values that are stored in the keyring pair dictionary.\n   */\n\n\n  getPublicKeys() {\n    return this.#pairs.all().map(pairToPublic);\n  }\n  /**\n   * @name removePair\n   * @description Deletes the provided input address or public key from the stored Keyring Pair Dictionary.\n   */\n\n\n  removePair(address) {\n    this.#pairs.remove(address);\n  }\n  /**\n   * @name setSS58Format;\n   * @description Sets the ss58 format for the keyring\n   */\n\n\n  setSS58Format(ss58) {\n    this.#ss58 = ss58;\n  }\n  /**\n   * @name toJson\n   * @summary Returns a JSON object associated with the input argument that contains metadata assocated with an account\n   * @description Returns a JSON object containing the metadata associated with an account\n   * when valid address or public key and when the account passphrase is provided if the account secret\n   * is not already unlocked and available in memory. Note that in [Polkadot-JS Apps](https://github.com/polkadot-js/apps) the user\n   * may backup their account to a JSON file that contains this information.\n   */\n\n\n  toJson(address, passphrase) {\n    return this.#pairs.get(address).toJson(passphrase);\n  }\n\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, hasBigInt } from '@polkadot/util';\nimport { bip39ToSeed, isReady } from '@polkadot/wasm-crypto';\nimport { mnemonicToSeedSync } from \"./bip39.js\";\nimport { mnemonicValidate } from \"./validate.js\";\n/**\n * @name mnemonicToLegacySeed\n * @summary Creates a valid Ethereum/Bitcoin-compatible seed from a mnemonic input\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate, mnemonicToLegacySeed, mnemonicValidate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean\n *\n * if (isValidMnemonic) {\n *   console.log(`Seed generated from mnemonic: ${mnemonicToLegacySeed(mnemonic)}`); => u8a\n * }\n * ```\n */\n\nexport function mnemonicToLegacySeed(mnemonic, password = '', onlyJs, byteLength = 32) {\n  assert(mnemonicValidate(mnemonic), 'Invalid bip39 mnemonic specified');\n  assert([32, 64].includes(byteLength), () => `Invalid seed length ${byteLength}, expected 32 or 64`);\n  return byteLength === 32 ? !hasBigInt || !onlyJs && isReady() ? bip39ToSeed(mnemonic, password) : mnemonicToSeedSync(mnemonic, password).subarray(0, 32) : mnemonicToSeedSync(mnemonic, password);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, stringToU8a } from '@polkadot/util';\nimport { bip39ToMiniSecret, isReady } from '@polkadot/wasm-crypto';\nimport { pbkdf2Encode } from \"../pbkdf2/index.js\";\nimport { mnemonicToEntropy } from \"./toEntropy.js\";\nimport { mnemonicValidate } from \"./validate.js\";\nexport function mnemonicToMiniSecret(mnemonic, password = '', onlyJs) {\n  assert(mnemonicValidate(mnemonic), 'Invalid bip39 mnemonic specified');\n\n  if (!onlyJs && isReady()) {\n    return bip39ToMiniSecret(mnemonic, password);\n  }\n\n  const entropy = mnemonicToEntropy(mnemonic);\n  const salt = stringToU8a(`mnemonic${password}`); // return the first 32 bytes as the seed\n\n  return pbkdf2Encode(entropy, salt).password.slice(0, 32);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasBigInt, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { isReady } from '@polkadot/wasm-crypto'; // re-export so TS *.d.ts generation is correct\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function createAsHex(fn) {\n  return (...args) => u8aToHex(fn(...args));\n}\nexport function createBitHasher(bitLength, fn) {\n  return (data, onlyJs) => fn(data, bitLength, onlyJs);\n}\nexport function createDualHasher(wa, js) {\n  return (value, bitLength = 256, onlyJs) => {\n    const u8a = u8aToU8a(value);\n    return !hasBigInt || !onlyJs && isReady() ? wa[bitLength](u8a) : js[bitLength](u8a);\n  };\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from \"./is/function.js\";\nimport { isNull } from \"./is/null.js\";\nimport { isUndefined } from \"./is/undefined.js\";\n\n/**\n * @name assert\n * @summary Checks for a valid test, if not Error is thrown.\n * @description\n * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.\n * @example\n * <BR>\n *\n * ```javascript\n * const { assert } from '@polkadot/util';\n *\n * assert(true, 'True should be true'); // passes\n * assert(false, 'False should not be true'); // Error thrown\n * assert(false, () => 'message'); // Error with 'message'\n * ```\n */\nexport function assert(condition, message) {\n  if (!condition) {\n    throw new Error(isFunction(message) ? message() : message);\n  }\n}\n/**\n * @name assertReturn\n * @description Returns when the value is not undefined/null, otherwise throws assertion error\n */\n\nexport function assertReturn(value, message) {\n  assert(!isUndefined(value) && !isNull(value), message);\n  return value;\n}\n/**\n * @name assertUnreachable\n * @description An assertion helper that ensures all codepaths are followed\n */\n\nexport function assertUnreachable(x) {\n  throw new Error(`This codepath should be unreachable. Unhandled input: ${x}`);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isNull\n * @summary Tests for a `null` values.\n * @description\n * Checks to see if the input value is `null`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isNull } from '@polkadot/util';\n *\n * console.log('isNull', isNull(null)); // => true\n * ```\n */\nexport function isNull(value) {\n  return value === null;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isUndefined\n * @summary Tests for a `undefined` values.\n * @description\n * Checks to see if the input value is `undefined`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isUndefined } from '@polkadot/util';\n *\n * console.log('isUndefined', isUndefined(void(0))); // => true\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isUndefined(value) {\n  return typeof value === 'undefined';\n}","// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { asmJsInit } from '@polkadot/wasm-crypto-asmjs';\nimport { wasmBytes } from '@polkadot/wasm-crypto-wasm';\nimport { allocString, allocU8a, getWasm, initWasm, resultString, resultU8a, withWasm } from \"./bridge.js\";\nimport * as imports from \"./imports.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nconst wasmPromise = initWasm(wasmBytes, asmJsInit, imports).catch(() => null);\nexport const bip39Generate = withWasm((wasm, words) => {\n  wasm.ext_bip39_generate(8, words);\n  return resultString();\n});\nexport const bip39ToEntropy = withWasm((wasm, phrase) => {\n  wasm.ext_bip39_to_entropy(8, ...allocString(phrase));\n  return resultU8a();\n});\nexport const bip39ToMiniSecret = withWasm((wasm, phrase, password) => {\n  wasm.ext_bip39_to_mini_secret(8, ...allocString(phrase), ...allocString(password));\n  return resultU8a();\n});\nexport const bip39ToSeed = withWasm((wasm, phrase, password) => {\n  wasm.ext_bip39_to_seed(8, ...allocString(phrase), ...allocString(password));\n  return resultU8a();\n});\nexport const bip39Validate = withWasm((wasm, phrase) => {\n  const ret = wasm.ext_bip39_validate(...allocString(phrase));\n  return ret !== 0;\n});\nexport const ed25519KeypairFromSeed = withWasm((wasm, seed) => {\n  wasm.ext_ed_from_seed(8, ...allocU8a(seed));\n  return resultU8a();\n});\nexport const ed25519Sign = withWasm((wasm, pubkey, seckey, message) => {\n  wasm.ext_ed_sign(8, ...allocU8a(pubkey), ...allocU8a(seckey), ...allocU8a(message));\n  return resultU8a();\n});\nexport const ed25519Verify = withWasm((wasm, signature, message, pubkey) => {\n  const ret = wasm.ext_ed_verify(...allocU8a(signature), ...allocU8a(message), ...allocU8a(pubkey));\n  return ret !== 0;\n});\nexport const secp256k1FromSeed = withWasm((wasm, seckey) => {\n  wasm.ext_secp_from_seed(8, ...allocU8a(seckey));\n  return resultU8a();\n});\nexport const secp256k1Compress = withWasm((wasm, pubkey) => {\n  wasm.ext_secp_pub_compress(8, ...allocU8a(pubkey));\n  return resultU8a();\n});\nexport const secp256k1Expand = withWasm((wasm, pubkey) => {\n  wasm.ext_secp_pub_expand(8, ...allocU8a(pubkey));\n  return resultU8a();\n});\nexport const secp256k1Recover = withWasm((wasm, msgHash, sig, recovery) => {\n  wasm.ext_secp_recover(8, ...allocU8a(msgHash), ...allocU8a(sig), recovery);\n  return resultU8a();\n});\nexport const secp256k1Sign = withWasm((wasm, msgHash, seckey) => {\n  wasm.ext_secp_sign(8, ...allocU8a(msgHash), ...allocU8a(seckey));\n  return resultU8a();\n});\nexport const sr25519DeriveKeypairHard = withWasm((wasm, pair, cc) => {\n  wasm.ext_sr_derive_keypair_hard(8, ...allocU8a(pair), ...allocU8a(cc));\n  return resultU8a();\n});\nexport const sr25519DeriveKeypairSoft = withWasm((wasm, pair, cc) => {\n  wasm.ext_sr_derive_keypair_soft(8, ...allocU8a(pair), ...allocU8a(cc));\n  return resultU8a();\n});\nexport const sr25519DerivePublicSoft = withWasm((wasm, pubkey, cc) => {\n  wasm.ext_sr_derive_public_soft(8, ...allocU8a(pubkey), ...allocU8a(cc));\n  return resultU8a();\n});\nexport const sr25519KeypairFromSeed = withWasm((wasm, seed) => {\n  wasm.ext_sr_from_seed(8, ...allocU8a(seed));\n  return resultU8a();\n});\nexport const sr25519Sign = withWasm((wasm, pubkey, secret, message) => {\n  wasm.ext_sr_sign(8, ...allocU8a(pubkey), ...allocU8a(secret), ...allocU8a(message));\n  return resultU8a();\n});\nexport const sr25519Verify = withWasm((wasm, signature, message, pubkey) => {\n  const ret = wasm.ext_sr_verify(...allocU8a(signature), ...allocU8a(message), ...allocU8a(pubkey));\n  return ret !== 0;\n});\nexport const sr25519Agree = withWasm((wasm, pubkey, secret) => {\n  wasm.ext_sr_agree(8, ...allocU8a(pubkey), ...allocU8a(secret));\n  return resultU8a();\n});\nexport const vrfSign = withWasm((wasm, secret, context, message, extra) => {\n  wasm.ext_vrf_sign(8, ...allocU8a(secret), ...allocU8a(context), ...allocU8a(message), ...allocU8a(extra));\n  return resultU8a();\n});\nexport const vrfVerify = withWasm((wasm, pubkey, context, message, extra, outAndProof) => {\n  const ret = wasm.ext_vrf_verify(...allocU8a(pubkey), ...allocU8a(context), ...allocU8a(message), ...allocU8a(extra), ...allocU8a(outAndProof));\n  return ret !== 0;\n});\nexport const blake2b = withWasm((wasm, data, key, size) => {\n  wasm.ext_blake2b(8, ...allocU8a(data), ...allocU8a(key), size);\n  return resultU8a();\n});\nexport const hmacSha256 = withWasm((wasm, key, data) => {\n  wasm.ext_hmac_sha256(8, ...allocU8a(key), ...allocU8a(data));\n  return resultU8a();\n});\nexport const hmacSha512 = withWasm((wasm, key, data) => {\n  wasm.ext_hmac_sha512(8, ...allocU8a(key), ...allocU8a(data));\n  return resultU8a();\n});\nexport const keccak256 = withWasm((wasm, data) => {\n  wasm.ext_keccak256(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const keccak512 = withWasm((wasm, data) => {\n  wasm.ext_keccak512(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const pbkdf2 = withWasm((wasm, data, salt, rounds) => {\n  wasm.ext_pbkdf2(8, ...allocU8a(data), ...allocU8a(salt), rounds);\n  return resultU8a();\n});\nexport const scrypt = withWasm((wasm, password, salt, log2n, r, p) => {\n  wasm.ext_scrypt(8, ...allocU8a(password), ...allocU8a(salt), log2n, r, p);\n  return resultU8a();\n});\nexport const sha256 = withWasm((wasm, data) => {\n  wasm.ext_sha256(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const sha512 = withWasm((wasm, data) => {\n  wasm.ext_sha512(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const twox = withWasm((wasm, data, rounds) => {\n  wasm.ext_twox(8, ...allocU8a(data), rounds);\n  return resultU8a();\n});\nexport function isReady() {\n  return !!getWasm();\n}\nexport function waitReady() {\n  return wasmPromise.then(() => isReady());\n}"],"names":["module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","this","negative","words","length","red","_init","Buffer","wordSize","window","require","e","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","b","len","Math","min","i","move","dest","src","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","root","f","ed2curve","nacl","gf","init","Float64Array","gf0","gf1","I","car25519","floor","sel25519","Z","M","S","pack25519","neq25519","Uint8Array","d","xi","yi","vn","unpackneg","chk","den","den2","den4","den6","set25519","unpack25519","pow2523","par25519","convertPublicKey","pk","inv25519","convertSecretKey","sk","lowlevel","crypto_hash","convertKeyPair","edKeyPair","publicKey","secretKey","randombytes","_0","_9","_121665","D2","X","Y","ts64","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","key","t0","t1","t2","t3","t4","t5","t6","t7","buffer","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","update","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","v","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b10","b11","b12","b13","b14","b15","crypto_scalarmult","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","bytes","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r3","r4","r5","r6","r7","r8","r9","mac","macpos","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","th","tl","wh","Int32Array","wl","pos","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","seeded","L","modL","reduce","crypto_sign","sm","smlen","crypto_sign_open","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","arguments","TypeError","cleanup","arr","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","nonce","open","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","keyPair","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","sign","signedMsg","mlen","detached","sig","verify","fromSeed","seed","seedLength","signatureLength","hash","hashLength","setPRNG","fn","crypto","msCrypto","getRandomValues","U32_MASK64","BigInt","_32n","fromBig","le","Number","lst","Ah","Uint32Array","Al","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u32","byteOffset","createView","DataView","rotr","from","padStart","nodeRequire","bind","setImmediate","Promise","resolve","toBytes","data","TextEncoder","encode","utf8ToBytes","assertNumber","isSafeInteger","assertHash","create","outputLen","blockLen","Hash","_cloneInto","checkOpts","def","_opts","obj","Object","assign","wrapConstructor","hashConstructor","hashC","message","digest","wrapConstructorWithOpts","hashCons","opts","_0n","_1n","_2n","_3n","_8n","POW_2_256","CURVE","P","Gx","Gy","beta","weistrass","USE_ENDOMORPHISM","JacobianPoint","Point","points","toInv","nums","scratch","invert","invertBatch","map","toAffine","toAffineBatch","fromAffine","equals","other","az2","az3","bz2","bz3","negate","double","X1","Y1","Z1","E","F","X3","Y3","Z3","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","H","ZERO","HH","HHH","V","subtract","multiplyUnsafe","scalar","normalizeScalar","k1neg","k1","k2neg","k2","splitScalarEndo","k1p","k2p","precomputeWindow","W","windows","push","wNAF","affinePoint","BASE","_WINDOW_SIZE","precomputes","pointPrecomputes","get","normalizeZ","set","windowSize","maxNumber","shiftBy","offset","wbits","pr","cached","multiply","point","fake","f1p","f2p","invZ","invZ2","WeakMap","_setWindowSize","delete","isShort","bytesToNumber","slice","isValidFieldElement","_6n","_11n","_22n","_23n","_44n","_88n","pow2","b22","b44","b88","b176","b220","b223","sqrtMod","isYOdd","assertValidity","hex","ensureBytes","header","fromCompressedHex","fromUncompressedHex","privateKey","normalizePrivateKey","msgHash","signature","recovery","truncateHash","normalizeSignature","prefix","P_","fromHex","numTo32bStr","sP","hG","toRawBytes","isCompressed","hexToBytes","toHex","toHexX","toRawX","sliceDER","parseInt","parseDERInt","bytesToHex","Signature","isUint8a","hexToNumber","sBytes","rBytesLeft","parseDERSignature","fromDER","isWithinCurveOrder","hasHighS","HALF","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHex","rHex","rLen","sLen","toCompactRawBytes","toCompactHex","concatBytes","arrays","every","result","hexes","uint8a","array","hexByte","byte","isNaN","power","modulo","divNearest","POW_2_128","c1","c2","HmacDrbg","fill","counter","hmac","values","utils","hmacSha256","hmacSync","hmacSha256Sync","incr","reseedSync","generateSync","kmdToSig","kBytes","error","fromCompact","getPublicKey","fromPrivateKey","recoverPublicKey","fromSignature","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","seedArgs","finalizeSig","recSig","canonical","der","recovered","hashed","signSync","privKey","drbg","node","nodeCrypto","web","isValidPrivateKey","bytesLength","randomPrivateKey","b32","sha256","async","subtle","createHash","messages","ckey","importKey","createHmac","forEach","sha256Sync","precompute","secp256k1PairFromSeed","onlyJs","hasBigInt","isReady","full","secp256k1FromSeed","ed25519PairFromSeed","ed25519KeypairFromSeed","sr25519PairFromU8a","fullU8a","u8aToU8a","SEC_LEN","sr25519PairFromSeed","seedU8a","sr25519KeypairFromSeed","keccakAsU8a","createDualHasher","keccak256","keccak512","keccak256Js","keccak512Js","createBitHasher","createAsHex","isNumber","value","objectKeys","keys","objectSpread","isBoolean","DEFAULT_OPTS","isLe","isNegative","hexToBn","options","stripped","hexStripPrefix","bn","isBigInt","isObject","isOn","fns","isFunction","isToBigInt","isToBn","bnToBn","isHex","toBn","toBigInt","createEmpty","createValue","valueBn","bnToU8a","arg1","arg2","BN_BE_OPTS","BN_LE_OPTS","BN_BE_32_OPTS","BN_LE_32_OPTS","BN_BE_256_OPTS","BN_LE_256_OPTS","secp256k1Expand","wasm","u8aConcat","ethereumEncode","addressOrPublic","u8aAddress","includes","address","u8aToHex","u8a","getH160","toUpperCase","config","chars","coder","base64","type","base64Validate","createValidate","base64Decode","createIs","createDecode","base64Encode","createEncode","isBn","BN_ONE","BN_TWO","BN_BILLION","MAX_U8","MAX_SAFE_INTEGER","MAX_U16","MAX_U32","compactAddLength","compactToU8a","RE_NUMBER","DeriveJunction","code","isHard","startsWith","substr","soft","test","harden","chainCode","isSoft","hard","hexToU8a","String","isString","stringToU8a","blake2AsU8a","soften","RE_JUNCTION","keyExtractPath","derivePath","parts","match","path","constructed","join","RE_CAPTURE","HMAC","_key","super","finished","destroyed","iHash","oHash","buf","digestInto","destroy","to","getPrototypeOf","pbkdf2Init","_password","_salt","dkLen","asyncTick","password","salt","DK","PRF","PRFSalt","pbkdf2Output","prfW","pbkdf2","view","ti","Ti","setInt32","ui","SHA2","padOffset","isLE","take","process","dataView","roundClean","setBigUint64","_u32_max","setUint32","oview","SHA512_Kh","SHA512_Kl","u64","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","sha512","randomAsU8a","pbkdf2Encode","passphrase","rounds","u8aPass","u8aSalt","pbkdf2Js","Maj","SHA256_K","IV","SHA256_W","SHA256","G","W15","W2","s0","s1","T1","T2","shaAsU8a","sha256Js","sha512Js","sha256AsU8a","INVALID_MNEMONIC","INVALID_ENTROPY","normalize","binaryToByte","bin","bytesToBinary","deriveChecksumBits","entropyBuffer","mnemonicToSeedSync","mnemonic","mnemonicToEntropy","_entropyBits$match","DEFAULT_WORDLIST","dividerIndex","entropyBits","checksumBits","entropyBytes","entropy","newChecksum","mnemonicValidate","bip39Validate","validateMnemonic","bip39ToEntropy","jsToEntropy","JS_HASH","WA_MHAC","hmacSha512","createSha","hmacShaAsU8a","u8aKey","U8_MAX","U16_MAX","dvI","dvO","setUint16","getUint16","setUint8","getUint8","u8aToBigInt","reverse","nToBigInt","hexToBigInt","DIV","NEG_MASK","nToU8a","valueBi","unshift","toU8a","N_BI","N_BN","secp256k1PrivateKeyTweakAdd","seckey","tweak","onlyBn","isU8a","addBn","addBi","HARDENED","hdValidatePath","NaN","MASTER_SECRET","createCoded","deriveChild","hd","indexBuffer","err","HDKD","createSeedDeriveFn","derive","keypair","keyHdkdEcdsa","keyHdkdEd25519","createDeriveFn","sr25519KeypairToU8a","sr25519DeriveHard","sr25519DeriveKeypairHard","sr25519DeriveSoft","sr25519DeriveKeypairSoft","generators","ecdsa","ed25519","ethereum","sr25519","keyFromPath","pair","keyHdkd","junction","u8aEq","u8aa","u8ab","dvA","dvB","hasher","hashType","secp256k1Sign","sigBytes","recoveryParam","naclOpen","sealed","senderBoxPublic","receiverBoxSecret","convertSecretKeyToCurve25519","convertPublicKeyToCurve25519","assertReturn","naclSeal","senderBoxSecret","receiverBoxPublic","secp256k1Compress","U8A_WRAP_ETHEREUM","U8A_WRAP_PREFIX","U8A_WRAP_POSTFIX","WRAP_LEN","u8aIsWrapped","withEthereum","ed25519Verify","messageU8a","publicKeyU8a","signatureU8a","wasmVerify","secp256k1Recover","sr25519Verify","secp256k1VerifyHasher","signerAddr","inputAddr","secp256k1Verify","VERIFIERS_ECDSA","VERIFIERS","CRYPTO_TYPES","verifyDetect","verifiers","isValid","some","verifyMultisig","none","signatureVerify","addressOrPublicKey","decodeAddress","isWrapped","isWrappedBytes","verifyFn","getVerifyFn","u8aUnwrapBytes","u8aWrapBytes","EMPTY_U8A","sr25519VrfSign","context","extra","vrfSign","sr25519VrfVerify","signOutput","proofU8a","vrfVerify","u8aFixLength","atStart","naclDecrypt","encrypted","secret","u8aToBn","DEFAULT_PARAMS","scryptFromU8a","params","rotl","XorAndSalsa","pi","ii","oi","y00","y01","y02","y03","y04","y05","y06","y07","y08","y09","y10","y11","y12","y13","y14","y15","x00","x01","x02","x03","x04","x05","x06","x07","x08","x09","BlockMix","head","tail","scryptInit","maxmem","onProgress","blockSize","blockSize32","memUsed","B32","blockMixCb","totalBlockMix","callbackPer","blockMixCnt","scryptOutput","scrypt","Pi","scryptEncode","log2","scryptJs","ENCODING","ENCODING_NONE","PKCS8_DIVIDER","PKCS8_HEADER","SEED_OFFSET","decodePair","_encType","decrypted","encType","encoded","jsonDecryptData","isUndefined","divOffset","divider","pubOffset","encodePair","naclEncrypt","scryptToU8a","pairToJson","isEncrypted","meta","contentType","encoding","content","version","jsonEncryptFormat","SIG_TYPE_NONE","TYPE_FROM_SEED","ed25519FromSeed","sr25519FromSeed","TYPE_PREFIX","TYPE_SIGNATURE","wasmSign","TYPE_ADDRESS","isLocked","u8aEmpty","vrfHash","proof","createPair","toSS58","encTypes","decodePkcs8","userEncoded","decoded","recode","encodeAddress","raw","addressRaw","decryptMessage","encryptedMessageWithNonce","senderPublicKey","suri","derived","encodePkcs8","encryptMessage","recipientPublicKey","nonceIn","lock","setMeta","additional","withType","toJson","unlock","signerPublic","vrfResult","Pairs","all","remove","PairFromSeed","pairToPublic","Keyring","ss58Format","pairs","getPairs","publicKeys","getPublicKeys","addPair","addFromAddress","ignoreChecksum","addFromJson","json","createFromJson","addFromMnemonic","addFromUri","addFromPair","createFromPair","addFromSeed","createFromUri","cryptoType","_suri","phrase","matches","isNull","keyExtractSuri","isPhraseHex","bip39ToSeed","mnemonicToLegacySeed","bip39ToMiniSecret","mnemonicToMiniSecret","padEnd","endsWith","hdEthereum","substring","getPair","removePair","setSS58Format","ss58","wa","js","condition","initWasm","wasmBytes","asmJsInit","imports","catch","withWasm","ext_bip39_generate","resultString","ext_bip39_to_entropy","allocString","resultU8a","ext_bip39_to_mini_secret","ext_bip39_to_seed","ext_bip39_validate","ext_ed_from_seed","allocU8a","ed25519Sign","pubkey","ext_ed_sign","ext_ed_verify","ext_secp_from_seed","ext_secp_pub_compress","ext_secp_pub_expand","ext_secp_recover","ext_secp_sign","cc","ext_sr_derive_keypair_hard","ext_sr_derive_keypair_soft","ext_sr_derive_public_soft","ext_sr_from_seed","sr25519Sign","ext_sr_sign","ext_sr_verify","ext_sr_agree","ext_vrf_sign","outAndProof","ext_vrf_verify","blake2b","ext_blake2b","ext_hmac_sha256","ext_hmac_sha512","ext_keccak256","ext_keccak512","ext_pbkdf2","log2n","ext_scrypt","ext_sha256","ext_sha512","ext_twox","getWasm"],"sourceRoot":""}
{"version":3,"file":"static/js/70.7f4a8409.chunk.js","mappings":"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","sources":["config.ts","utils.ts","page/rewards/worker.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import Big from 'big.js';\nimport { gql } from \"@apollo/client\";\n\nexport const CRAB_REWARD = 200000000;\nexport const CKTON_REWARD = 8000;\nexport const STAGE_REWARDS_RATE = 0.175;  // 17.5%\nexport const MIN_KSM_REWARDS = new Big('0.00000001');\nexport const KSM_PRECISIONS = new Big(\"1000000000000\");\n\nexport const GET_CONTRIBUTORS_POWER = gql`\n  query GetContributorsPower($first: Int!, $offset: Int!) {\n    crowdloanWhoStatistics(orderBy: TOTAL_BALANCE_DESC, first: $first, offset: $offset) {\n      totalCount\n      pageInfo{\n        hasNextPage\n      }\n      nodes {\n        user\n        totalPower\n        totalBalance\n      }\n    }\n  }\n`;\n\nexport const GET_REFERRALS_POWER = gql`\n  query GetReferralsPower($first: Int!, $offset: Int!) {\n    crowdloanReferStatistics(first: $first, offset: $offset) {\n      totalCount\n      pageInfo {\n        hasNextPage\n      }\n      nodes {\n        user\n        totalPower\n        totalBalance\n      }\n    }\n  }\n`;\n\nexport const GET_USERS_NFT_CLAIMED = gql`\n  query GetUserNftClaimed($first: Int!, $offset: Int!) {\n    remarkedNftAddresses(orderBy: [EXTRINSIC_TIMESTAMP_ASC], first: $first, offset: $offset) {\n      totalCount\n      pageInfo {\n        hasNextPage\n      }\n      nodes {\n        signer\n        addressValue\n        extrinsicHash\n      }\n    }\n  }\n`;\n","import { decodeAddress, encodeAddress } from \"@polkadot/keyring\";\nimport { hexToU8a, u8aToHex } from \"@polkadot/util\";\nimport { Keyring } from \"@polkadot/keyring\";\nimport Big from 'big.js';\nimport { ethers } from 'ethers';\nimport { CRAB_REWARD, CKTON_REWARD, KSM_PRECISIONS, MIN_KSM_REWARDS, STAGE_REWARDS_RATE } from './config';\nimport type {\n  TypeGetUserNftClaimedNode,\n  TypeContributorsNode, TypeReferralsNode,\n  TypeRewardsTableDataSource, TypeNftTableDataSource\n} from './type';\n\nexport const shortAddress = (address = \"\") => {\n  if (address.length && address.length > 12) {\n    return `${address.slice(0, 5)}...${address.slice(address.length - 5)}`;\n  }\n  return address;\n};\n\nexport const polkadotAddressToPublicKey = (address: string) => u8aToHex(decodeAddress(address));\nexport const publicKeyToPolkadotAddress = (publicKey: string) => {\n  try {\n    const address = encodeAddress(hexToU8a(publicKey));\n    const keyring = new Keyring();\n    keyring.setSS58Format(2); // Kusama format address\n    return keyring.addFromAddress(address).address;\n  } catch (error) {\n    console.error(error);\n    return publicKey;\n  }\n};\n\nexport const downloadCsv = (data: string, filename = 'transferx.csv', type = 'data:text/csv;charset=utf-8') => {\n  const file = new Blob([\"\\ufeff\" + data], { type: type });\n  const url = URL.createObjectURL(file);\n\n  const a = document.createElement(\"a\");\n  a.style.display = 'none';\n  a.href = url;\n  a.download = filename;\n  document.body.appendChild(a);\n  a.click();\n\n  setTimeout(function() {\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }, 0);\n};\n\nexport const transformRewardsData = (nodesContributor: TypeContributorsNode[], nodesReferral: TypeReferralsNode[], dataSent: string[][] = []) => {\n  let totalPower = Big(0);\n  let totalBalance = Big(0);\n  let totalStageCRab = Big(0);\n  let totalStageCKton = Big(0);\n  let totalCrabNextSend = Big(0);\n  let totalKtonNextSend = Big(0);\n  const csvRows: string[][] = [];\n  const rewardsTableDataSource: TypeRewardsTableDataSource[] = [];\n\n  nodesReferral.forEach(node => {\n    totalPower = totalPower.add(node.totalPower);\n  });\n  nodesContributor.forEach(node => {\n    totalPower = totalPower.add(node.totalPower);\n    totalBalance = totalBalance.add(node.totalBalance);\n  });\n\n  nodesContributor.forEach((nodeContributor) => {\n    const nodeReferral = nodesReferral.find(v => v.user === polkadotAddressToPublicKey(nodeContributor.user));\n    const share = Big(nodeContributor.totalPower).add(nodeReferral ? nodeReferral.totalPower : 0).div(totalPower);\n\n    const stageCRabReward = share.times(CRAB_REWARD).times(STAGE_REWARDS_RATE);\n    const stageCKtonReward = share.times(CKTON_REWARD).times(STAGE_REWARDS_RATE);\n\n    totalStageCRab = totalStageCRab.add(stageCRabReward);\n    totalStageCKton = totalStageCKton.add(stageCKtonReward);\n\n    const sentCrab = dataSent.find(v => v[0] === nodeContributor.user && v[1] === 'ring');\n    const sentKton = dataSent.find(v => v[0] === nodeContributor.user && v[1] === 'kton');\n\n    const differCrab = stageCRabReward.minus(sentCrab ? sentCrab[2] : 0);\n    const differKton = stageCKtonReward.minus(sentKton ? sentKton[2] : 0);\n    if (differCrab.gte(MIN_KSM_REWARDS)) {\n      totalCrabNextSend = totalCrabNextSend.add(differCrab);\n      csvRows.push([nodeContributor.user, 'ring', differCrab.toFixed(8), 'kusama']);\n    }\n    if (differKton.gte(MIN_KSM_REWARDS)) {\n      totalKtonNextSend = totalKtonNextSend.add(differKton);\n      csvRows.push([nodeContributor.user, 'kton', differKton.toFixed(8), 'kusama']);\n    }\n\n    rewardsTableDataSource.push({\n      key: rewardsTableDataSource.length,\n      index: rewardsTableDataSource.length + 1,\n      address: nodeContributor.user,\n      ksmAsContributor: Big(nodeContributor.totalBalance).div(KSM_PRECISIONS).toFixed(8),\n      ksmAsReferral: Big(nodeReferral ? nodeReferral.totalBalance : 0).div(KSM_PRECISIONS).toFixed(8),\n      stageCRabRewards: stageCRabReward.toFixed(8),\n      stageCKtonRewards: stageCKtonReward.toFixed(8),\n      sentCRab: sentCrab ? sentCrab[2] : '0.00000000',\n      sentKton: sentKton ? sentKton[2] : '0.00000000',\n      differCrab: differCrab.toFixed(8),\n      differKton: differKton.toFixed(8),\n    });\n  });\n\n  nodesReferral.forEach((nodeReferral) => {\n    const address = publicKeyToPolkadotAddress(nodeReferral.user);\n    if (!rewardsTableDataSource.find(v => v.address === address)) {\n      const share = Big(nodeReferral.totalPower).div(totalPower);\n      const stageCRabReward = share.times(CRAB_REWARD).times(STAGE_REWARDS_RATE);\n      const stageCKtonReward = share.times(CKTON_REWARD).times(STAGE_REWARDS_RATE);\n\n      totalStageCRab = totalStageCRab.add(stageCRabReward);\n      totalStageCKton = totalStageCKton.add(stageCKtonReward);\n\n      const sentCrab = dataSent.find(v => v[0] === address && v[1] === 'ring');\n      const sentKton = dataSent.find(v => v[0] === address && v[1] === 'kton');\n\n      const differCrab = stageCRabReward.minus(sentCrab ? sentCrab[2] : 0);\n      const differKton = stageCKtonReward.minus(sentKton ? sentKton[2] : 0);\n      if (differCrab.gte(MIN_KSM_REWARDS)) {\n        totalCrabNextSend = totalCrabNextSend.add(differCrab);\n        csvRows.push([address, 'ring', differCrab.toFixed(8), 'kusama']);\n      }\n      if (differKton.gte(MIN_KSM_REWARDS)) {\n        totalKtonNextSend = totalKtonNextSend.add(differKton);\n        csvRows.push([address, 'kton', differKton.toFixed(8), 'kusama']);\n      }\n\n      rewardsTableDataSource.push({\n        key: rewardsTableDataSource.length,\n        index: rewardsTableDataSource.length + 1,\n        address: address,\n        ksmAsContributor: Big(0).toFixed(8),\n        ksmAsReferral: Big(nodeReferral.totalBalance).div(KSM_PRECISIONS).toFixed(8),\n        stageCRabRewards: stageCRabReward.toFixed(8),\n        stageCKtonRewards: stageCKtonReward.toFixed(8),\n        sentCRab: sentCrab ? sentCrab[2] : '0.00000000',\n        sentKton: sentKton ? sentKton[2] : '0.00000000',\n        differCrab: differCrab.toFixed(8),\n        differKton: differKton.toFixed(8),\n      });\n    }\n  });\n\n  return {\n    totalPower: totalPower.toString(),\n    totalBalance: totalBalance.div(KSM_PRECISIONS).toFixed(8),\n    totalStageCRab: totalStageCRab.toFixed(8),\n    totalStageCKton: totalStageCKton.toFixed(8),\n    totalCrabNextSend: totalCrabNextSend.toFixed(8),\n    totalKtonNextSend: totalKtonNextSend.toFixed(8),\n    csvRows, rewardsTableDataSource,\n  };\n};\n\nexport const transformNftsData = (data: string[][], nodes: TypeGetUserNftClaimedNode[]) => {\n  const csvRows: string[] = [];\n  let nftTableDataSource: TypeNftTableDataSource[] = [];\n\n  for (let value of data) {\n    const claim = nodes?.find(v => v.signer === value[0]);\n    nftTableDataSource.push({\n      key: 0,\n      index: 0,\n      address: value[0],\n      ksmContribute: Big(value[1]).div(KSM_PRECISIONS).toFixed(8),\n      claimAddress: claim ? { address: claim.addressValue, extrinsicHash: claim.extrinsicHash } : null,\n      isClaimed: claim ? true :false,\n    });\n    claim && ethers.utils.isAddress(claim.addressValue) && csvRows.push(claim.addressValue);\n  }\n\n  nftTableDataSource = nftTableDataSource.map((value, index) => ({\n    ...value,\n    key: index,\n    index: nftTableDataSource.length - index,\n  }));\n\n  return {\n    csvRows, nftTableDataSource,\n  };\n};\n\n","import { transformRewardsData } from '../../utils';\n\nonmessage = (ev) => {\n  const dataSent = require('./dataSent.json');\n  const result = transformRewardsData(ev.data[0], ev.data[1], dataSent);\n  postMessage(result);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [807,177], () => (__webpack_require__(9802)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"177\":\"47e5b8f0\",\"807\":\"45558b2c\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/crab-plo-rewards/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t70: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkcrab_plo_rewards\"] = self[\"webpackChunkcrab_plo_rewards\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([\n\t\t__webpack_require__.e(807),\n\t\t__webpack_require__.e(177)\n\t]).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["CRAB_REWARD","CKTON_REWARD","STAGE_REWARDS_RATE","MIN_KSM_REWARDS","Big","KSM_PRECISIONS","polkadotAddressToPublicKey","gql","address","u8aToHex","decodeAddress","publicKeyToPolkadotAddress","publicKey","encodeAddress","hexToU8a","keyring","Keyring","setSS58Format","addFromAddress","error","console","onmessage","ev","dataSent","require","result","nodesContributor","nodesReferral","totalPower","totalBalance","totalStageCRab","totalStageCKton","totalCrabNextSend","totalKtonNextSend","csvRows","rewardsTableDataSource","forEach","node","add","nodeContributor","nodeReferral","find","v","user","share","div","stageCRabReward","times","stageCKtonReward","sentCrab","sentKton","differCrab","minus","differKton","gte","push","toFixed","key","length","index","ksmAsContributor","ksmAsReferral","stageCRabRewards","stageCKtonRewards","sentCRab","toString","transformRewardsData","data","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","x","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","nmd","paths","children","p","installedChunks","importScripts","chunkLoadingGlobal","self","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}
{"version":3,"file":"static/js/177.4001e65a.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@polkadot/util/node_modules/bn.js/lib/bn.js","../node_modules/@scure/base/index.js","../node_modules/ed2curve/ed2curve.js","../node_modules/tslib/tslib.es6.js","../node_modules/tweetnacl/nacl-fast.js","../node_modules/@polkadot/wasm-crypto-wasm/cjs/bytes.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/cryptoBrowser.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js","../node_modules/@babel/runtime/helpers/esm/checkPrivateRedeclaration.js","../node_modules/@babel/runtime/helpers/esm/classExtractFieldDescriptor.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js","../node_modules/@babel/runtime/helpers/esm/classApplyDescriptorGet.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js","../node_modules/@babel/runtime/helpers/esm/classApplyDescriptorSet.js","../node_modules/@noble/secp256k1/lib/esm/index.js","../node_modules/@polkadot/util-crypto/secp256k1/pair/fromSeed.js","../node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js","../node_modules/@polkadot/util-crypto/sr25519/pair/fromU8a.js","../node_modules/@polkadot/util-crypto/sr25519/pair/fromSeed.js","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@polkadot/util-crypto/keccak/asU8a.js","../node_modules/@polkadot/util/is/number.js","../node_modules/@polkadot/util/object/keys.js","../node_modules/@polkadot/util/object/spread.js","../node_modules/@polkadot/util/is/boolean.js","../node_modules/@polkadot/util/hex/toBn.js","../node_modules/@polkadot/util/is/bigInt.js","../node_modules/@polkadot/util/is/object.js","../node_modules/@polkadot/util/is/helpers.js","../node_modules/@polkadot/util/is/toBigInt.js","../node_modules/@polkadot/util/is/toBn.js","../node_modules/@polkadot/util/bn/toBn.js","../node_modules/@polkadot/util/bn/toU8a.js","../node_modules/@polkadot/util-crypto/bn.js","../node_modules/@polkadot/util-crypto/secp256k1/expand.js","../node_modules/@polkadot/util-crypto/ethereum/encode.js","../node_modules/@polkadot/util-crypto/base64/bs64.js","../node_modules/@polkadot/util/is/bn.js","../node_modules/@polkadot/util/bn/consts.js","../node_modules/@polkadot/util/compact/toU8a.js","../node_modules/@polkadot/util/compact/addLength.js","../node_modules/@polkadot/util-crypto/key/DeriveJunction.js","../node_modules/@polkadot/util/is/string.js","../node_modules/@polkadot/util-crypto/key/extractPath.js","../node_modules/@polkadot/util-crypto/key/extractSuri.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/hashes/esm/pbkdf2.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@polkadot/util-crypto/random/asU8a.js","../node_modules/@polkadot/util-crypto/pbkdf2/encode.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/@polkadot/util-crypto/sha/asU8a.js","../node_modules/@polkadot/util-crypto/mnemonic/bip39-en.js","../node_modules/@polkadot/util-crypto/mnemonic/bip39.js","../node_modules/@polkadot/util-crypto/mnemonic/validate.js","../node_modules/@polkadot/util-crypto/mnemonic/toLegacySeed.js","../node_modules/@polkadot/util-crypto/mnemonic/toEntropy.js","../node_modules/@polkadot/util-crypto/mnemonic/toMiniSecret.js","../node_modules/@polkadot/util-crypto/hmac/shaAsU8a.js","../node_modules/@polkadot/util/bi/consts.js","../node_modules/@polkadot/util/u8a/toBigInt.js","../node_modules/@polkadot/util/bi/toBigInt.js","../node_modules/@polkadot/util/hex/toBigInt.js","../node_modules/@polkadot/util/bi/toU8a.js","../node_modules/@polkadot/util-crypto/secp256k1/tweakAdd.js","../node_modules/@polkadot/util-crypto/hd/validatePath.js","../node_modules/@polkadot/util-crypto/hd/ethereum/index.js","../node_modules/@polkadot/util-crypto/secp256k1/deriveHard.js","../node_modules/@polkadot/util-crypto/key/hdkdDerive.js","../node_modules/@polkadot/util-crypto/key/hdkdEcdsa.js","../node_modules/@polkadot/util-crypto/ed25519/deriveHard.js","../node_modules/@polkadot/util-crypto/key/hdkdEd25519.js","../node_modules/@polkadot/util-crypto/sr25519/derive.js","../node_modules/@polkadot/util-crypto/sr25519/pair/toU8a.js","../node_modules/@polkadot/util-crypto/sr25519/deriveHard.js","../node_modules/@polkadot/util-crypto/sr25519/deriveSoft.js","../node_modules/@polkadot/util-crypto/key/fromPath.js","../node_modules/@polkadot/util-crypto/key/hdkdSr25519.js","../node_modules/@polkadot/keyring/defaults.js","../node_modules/@polkadot/util/u8a/eq.js","../node_modules/@polkadot/util-crypto/secp256k1/hasher.js","../node_modules/@polkadot/util-crypto/secp256k1/sign.js","../node_modules/@polkadot/util-crypto/nacl/open.js","../node_modules/@polkadot/util-crypto/ed25519/convertKey.js","../node_modules/@polkadot/util-crypto/nacl/seal.js","../node_modules/@polkadot/util-crypto/secp256k1/compress.js","../node_modules/@polkadot/util/u8a/wrap.js","../node_modules/@polkadot/util-crypto/ed25519/verify.js","../node_modules/@polkadot/util-crypto/secp256k1/recover.js","../node_modules/@polkadot/util-crypto/sr25519/verify.js","../node_modules/@polkadot/util-crypto/signature/verify.js","../node_modules/@polkadot/util-crypto/secp256k1/verify.js","../node_modules/@polkadot/util-crypto/sr25519/vrfSign.js","../node_modules/@polkadot/util-crypto/sr25519/vrfVerify.js","../node_modules/@polkadot/util/u8a/fixLength.js","../node_modules/@polkadot/util-crypto/nacl/decrypt.js","../node_modules/@polkadot/util/u8a/toBn.js","../node_modules/@polkadot/util-crypto/scrypt/defaults.js","../node_modules/@polkadot/util-crypto/scrypt/fromU8a.js","../node_modules/@noble/hashes/esm/scrypt.js","../node_modules/@polkadot/util-crypto/scrypt/encode.js","../node_modules/@polkadot/util-crypto/json/constants.js","../node_modules/@polkadot/keyring/pair/defaults.js","../node_modules/@polkadot/keyring/pair/decode.js","../node_modules/@polkadot/util-crypto/json/decryptData.js","../node_modules/@polkadot/keyring/pair/encode.js","../node_modules/@polkadot/util-crypto/nacl/encrypt.js","../node_modules/@polkadot/util-crypto/scrypt/toU8a.js","../node_modules/@polkadot/keyring/pair/toJson.js","../node_modules/@polkadot/util-crypto/json/encryptFormat.js","../node_modules/@polkadot/keyring/pair/index.js","../node_modules/@polkadot/util-crypto/ed25519/sign.js","../node_modules/@polkadot/util-crypto/sr25519/sign.js","../node_modules/@polkadot/util/u8a/empty.js","../node_modules/@polkadot/keyring/pairs.js","../node_modules/@polkadot/keyring/keyring.js","../node_modules/@polkadot/util-crypto/address/checksum.js","../node_modules/@polkadot/util-crypto/address/decode.js","../node_modules/@substrate/ss58-registry/index.js","../node_modules/@polkadot/networks/defaults.js","../node_modules/@polkadot/networks/genesis.js","../node_modules/@polkadot/networks/interfaces.js","../node_modules/@polkadot/util-crypto/address/defaults.js","../node_modules/@polkadot/util-crypto/address/encode.js","../node_modules/@polkadot/util-crypto/address/sshash.js","../node_modules/@polkadot/util-crypto/base32/helpers.js","../node_modules/@polkadot/util-crypto/base58/bs58.js","../node_modules/@noble/hashes/esm/_blake2.js","../node_modules/@noble/hashes/esm/blake2b.js","../node_modules/@polkadot/util-crypto/blake2/asU8a.js","../node_modules/@polkadot/util-crypto/helpers.js","../node_modules/@polkadot/util/assert.js","../node_modules/@polkadot/util/has.js","../node_modules/@polkadot/util/hex/alphabet.js","../node_modules/@polkadot/util/hex/stripPrefix.js","../node_modules/@polkadot/util/hex/toU8a.js","../node_modules/@polkadot/util/is/function.js","../node_modules/@polkadot/util/is/hex.js","../node_modules/@polkadot/util/is/null.js","../node_modules/@polkadot/util/is/u8a.js","../node_modules/@polkadot/util/is/undefined.js","../node_modules/@polkadot/x-textencoder/fallback.js","../node_modules/@polkadot/util/string/toU8a.js","../node_modules/@polkadot/x-textencoder/browser.js","../node_modules/@polkadot/util/u8a/concat.js","../node_modules/@polkadot/util/u8a/toHex.js","../node_modules/@polkadot/util/u8a/toU8a.js","../node_modules/@polkadot/util/is/buffer.js","../node_modules/@polkadot/wasm-crypto-wasm/bytes.js","../node_modules/@polkadot/wasm-crypto-wasm/fflate.js","../node_modules/@polkadot/wasm-crypto-wasm/data.js","../node_modules/@polkadot/wasm-crypto-wasm/base64.js","../node_modules/@polkadot/x-textdecoder/fallback.js","../node_modules/@polkadot/util/u8a/toString.js","../node_modules/@polkadot/x-textdecoder/browser.js","../node_modules/@polkadot/wasm-crypto/bridge.js","../node_modules/@polkadot/wasm-crypto/imports.js","../node_modules/@polkadot/wasm-crypto/bundle.js","../node_modules/@polkadot/wasm-crypto-asmjs/empty.js","../node_modules/@polkadot/x-bigint/index.js","../node_modules/@polkadot/x-global/index.js","../node_modules/@polkadot/x-randomvalues/browser.js","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/inspect.mjs","../node_modules/graphql/language/ast.mjs","../node_modules/graphql/language/blockString.mjs","../node_modules/graphql/language/characterClasses.mjs","../node_modules/graphql/language/kinds.mjs","../node_modules/graphql/jsutils/instanceOf.mjs","../node_modules/graphql/language/source.mjs"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64url = exports.base64 = exports.base32crockford = exports.base32hex = exports.base32 = exports.base16 = exports.utils = exports.assertNumber = void 0;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexports.utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.base58check = base58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const [prefix, _words] = [str.slice(0, sepIndex), str.slice(sepIndex + 1)];\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString;\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n","/*\n * ed2curve: convert Ed25519 signing key pair into Curve25519\n * key pair suitable for Diffie-Hellman key exchange.\n *\n * Written by Dmitry Chestnykh in 2014. Public domain.\n */\n/* jshint newcap: false */\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f(require('tweetnacl'));\n  else root.ed2curve = f(root.nacl);\n}(this, function(nacl) {\n  'use strict';\n  if (!nacl) throw new Error('tweetnacl not loaded');\n\n  // -- Operations copied from TweetNaCl.js. --\n\n  var gf = function(init) {\n    var i, r = new Float64Array(16);\n    if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n    return r;\n  };\n\n  var gf0 = gf(),\n      gf1 = gf([1]),\n      D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n      I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\n  function car25519(o) {\n    var c;\n    var i;\n    for (i = 0; i < 16; i++) {\n      o[i] += 65536;\n      c = Math.floor(o[i] / 65536);\n      o[(i+1)*(i<15?1:0)] += c - 1 + 37 * (c-1) * (i===15?1:0);\n      o[i] -= (c * 65536);\n    }\n  }\n\n  function sel25519(p, q, b) {\n    var t, c = ~(b-1);\n    for (var i = 0; i < 16; i++) {\n      t = c & (p[i] ^ q[i]);\n      p[i] ^= t;\n      q[i] ^= t;\n    }\n  }\n\n  function unpack25519(o, n) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n    o[15] &= 0x7fff;\n  }\n\n  // addition\n  function A(o, a, b) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = (a[i] + b[i])|0;\n  }\n\n  // subtraction\n  function Z(o, a, b) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = (a[i] - b[i])|0;\n  }\n\n  // multiplication\n  function M(o, a, b) {\n    var i, j, t = new Float64Array(31);\n    for (i = 0; i < 31; i++) t[i] = 0;\n    for (i = 0; i < 16; i++) {\n      for (j = 0; j < 16; j++) {\n        t[i+j] += a[i] * b[j];\n      }\n    }\n    for (i = 0; i < 15; i++) {\n      t[i] += 38 * t[i+16];\n    }\n    for (i = 0; i < 16; i++) o[i] = t[i];\n    car25519(o);\n    car25519(o);\n  }\n\n  // squaring\n  function S(o, a) {\n    M(o, a, a);\n  }\n\n  // inversion\n  function inv25519(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++) c[a] = i[a];\n    for (a = 253; a >= 0; a--) {\n      S(c, c);\n      if(a !== 2 && a !== 4) M(c, c, i);\n    }\n    for (a = 0; a < 16; a++) o[a] = c[a];\n  }\n\n  function pack25519(o, n) {\n    var i, j, b;\n    var m = gf(), t = gf();\n    for (i = 0; i < 16; i++) t[i] = n[i];\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (j = 0; j < 2; j++) {\n      m[0] = t[0] - 0xffed;\n      for (i = 1; i < 15; i++) {\n        m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n        m[i-1] &= 0xffff;\n      }\n      m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n      b = (m[15]>>16) & 1;\n      m[14] &= 0xffff;\n      sel25519(t, m, 1-b);\n    }\n    for (i = 0; i < 16; i++) {\n      o[2*i] = t[i] & 0xff;\n      o[2*i+1] = t[i] >> 8;\n    }\n  }\n\n  function par25519(a) {\n    var d = new Uint8Array(32);\n    pack25519(d, a);\n    return d[0] & 1;\n  }\n\n  function vn(x, xi, y, yi, n) {\n    var i, d = 0;\n    for (i = 0; i < n; i++) d |= x[xi + i] ^ y[yi + i];\n    return (1 & ((d - 1) >>> 8)) - 1;\n  }\n\n  function crypto_verify_32(x, xi, y, yi) {\n    return vn(x, xi, y, yi, 32);\n  }\n\n  function neq25519(a, b) {\n    var c = new Uint8Array(32), d = new Uint8Array(32);\n    pack25519(c, a);\n    pack25519(d, b);\n    return crypto_verify_32(c, 0, d, 0);\n  }\n\n  function pow2523(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++) c[a] = i[a];\n    for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if (a !== 1) M(c, c, i);\n    }\n    for (a = 0; a < 16; a++) o[a] = c[a];\n  }\n\n  function set25519(r, a) {\n    var i;\n    for (i = 0; i < 16; i++) r[i] = a[i] | 0;\n  }\n\n  function unpackneg(r, p) {\n    var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n    set25519(r[2], gf1);\n    unpack25519(r[1], p);\n    S(num, r[1]);\n    M(den, num, D);\n    Z(num, num, r[2]);\n    A(den, r[2], den);\n\n    S(den2, den);\n    S(den4, den2);\n    M(den6, den4, den2);\n    M(t, den6, num);\n    M(t, t, den);\n\n    pow2523(t, t);\n    M(t, t, num);\n    M(t, t, den);\n    M(t, t, den);\n    M(r[0], t, den);\n\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) M(r[0], r[0], I);\n\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) return -1;\n\n    if (par25519(r[0]) === (p[31] >> 7)) Z(r[0], gf0, r[0]);\n\n    M(r[3], r[0], r[1]);\n    return 0;\n  }\n\n  // ----\n\n  // Converts Ed25519 public key to Curve25519 public key.\n  // montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p\n  function convertPublicKey(pk) {\n    var z = new Uint8Array(32),\n      q = [gf(), gf(), gf(), gf()],\n      a = gf(), b = gf();\n\n    if (unpackneg(q, pk)) return null; // reject invalid key\n\n    var y = q[1];\n\n    A(a, gf1, y);\n    Z(b, gf1, y);\n    inv25519(b, b);\n    M(a, a, b);\n\n    pack25519(z, a);\n    return z;\n  }\n\n  // Converts Ed25519 secret key to Curve25519 secret key.\n  function convertSecretKey(sk) {\n    var d = new Uint8Array(64), o = new Uint8Array(32), i;\n    nacl.lowlevel.crypto_hash(d, sk, 32);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    for (i = 0; i < 32; i++) o[i] = d[i];\n    for (i = 0; i < 64; i++) d[i] = 0;\n    return o;\n  }\n\n  function convertKeyPair(edKeyPair) {\n    var publicKey = convertPublicKey(edKeyPair.publicKey);\n    if (!publicKey) return null;\n    return {\n      publicKey: publicKey,\n      secretKey: convertSecretKey(edKeyPair.secretKey)\n    };\n  }\n\n  return {\n    convertPublicKey: convertPublicKey,\n    convertSecretKey: convertSecretKey,\n    convertKeyPair: convertKeyPair,\n  };\n\n}));\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","// Copyright 2019-2021 @polkadot/wasm-crypto-wasm authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n// Generated as part of the build, do not edit\n\nconst sizeCompressed = 171007;\nconst sizeUncompressed = 349686;\nconst bytes = '';\n\nmodule.exports = { bytes, sizeCompressed, sizeUncompressed };\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nexport const shrSH = (h, l, s) => h >>> s;\nexport const shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nexport const rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexport const rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nexport const rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexport const rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nexport const rotr32H = (h, l) => l;\nexport const rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nexport const rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexport const rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nexport const rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexport const rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nexport const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexport const add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexport const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexport const add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexport const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexport const add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianess.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte))\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// Currently avoid insertion of polyfills with packers (browserify/webpack/etc)\n// But setTimeout is pretty slow, maybe worth to investigate howto do minimal polyfill here\nexport const nextTick = (() => {\n    const nodeRequire = typeof module !== 'undefined' &&\n        typeof module.require === 'function' &&\n        module.require.bind(module);\n    try {\n        if (nodeRequire) {\n            const { setImmediate } = nodeRequire('timers');\n            return () => new Promise((resolve) => setImmediate(resolve));\n        }\n    }\n    catch (e) { }\n    return () => new Promise((resolve) => setTimeout(resolve, 0));\n})();\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function assertBool(b) {\n    if (typeof b !== 'boolean') {\n        throw new Error(`Expected boolean, not ${b}`);\n    }\n}\nexport function assertBytes(bytes, ...lengths) {\n    if (bytes instanceof Uint8Array && (!lengths.length || lengths.includes(bytes.length))) {\n        return;\n    }\n    throw new TypeError(`Expected ${lengths} bytes, not ${typeof bytes} with length=${bytes.length}`);\n}\nexport function assertHash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    assertNumber(hash.outputLen);\n    assertNumber(hash.blockLen);\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(def, _opts) {\n    if (_opts !== undefined && (typeof _opts !== 'object' || !isPlainObject(_opts)))\n        throw new TypeError('Options should be object or undefined');\n    const opts = Object.assign(def, _opts);\n    return opts;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import checkPrivateRedeclaration from \"./checkPrivateRedeclaration.js\";\nexport default function _classPrivateFieldInitSpec(obj, privateMap, value) {\n  checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}","export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}","import classApplyDescriptorGet from \"./classApplyDescriptorGet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}","import classApplyDescriptorSet from \"./classApplyDescriptorSet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n}","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst POW_2_256 = _2n ** BigInt(256);\nconst CURVE = {\n    a: _0n,\n    b: BigInt(7),\n    P: POW_2_256 - _2n ** BigInt(32) - BigInt(977),\n    n: POW_2_256 - BigInt('432420386565659656852420866394968145599'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n};\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        const a = this;\n        const b = other;\n        const az2 = mod(a.z * a.z);\n        const az3 = mod(a.z * az2);\n        const bz2 = mod(b.z * b.z);\n        const bz3 = mod(b.z * bz2);\n        return mod(a.x * bz2) === mod(az2 * b.x) && mod(a.y * bz3) === mod(az3 * b.y);\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const X1 = this.x;\n        const Y1 = this.y;\n        const Z1 = this.z;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(B ** _2n);\n        const D = mod(_2n * (mod(mod((X1 + B) ** _2n)) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E ** _2n);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint)) {\n            throw new TypeError('JacobianPoint#add: expected JacobianPoint');\n        }\n        const X1 = this.x;\n        const Y1 = this.y;\n        const Z1 = this.z;\n        const X2 = other.x;\n        const Y2 = other.y;\n        const Z2 = other.z;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(Y1 * Z2 * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H ** _2n);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r ** _2n - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar);\n        if (!USE_ENDOMORPHISM) {\n            let p = JacobianPoint.ZERO;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = JacobianPoint.ZERO;\n        let k2p = JacobianPoint.ZERO;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            let { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const invZ2 = invZ ** _2n;\n        const x = mod(this.x * invZ2);\n        const y = mod(this.y * invZ2 * invZ);\n        return new Point(x, y);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.slice(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.slice(1, 33));\n        const y = bytesToNumber(bytes.slice(33));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const header = bytes[0];\n        if (bytes.length === 32 || (bytes.length === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (bytes.length === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${bytes.length}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        if (h === _0n)\n            throw new Error('Cannot recover signature: msgHash cannot be 0');\n        const prefix = 2 + (recovery & 1);\n        const P_ = Point.fromHex(`0${prefix}${numTo32bStr(r)}`);\n        const sP = JacobianPoint.fromAffine(P_).multiplyUnsafe(s);\n        const hG = JacobianPoint.BASE.multiply(h);\n        const rinv = invert(r, CURVE.n);\n        const Q = sP.subtract(hG).multiplyUnsafe(rinv);\n        const point = Q.toAffine();\n        point.assertValidity();\n        return point;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            return `${this.y & _1n ? '03' : '02'}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = isUint8a(hex);\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = isUint8a(hex);\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHex(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHex(this.r));\n        const rLen = numberToHex(rHex.length / 2);\n        const sLen = numberToHex(sHex.length / 2);\n        const length = numberToHex(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every(isUint8a))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction isUint8a(bytes) {\n    return bytes instanceof Uint8Array;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction numTo32bStr(num) {\n    if (num > POW_2_256)\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    return hexToBytes(numTo32bStr(num));\n}\nfunction numberToHex(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= 0 ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, n = CURVE.P) {\n    const len = nums.length;\n    const scratch = new Array(len);\n    let acc = _1n;\n    for (let i = 0; i < len; i++) {\n        if (nums[i] === _0n)\n            continue;\n        scratch[i] = acc;\n        acc = mod(acc * nums[i], n);\n    }\n    acc = invert(acc, n);\n    for (let i = len - 1; i >= 0; i--) {\n        if (nums[i] === _0n)\n            continue;\n        const tmp = mod(acc * nums[i], n);\n        nums[i] = mod(acc * scratch[i], n);\n        acc = tmp;\n    }\n    return nums;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst POW_2_128 = _2n ** BigInt(128);\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n    const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n    const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n    const b2 = a1;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128)\n        throw new Error('splitScalarEndo: Endomorphism failed');\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        if (typeof utils.hmacSha256Sync !== 'function')\n            throw new Error('utils.hmacSha256Sync is undefined, you need to set it');\n        const res = utils.hmacSha256Sync(this.k, ...values);\n        if (res instanceof Promise)\n            throw new Error('To use sync sign(), ensure utils.hmacSha256 is sync');\n        return res;\n    }\n    incr() {\n        if (this.counter >= 1000) {\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        }\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (isUint8a(key)) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes();\n}\nfunction isPub(item) {\n    const arr = isUint8a(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    const hex = numTo32bStr(num);\n    return hexToBytes(hex);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    if (h === _0n)\n        return false;\n    let pubKey;\n    try {\n        pubKey = JacobianPoint.fromAffine(normalizePublicKey(publicKey));\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const s1 = invert(s, n);\n    const u1 = mod(h * s1, n);\n    const u2 = mod(r * s1, n);\n    const Ghs1 = JacobianPoint.BASE.multiply(u1);\n    const Prs1 = pubKey.multiplyUnsafe(u2);\n    const R = Ghs1.add(Prs1).toAffine();\n    const v = mod(R.x, n);\n    return v === r;\n}\nasync function taggedHash(tag, ...messages) {\n    const tagB = new Uint8Array(tag.split('').map((c) => c.charCodeAt(0)));\n    const tagH = await utils.sha256(tagB);\n    const h = await utils.sha256(concatBytes(tagH, tagH, ...messages));\n    return bytesToNumber(h);\n}\nasync function createChallenge(x, P, message) {\n    const rx = numTo32b(x);\n    const t = await taggedHash('BIP0340/challenge', rx, P.toRawX(), message);\n    return mod(t, CURVE.n);\n}\nfunction hasEvenY(point) {\n    return mod(point.y, _2n) === _0n;\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.slice(0, 32));\n        const s = bytesToNumber(bytes.slice(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nasync function schnorrSign(message, privateKey, auxRand = utils.randomBytes()) {\n    if (message == null)\n        throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n    const { n } = CURVE;\n    const m = ensureBytes(message);\n    const d0 = normalizePrivateKey(privateKey);\n    const rand = ensureBytes(auxRand);\n    if (rand.length !== 32)\n        throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    const P = Point.fromPrivateKey(d0);\n    const d = hasEvenY(P) ? d0 : n - d0;\n    const t0h = await taggedHash('BIP0340/aux', rand);\n    const t = d ^ t0h;\n    const k0h = await taggedHash('BIP0340/nonce', numTo32b(t), P.toRawX(), m);\n    const k0 = mod(k0h, n);\n    if (k0 === _0n)\n        throw new Error('sign: Creation of signature failed. k is zero');\n    const R = Point.fromPrivateKey(k0);\n    const k = hasEvenY(R) ? k0 : n - k0;\n    const e = await createChallenge(R.x, P, m);\n    const sig = new SchnorrSignature(R.x, mod(k + e * d, n));\n    const isValid = await schnorrVerify(sig.toRawBytes(), m, P.toRawX());\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig.toRawBytes();\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    const sig = signature instanceof SchnorrSignature ? signature : SchnorrSignature.fromHex(signature);\n    const m = ensureBytes(message);\n    const P = normalizePublicKey(publicKey);\n    const e = await createChallenge(sig.r, P, m);\n    const sG = Point.fromPrivateKey(sig.s);\n    const eP = P.multiply(e);\n    const R = sG.subtract(eP);\n    if (R.equals(Point.BASE) || !hasEvenY(R) || R.x !== sig.r)\n        return false;\n    return true;\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        let i = 8;\n        while (i--) {\n            const b32 = utils.randomBytes(32);\n            const num = bytesToNumber(b32);\n            if (isWithinCurveOrder(num) && num !== _1n)\n                return b32;\n        }\n        throw new Error('Valid private key was not found in 8 iterations. PRNG is broken');\n    },\n    bytesToHex,\n    mod,\n    sha256: async (message) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            return Uint8Array.from(createHash('sha256').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\n","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { getPublicKey } from '@noble/secp256k1';\nimport { assert, hasBigInt } from '@polkadot/util';\nimport { isReady, secp256k1FromSeed } from '@polkadot/wasm-crypto';\n/**\n * @name secp256k1PairFromSeed\n * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.\n */\n\nexport function secp256k1PairFromSeed(seed, onlyJs) {\n  assert(seed.length === 32, 'Expected valid 32-byte private key as a seed');\n\n  if (!hasBigInt || !onlyJs && isReady()) {\n    const full = secp256k1FromSeed(seed);\n    return {\n      publicKey: full.slice(32),\n      secretKey: full.slice(0, 32)\n    };\n  }\n\n  return {\n    publicKey: getPublicKey(seed, true),\n    secretKey: seed\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport nacl from 'tweetnacl';\nimport { ed25519KeypairFromSeed, isReady } from '@polkadot/wasm-crypto';\n/**\n * @name ed25519PairFromSeed\n * @summary Creates a new public/secret keypair from a seed.\n * @description\n * Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519PairFromSeed } from '@polkadot/util-crypto';\n *\n * ed25519PairFromSeed(...); // => { secretKey: [...], publicKey: [...] }\n * ```\n */\n\nexport function ed25519PairFromSeed(seed, onlyJs) {\n  if (!onlyJs && isReady()) {\n    const full = ed25519KeypairFromSeed(seed);\n    return {\n      publicKey: full.slice(32),\n      secretKey: full.slice(0, 64)\n    };\n  }\n\n  return nacl.sign.keyPair.fromSeed(seed);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util';\nconst SEC_LEN = 64;\nconst PUB_LEN = 32;\nconst TOT_LEN = SEC_LEN + PUB_LEN;\nexport function sr25519PairFromU8a(full) {\n  const fullU8a = u8aToU8a(full);\n  assert(fullU8a.length === TOT_LEN, () => `Expected keypair with ${TOT_LEN} bytes, found ${fullU8a.length}`);\n  return {\n    publicKey: fullU8a.slice(SEC_LEN, TOT_LEN),\n    secretKey: fullU8a.slice(0, SEC_LEN)\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util';\nimport { sr25519KeypairFromSeed } from '@polkadot/wasm-crypto';\nimport { sr25519PairFromU8a } from \"./fromU8a.js\";\n/**\n * @name sr25519PairFromSeed\n * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.\n */\n\nexport function sr25519PairFromSeed(seed) {\n  const seedU8a = u8aToU8a(seed);\n  assert(seedU8a.length === 32, () => `Expected a seed matching 32 bytes, found ${seedU8a.length}`);\n  return sr25519PairFromU8a(sr25519KeypairFromSeed(seedU8a));\n}","import * as u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, assertNumber, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assertNumber(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array))\n            throw new Error('Keccak: invalid output buffer');\n        this.finish();\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= this.blockLen)\n                this.keccak();\n            const take = Math.min(this.blockLen - this.posOut, len - pos);\n            out.set(this.state.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assertNumber(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        if (out.length < this.outputLen)\n            throw new Error('Keccak: invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finish();\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen !== undefined ? opts.dkLen : outputLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { keccak_256 as keccak256Js, keccak_512 as keccak512Js } from '@noble/hashes/sha3';\nimport { keccak256, keccak512 } from '@polkadot/wasm-crypto';\nimport { createAsHex, createBitHasher, createDualHasher } from \"../helpers.js\";\n/**\n * @name keccakAsU8a\n * @summary Creates a keccak Uint8Array from the input.\n * @description\n * From either a `string` or a `Buffer` input, create the keccak and return the result as a `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { keccakAsU8a } from '@polkadot/util-crypto';\n *\n * keccakAsU8a('123'); // => Uint8Array\n * ```\n */\n\nexport const keccakAsU8a = createDualHasher({\n  256: keccak256,\n  512: keccak512\n}, {\n  256: keccak256Js,\n  512: keccak512Js\n});\n/**\n * @name keccak256AsU8a\n * @description Creates a keccak256 Uint8Array from the input.\n */\n\nexport const keccak256AsU8a = createBitHasher(256, keccakAsU8a);\n/**\n * @name keccak512AsU8a\n * @description Creates a keccak512 Uint8Array from the input.\n */\n\nexport const keccak512AsU8a = createBitHasher(512, keccakAsU8a);\n/**\n * @name keccakAsHex\n * @description Creates a keccak hex string from the input.\n */\n\nexport const keccakAsHex = createAsHex(keccakAsU8a);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isNumber\n * @summary Tests for a JavaScript number.\n * @description\n * Checks to see if the input value is a valid number.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isNumber } from '@polkadot/util';\n *\n * console.log('isNumber', isNumber(1234)); // => true\n * ```\n */\nexport function isNumber(value) {\n  return typeof value === 'number';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name objectKeys\n * @summary A version of Object.keys that is typed for TS\n */\nexport function objectKeys(value) {\n  return Object.keys(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectKeys } from \"./keys.js\";\n/**\n * @name objectSpread\n * @summary Concats all sources into the destination\n */\n\nexport function objectSpread(dest, ...sources) {\n  for (let i = 0; i < sources.length; i++) {\n    const src = sources[i];\n\n    if (src) {\n      const keys = objectKeys(src);\n\n      for (let j = 0; j < keys.length; j++) {\n        const key = keys[j];\n        dest[key] = src[key];\n      }\n    }\n  }\n\n  return dest;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isBoolean\n * @summary Tests for a boolean value.\n * @description\n * Checks to see if the input value is a JavaScript boolean.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBoolean } from '@polkadot/util';\n *\n * isBoolean(false); // => true\n * ```\n */\nexport function isBoolean(value) {\n  return typeof value === 'boolean';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"../bn/bn.js\";\nimport { isBoolean } from \"../is/boolean.js\";\nimport { objectSpread } from \"../object/spread.js\";\nimport { hexStripPrefix } from \"./stripPrefix.js\";\nconst DEFAULT_OPTS = {\n  isLe: false,\n  isNegative: false\n};\n/**\n * @name hexToBn\n * @summary Creates a BN.js object from a hex string.\n * @description\n * `null` inputs returns a `BN(0)` result. Hex input values return the actual value converted to a BN. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @param _value The value to convert\n * @param _options Options to pass while converting\n * @param _options.isLe Convert using Little Endian\n * @param _options.isNegative Convert using two's complement\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToBn } from '@polkadot/util';\n *\n * hexToBn('0x123480001f'); // => BN(0x123480001f)\n * ```\n */\n\nexport function hexToBn(value, options = DEFAULT_OPTS) {\n  if (!value || value === '0x') {\n    return new BN(0);\n  }\n\n  const {\n    isLe,\n    isNegative\n  } = objectSpread({\n    isLe: false,\n    isNegative: false\n  }, isBoolean(options) ? {\n    isLe: options\n  } : options);\n  const stripped = hexStripPrefix(value);\n  const bn = new BN(stripped, 16, isLe ? 'le' : 'be'); // fromTwos takes as parameter the number of bits, which is the hex length\n  // multiplied by 4.\n\n  return isNegative ? bn.fromTwos(stripped.length * 4) : bn;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isBigInt\n * @summary Tests for a `BigInt` object instance.\n * @description\n * Checks to see if the input object is an instance of `BigInt`\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBigInt } from '@polkadot/util';\n *\n * console.log('isBigInt', isBigInt(123_456n)); // => true\n * ```\n */\nexport function isBigInt(value) {\n  return typeof value === 'bigint';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isObject\n * @summary Tests for an `object`.\n * @description\n * Checks to see if the input value is a JavaScript object.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isObject } from '@polkadot/util';\n *\n * isObject({}); // => true\n * isObject('something'); // => false\n * ```\n */\nexport function isObject(value) {\n  return !!value && typeof value === 'object';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from \"./function.js\";\nimport { isObject } from \"./object.js\";\nexport function isOn(...fns) {\n  return value => (isObject(value) || isFunction(value)) && fns.every(f => isFunction(value[f]));\n}\nexport function isOnObject(...fns) {\n  return value => isObject(value) && fns.every(f => isFunction(value[f]));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isOn } from \"./helpers.js\";\nexport const isToBigInt = isOn('toBigInt');","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isOn } from \"./helpers.js\";\nexport const isToBn = isOn('toBn');","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToBn } from \"../hex/toBn.js\";\nimport { isBigInt } from \"../is/bigInt.js\";\nimport { isHex } from \"../is/hex.js\";\nimport { isToBigInt } from \"../is/toBigInt.js\";\nimport { isToBn } from \"../is/toBn.js\";\nimport { BN } from \"./bn.js\";\n/**\n * @name bnToBn\n * @summary Creates a BN value from a BN, bigint, string (base 10 or hex) or number input.\n * @description\n * `null` inputs returns a `0x0` result, BN values returns the value, numbers returns a BN representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnToBn } from '@polkadot/util';\n *\n * bnToBn(0x1234); // => BN(0x1234)\n * bnToBn(new BN(0x1234)); // => BN(0x1234)\n * ```\n */\n\nexport function bnToBn(value) {\n  return BN.isBN(value) ? value : !value ? new BN(0) : isHex(value) ? hexToBn(value.toString()) : isBigInt(value) ? new BN(value.toString()) : isToBn(value) ? value.toBn() : isToBigInt(value) ? new BN(value.toBigInt().toString()) : new BN(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNumber } from \"../is/number.js\";\nimport { objectSpread } from \"../object/spread.js\";\nimport { bnToBn } from \"./toBn.js\";\nconst DEFAULT_OPTS = {\n  bitLength: -1,\n  isLe: true,\n  isNegative: false\n};\n\nfunction createEmpty(byteLength, options) {\n  return options.bitLength === -1 ? new Uint8Array() : new Uint8Array(byteLength);\n}\n\nfunction createValue(valueBn, byteLength, {\n  isLe,\n  isNegative\n}) {\n  const output = new Uint8Array(byteLength);\n  const bn = isNegative ? valueBn.toTwos(byteLength * 8) : valueBn;\n  output.set(bn.toArray(isLe ? 'le' : 'be', byteLength), 0);\n  return output;\n}\n/**\n * @name bnToU8a\n * @summary Creates a Uint8Array object from a BN.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `Uint8Array` result. `BN` input values return the actual bytes value converted to a `Uint8Array`. Optionally convert using little-endian format if `isLE` is set.\n * @example\n * <BR>\n *\n * ```javascript\n * import { bnToU8a } from '@polkadot/util';\n *\n * bnToU8a(new BN(0x1234)); // => [0x12, 0x34]\n * ```\n */\n\n\nfunction bnToU8a(value, arg1 = DEFAULT_OPTS, arg2) {\n  const options = objectSpread({\n    bitLength: -1,\n    isLe: true,\n    isNegative: false\n  }, isNumber(arg1) ? {\n    bitLength: arg1,\n    isLe: arg2\n  } : arg1);\n  const valueBn = bnToBn(value);\n  const byteLength = options.bitLength === -1 ? Math.ceil(valueBn.bitLength() / 8) : Math.ceil((options.bitLength || 0) / 8);\n  return value ? createValue(valueBn, byteLength, options) : createEmpty(byteLength, options);\n}\n\nexport { bnToU8a };","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const BN_BE_OPTS = {\n  isLe: false\n};\nexport const BN_LE_OPTS = {\n  isLe: true\n};\nexport const BN_LE_16_OPTS = {\n  bitLength: 16,\n  isLe: true\n};\nexport const BN_BE_32_OPTS = {\n  bitLength: 32,\n  isLe: false\n};\nexport const BN_LE_32_OPTS = {\n  bitLength: 32,\n  isLe: true\n};\nexport const BN_BE_256_OPTS = {\n  bitLength: 256,\n  isLe: false\n};\nexport const BN_LE_256_OPTS = {\n  bitLength: 256,\n  isLe: true\n};\nexport const BN_LE_512_OPTS = {\n  bitLength: 512,\n  isLe: true\n};","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Point } from '@noble/secp256k1';\nimport { assert, bnToU8a, hasBigInt, u8aConcat } from '@polkadot/util';\nimport { isReady, secp256k1Expand as wasm } from '@polkadot/wasm-crypto';\nimport { BN_BE_256_OPTS } from \"../bn.js\";\nexport function secp256k1Expand(publicKey, onlyJs) {\n  if (publicKey.length === 65) {\n    return publicKey.subarray(1);\n  }\n\n  assert(publicKey.length === 33, 'Invalid publicKey provided');\n\n  if (!hasBigInt || !onlyJs && isReady()) {\n    return wasm(publicKey).subarray(1);\n  }\n\n  const {\n    x,\n    y\n  } = Point.fromHex(publicKey);\n  return u8aConcat(bnToU8a(x, BN_BE_256_OPTS), bnToU8a(y, BN_BE_256_OPTS));\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { keccakAsU8a } from \"../keccak/index.js\";\nimport { secp256k1Expand } from \"../secp256k1/index.js\";\n\nfunction getH160(u8a) {\n  if ([33, 65].includes(u8a.length)) {\n    u8a = keccakAsU8a(secp256k1Expand(u8a));\n  }\n\n  return u8a.slice(-20);\n}\n\nexport function ethereumEncode(addressOrPublic) {\n  if (!addressOrPublic) {\n    return '0x';\n  }\n\n  const u8aAddress = u8aToU8a(addressOrPublic);\n  assert([20, 32, 33, 65].includes(u8aAddress.length), 'Invalid address or publicKey passed');\n  const address = u8aToHex(getH160(u8aAddress), -1, false);\n  const hash = u8aToHex(keccakAsU8a(address), -1, false);\n  let result = '';\n\n  for (let i = 0; i < 40; i++) {\n    result = `${result}${parseInt(hash[i], 16) > 7 ? address[i].toUpperCase() : address[i]}`;\n  }\n\n  return `0x${result}`;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { base64 } from '@scure/base';\nimport { createDecode, createEncode, createIs, createValidate } from \"../base32/helpers.js\";\nconst config = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  coder: base64,\n  type: 'base64'\n};\n/**\n * @name base64Validate\n * @summary Validates a base64 value.\n * @description\n * Validates that the supplied value is valid base64\n */\n\nexport const base64Validate = createValidate(config);\n/**\n * @name isBase64\n * @description Checks if the input is in base64, returning true/false\n */\n\nexport const isBase64 = createIs(base64Validate);\n/**\n * @name base64Decode\n * @summary Decodes a base64 value.\n * @description\n * From the provided input, decode the base64 and return the result as an `Uint8Array`.\n */\n\nexport const base64Decode = createDecode(config, base64Validate);\n/**\n * @name base64Encode\n * @summary Creates a base64 value.\n * @description\n * From the provided input, create the base64 and return the result as a string.\n */\n\nexport const base64Encode = createEncode(config);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"../bn/bn.js\";\n/**\n * @name isBn\n * @summary Tests for a `BN` object instance.\n * @description\n * Checks to see if the input object is an instance of `BN` (bn.js).\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { isBn } from '@polkadot/util';\n *\n * console.log('isBn', isBn(new BN(1))); // => true\n * ```\n */\n\nexport function isBn(value) {\n  return BN.isBN(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"./bn.js\";\n/**\n * @name BN_ZERO\n * @summary BN constant for 0.\n */\n\nexport const BN_ZERO = new BN(0);\n/**\n * @name BN_ONE\n * @summary BN constant for 1.\n */\n\nexport const BN_ONE = new BN(1);\n/**\n * @name BN_TWO\n * @summary BN constant for 2.\n */\n\nexport const BN_TWO = new BN(2);\n/**\n * @name BN_THREE\n * @summary BN constant for 3.\n */\n\nexport const BN_THREE = new BN(3);\n/**\n * @name BN_FOUR\n * @summary BN constant for 4.\n */\n\nexport const BN_FOUR = new BN(4);\n/**\n * @name BN_FIVE\n * @summary BN constant for 5.\n */\n\nexport const BN_FIVE = new BN(5);\n/**\n * @name BN_SIX\n * @summary BN constant for 6.\n */\n\nexport const BN_SIX = new BN(6);\n/**\n * @name BN_SEVEN\n * @summary BN constant for 7.\n */\n\nexport const BN_SEVEN = new BN(7);\n/**\n * @name BN_EIGHT\n * @summary BN constant for 8.\n */\n\nexport const BN_EIGHT = new BN(8);\n/**\n * @name BN_NINE\n * @summary BN constant for 9.\n */\n\nexport const BN_NINE = new BN(9);\n/**\n * @name BN_TEN\n * @summary BN constant for 10.\n */\n\nexport const BN_TEN = new BN(10);\n/**\n * @name BN_HUNDRED\n * @summary BN constant for 100.\n */\n\nexport const BN_HUNDRED = new BN(100);\n/**\n * @name BN_THOUSAND\n * @summary BN constant for 1,000.\n */\n\nexport const BN_THOUSAND = new BN(1000);\n/**\n * @name BN_MILLION\n * @summary BN constant for 1,000,000.\n */\n\nexport const BN_MILLION = new BN(1000000);\n/**\n * @name BN_BILLION\n * @summary BN constant for 1,000,000,000.\n */\n\nexport const BN_BILLION = new BN(1000000000);\n/**\n * @name BN_QUINTILL\n * @summary BN constant for 1,000,000,000,000,000,000.\n */\n\nexport const BN_QUINTILL = BN_BILLION.mul(BN_BILLION);\n/**\n * @name BN_MAX_INTEGER\n * @summary BN constant for MAX_SAFE_INTEGER\n */\n\nexport const BN_MAX_INTEGER = new BN(Number.MAX_SAFE_INTEGER);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from \"../assert.js\";\nimport { BN, BN_ONE, BN_TWO, bnToBn, bnToU8a } from \"../bn/index.js\";\nimport { u8aConcat } from \"../u8a/index.js\";\nconst MAX_U8 = BN_TWO.pow(new BN(8 - 2)).isub(BN_ONE);\nconst MAX_U16 = BN_TWO.pow(new BN(16 - 2)).isub(BN_ONE);\nconst MAX_U32 = BN_TWO.pow(new BN(32 - 2)).isub(BN_ONE);\n/**\n * @name compactToU8a\n * @description Encodes a number into a compact representation\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactToU8a } from '@polkadot/util';\n *\n * console.log(compactToU8a(511, 32)); // Uint8Array([0b11111101, 0b00000111])\n * ```\n */\n\nexport function compactToU8a(value) {\n  const bn = bnToBn(value);\n\n  if (bn.lte(MAX_U8)) {\n    return new Uint8Array([bn.toNumber() << 2]);\n  } else if (bn.lte(MAX_U16)) {\n    return bnToU8a(bn.shln(2).iadd(BN_ONE), 16, true);\n  } else if (bn.lte(MAX_U32)) {\n    return bnToU8a(bn.shln(2).iadd(BN_TWO), 32, true);\n  }\n\n  const u8a = bnToU8a(bn);\n  let length = u8a.length; // adjust to the minimum number of bytes\n\n  while (u8a[length - 1] === 0) {\n    length--;\n  }\n\n  assert(length >= 4, 'Invalid length, previous checks match anything less than 2^30');\n  return u8aConcat( // subtract 4 as minimum (also catered for in decoding)\n  [(length - 4 << 2) + 0b11], u8a.subarray(0, length));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aConcat } from \"../u8a/index.js\";\nimport { compactToU8a } from \"./toU8a.js\";\n/**\n * @name compactAddLength\n * @description Adds a length prefix to the input value\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactAddLength } from '@polkadot/util';\n *\n * console.log(compactAddLength(new Uint8Array([0xde, 0xad, 0xbe, 0xef]))); // Uint8Array([4 << 2, 0xde, 0xad, 0xbe, 0xef])\n * ```\n */\n\nexport function compactAddLength(input) {\n  return u8aConcat(compactToU8a(input.length), input);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN, bnToU8a, compactAddLength, hexToU8a, isBigInt, isBn, isHex, isNumber, isString, stringToU8a } from '@polkadot/util';\nimport { blake2AsU8a } from \"../blake2/asU8a.js\";\nimport { BN_LE_256_OPTS } from \"../bn.js\";\nconst RE_NUMBER = /^\\d+$/;\nconst JUNCTION_ID_LEN = 32;\nexport class DeriveJunction {\n  #chainCode = new Uint8Array(32);\n  #isHard = false;\n\n  static from(value) {\n    const result = new DeriveJunction();\n    const [code, isHard] = value.startsWith('/') ? [value.substr(1), true] : [value, false];\n    result.soft(RE_NUMBER.test(code) ? new BN(code, 10) : code);\n    return isHard ? result.harden() : result;\n  }\n\n  get chainCode() {\n    return this.#chainCode;\n  }\n\n  get isHard() {\n    return this.#isHard;\n  }\n\n  get isSoft() {\n    return !this.#isHard;\n  }\n\n  hard(value) {\n    return this.soft(value).harden();\n  }\n\n  harden() {\n    this.#isHard = true;\n    return this;\n  }\n\n  soft(value) {\n    if (isNumber(value) || isBn(value) || isBigInt(value)) {\n      return this.soft(bnToU8a(value, BN_LE_256_OPTS));\n    } else if (isHex(value)) {\n      return this.soft(hexToU8a(value));\n    } else if (isString(value)) {\n      return this.soft(compactAddLength(stringToU8a(value)));\n    } else if (value.length > JUNCTION_ID_LEN) {\n      return this.soft(blake2AsU8a(value));\n    }\n\n    this.#chainCode.fill(0);\n    this.#chainCode.set(value, 0);\n    return this;\n  }\n\n  soften() {\n    this.#isHard = false;\n    return this;\n  }\n\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isString\n * @summary Tests for a string.\n * @description\n * Checks to see if the input value is a JavaScript string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isString } from '@polkadot/util';\n *\n * console.log('isString', isString('test')); // => true\n * ```\n */\nexport function isString(value) {\n  return typeof value === 'string' || value instanceof String;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\nimport { DeriveJunction } from \"./DeriveJunction.js\";\nconst RE_JUNCTION = /\\/(\\/?)([^/]+)/g;\n\n/**\n * @description Extract derivation junctions from the supplied path\n */\nexport function keyExtractPath(derivePath) {\n  const parts = derivePath.match(RE_JUNCTION);\n  const path = [];\n  let constructed = '';\n\n  if (parts) {\n    constructed = parts.join('');\n\n    for (const p of parts) {\n      path.push(DeriveJunction.from(p.substr(1)));\n    }\n  }\n\n  assert(constructed === derivePath, () => `Re-constructed path \"${constructed}\" does not match input`);\n  return {\n    parts,\n    path\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isNull } from '@polkadot/util';\nimport { keyExtractPath } from \"./extractPath.js\";\nconst RE_CAPTURE = /^(\\w+( \\w+)*)((\\/\\/?[^/]+)*)(\\/\\/\\/(.*))?$/;\n/**\n * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed).\n */\n\nexport function keyExtractSuri(suri) {\n  // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n  const matches = suri.match(RE_CAPTURE);\n  assert(!isNull(matches), 'Unable to match provided value to a secret URI');\n  const [, phrase,, derivePath,,, password] = matches;\n  const {\n    path\n  } = keyExtractPath(derivePath);\n  return {\n    derivePath,\n    password,\n    path,\n    phrase\n  };\n}","import { assertHash, Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length !== this.outputLen)\n            throw new Error('HMAC: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","import { hmac } from './hmac.js';\n// prettier-ignore\nimport { createView, toBytes, assertNumber, assertHash, checkOpts, asyncLoop } from './utils.js';\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    assertHash(hash);\n    const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    assertNumber(c);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = toBytes(_password);\n    const salt = toBytes(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexport async function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await asyncLoop(c - 1, asyncTick, (i) => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        const { view, buffer, blockLen, finished } = this;\n        if (finished)\n            throw new Error('digest() was already called');\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length < this.outputLen)\n            throw new Error('_Sha2: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // NOTE: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64bit of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","import { SHA2 } from './_sha2.js';\nimport * as u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { getRandomValues } from '@polkadot/x-randomvalues';\nimport { createAsHex } from \"../helpers.js\";\n/**\n * @name randomAsU8a\n * @summary Creates a Uint8Array filled with random bytes.\n * @description\n * Returns a `Uint8Array` with the specified (optional) length filled with random bytes.\n * @example\n * <BR>\n *\n * ```javascript\n * import { randomAsU8a } from '@polkadot/util-crypto';\n *\n * randomAsU8a(); // => Uint8Array([...])\n * ```\n */\n\nexport function randomAsU8a(length = 32) {\n  return getRandomValues(new Uint8Array(length));\n}\n/**\n * @name randomAsHex\n * @description Creates a hex string filled with random bytes.\n */\n\nexport const randomAsHex = createAsHex(randomAsU8a);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { pbkdf2 as pbkdf2Js } from '@noble/hashes/pbkdf2';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { isReady, pbkdf2 } from '@polkadot/wasm-crypto';\nimport { randomAsU8a } from \"../random/asU8a.js\";\nexport function pbkdf2Encode(passphrase, salt = randomAsU8a(), rounds = 2048, onlyJs) {\n  const u8aPass = u8aToU8a(passphrase);\n  const u8aSalt = u8aToU8a(salt);\n  return {\n    password: !hasBigInt || !onlyJs && isReady() ? pbkdf2(u8aPass, u8aSalt, rounds) : pbkdf2Js(sha512, u8aPass, u8aSalt, {\n      c: rounds,\n      dkLen: 64\n    }),\n    rounds,\n    salt\n  };\n}","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\n","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sha256 as sha256Js } from '@noble/hashes/sha256';\nimport { sha512 as sha512Js } from '@noble/hashes/sha512';\nimport { sha256, sha512 } from '@polkadot/wasm-crypto';\nimport { createBitHasher, createDualHasher } from \"../helpers.js\";\n/**\n * @name shaAsU8a\n * @summary Creates a sha Uint8Array from the input.\n */\n\nexport const shaAsU8a = createDualHasher({\n  256: sha256,\n  512: sha512\n}, {\n  256: sha256Js,\n  512: sha512Js\n});\n/**\n * @name sha256AsU8a\n * @summary Creates a sha256 Uint8Array from the input.\n */\n\nexport const sha256AsU8a = createBitHasher(256, shaAsU8a);\n/**\n * @name sha512AsU8a\n * @summary Creates a sha512 Uint8Array from the input.\n */\n\nexport const sha512AsU8a = createBitHasher(512, shaAsU8a);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Adapted from the bitcoinjs/bip39 source\n// https://github.com/bitcoinjs/bip39/blob/1d063b6a6aee4145b34d701037cd3e67f5446ff9/ts_src/\nexport default 'abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo'.split('|');","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Adapted from the bitcoinjs/bip39 source\n// https://github.com/bitcoinjs/bip39/blob/1d063b6a6aee4145b34d701037cd3e67f5446ff9/ts_src/index.ts\n// Copyright (c) 2014, Wei Lu <luwei.here@gmail.com> and Daniel Cousens <email@dcousens.com>\n// ISC Licence\n//\n// Change made in this version -\n//   - Adjust formatting (just eslint differences)\n//   - Only English wordlist (this aligns with the wasm-crypto implementation)\n//   - Use util-crypto randomAsU8a (instead of randombytes)\n//   - Remove setting of wordlist passing of wordlist in functions\n//   - Remove mnemonicToSeed (we only use the sync variant)\nimport { assert, stringToU8a, u8aToU8a } from '@polkadot/util';\nimport { pbkdf2Encode } from \"../pbkdf2/index.js\";\nimport { randomAsU8a } from \"../random/index.js\";\nimport { sha256AsU8a } from \"../sha/index.js\";\nimport DEFAULT_WORDLIST from \"./bip39-en.js\";\nconst INVALID_MNEMONIC = 'Invalid mnemonic';\nconst INVALID_ENTROPY = 'Invalid entropy';\nconst INVALID_CHECKSUM = 'Invalid mnemonic checksum';\n\nfunction normalize(str) {\n  return (str || '').normalize('NFKD');\n}\n\nfunction binaryToByte(bin) {\n  return parseInt(bin, 2);\n}\n\nfunction bytesToBinary(bytes) {\n  return bytes.map(x => x.toString(2).padStart(8, '0')).join('');\n}\n\nfunction deriveChecksumBits(entropyBuffer) {\n  return bytesToBinary(Array.from(sha256AsU8a(entropyBuffer))).slice(0, entropyBuffer.length * 8 / 32);\n}\n\nexport function mnemonicToSeedSync(mnemonic, password) {\n  return pbkdf2Encode(stringToU8a(normalize(mnemonic)), stringToU8a(`mnemonic${normalize(password)}`)).password;\n}\nexport function mnemonicToEntropy(mnemonic) {\n  var _entropyBits$match;\n\n  const words = normalize(mnemonic).split(' ');\n  assert(words.length % 3 === 0, INVALID_MNEMONIC); // convert word indices to 11 bit binary strings\n\n  const bits = words.map(word => {\n    const index = DEFAULT_WORDLIST.indexOf(word);\n    assert(index !== -1, INVALID_MNEMONIC);\n    return index.toString(2).padStart(11, '0');\n  }).join(''); // split the binary string into ENT/CS\n\n  const dividerIndex = Math.floor(bits.length / 33) * 32;\n  const entropyBits = bits.slice(0, dividerIndex);\n  const checksumBits = bits.slice(dividerIndex); // calculate the checksum and compare\n\n  const entropyBytes = (_entropyBits$match = entropyBits.match(/(.{1,8})/g)) === null || _entropyBits$match === void 0 ? void 0 : _entropyBits$match.map(binaryToByte);\n  assert(entropyBytes && entropyBytes.length % 4 === 0 && entropyBytes.length >= 16 && entropyBytes.length <= 32, INVALID_ENTROPY);\n  const entropy = u8aToU8a(entropyBytes);\n  const newChecksum = deriveChecksumBits(entropy);\n  assert(newChecksum === checksumBits, INVALID_CHECKSUM);\n  return entropy;\n}\nexport function entropyToMnemonic(entropy) {\n  // 128 <= ENT <= 256\n  assert(entropy.length % 4 === 0 && entropy.length >= 16 && entropy.length <= 32, INVALID_ENTROPY);\n  const entropyBits = bytesToBinary(Array.from(entropy));\n  const checksumBits = deriveChecksumBits(entropy); // we just set it prior, so this is a safe check\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n  return (entropyBits + checksumBits).match(/(.{1,11})/g).map(binary => DEFAULT_WORDLIST[binaryToByte(binary)]).join(' ');\n}\nexport function generateMnemonic(strength) {\n  strength = strength || 128;\n  assert(strength % 32 === 0, INVALID_ENTROPY);\n  return entropyToMnemonic(randomAsU8a(strength / 8));\n}\nexport function validateMnemonic(mnemonic) {\n  try {\n    mnemonicToEntropy(mnemonic);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasBigInt } from '@polkadot/util';\nimport { bip39Validate, isReady } from '@polkadot/wasm-crypto';\nimport { validateMnemonic } from \"./bip39.js\";\n/**\n * @name mnemonicValidate\n * @summary Validates a mnemonic input using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate, mnemonicValidate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean\n * ```\n */\n\nexport function mnemonicValidate(mnemonic, onlyJs) {\n  return !hasBigInt || !onlyJs && isReady() ? bip39Validate(mnemonic) : validateMnemonic(mnemonic);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, hasBigInt } from '@polkadot/util';\nimport { bip39ToSeed, isReady } from '@polkadot/wasm-crypto';\nimport { mnemonicToSeedSync } from \"./bip39.js\";\nimport { mnemonicValidate } from \"./validate.js\";\n/**\n * @name mnemonicToLegacySeed\n * @summary Creates a valid Ethereum/Bitcoin-compatible seed from a mnemonic input\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate, mnemonicToLegacySeed, mnemonicValidate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean\n *\n * if (isValidMnemonic) {\n *   console.log(`Seed generated from mnemonic: ${mnemonicToLegacySeed(mnemonic)}`); => u8a\n * }\n * ```\n */\n\nexport function mnemonicToLegacySeed(mnemonic, password = '', onlyJs, byteLength = 32) {\n  assert(mnemonicValidate(mnemonic), 'Invalid bip39 mnemonic specified');\n  assert([32, 64].includes(byteLength), () => `Invalid seed length ${byteLength}, expected 32 or 64`);\n  return byteLength === 32 ? !hasBigInt || !onlyJs && isReady() ? bip39ToSeed(mnemonic, password) : mnemonicToSeedSync(mnemonic, password).subarray(0, 32) : mnemonicToSeedSync(mnemonic, password);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasBigInt } from '@polkadot/util';\nimport { bip39ToEntropy, isReady } from '@polkadot/wasm-crypto';\nimport { mnemonicToEntropy as jsToEntropy } from \"./bip39.js\";\nexport function mnemonicToEntropy(mnemonic, onlyJs) {\n  return !hasBigInt || !onlyJs && isReady() ? bip39ToEntropy(mnemonic) : jsToEntropy(mnemonic);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, stringToU8a } from '@polkadot/util';\nimport { bip39ToMiniSecret, isReady } from '@polkadot/wasm-crypto';\nimport { pbkdf2Encode } from \"../pbkdf2/index.js\";\nimport { mnemonicToEntropy } from \"./toEntropy.js\";\nimport { mnemonicValidate } from \"./validate.js\";\nexport function mnemonicToMiniSecret(mnemonic, password = '', onlyJs) {\n  assert(mnemonicValidate(mnemonic), 'Invalid bip39 mnemonic specified');\n\n  if (!onlyJs && isReady()) {\n    return bip39ToMiniSecret(mnemonic, password);\n  }\n\n  const entropy = mnemonicToEntropy(mnemonic);\n  const salt = stringToU8a(`mnemonic${password}`); // return the first 32 bytes as the seed\n\n  return pbkdf2Encode(entropy, salt).password.slice(0, 32);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hmac } from '@noble/hashes/hmac';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { hmacSha256, hmacSha512, isReady } from '@polkadot/wasm-crypto';\nconst JS_HASH = {\n  256: sha256,\n  512: sha512\n};\nconst WA_MHAC = {\n  256: hmacSha256,\n  512: hmacSha512\n};\n\nfunction createSha(bitLength) {\n  return (key, data, onlyJs) => hmacShaAsU8a(key, data, bitLength, onlyJs);\n}\n/**\n * @name hmacShaAsU8a\n * @description creates a Hmac Sha (256/512) Uint8Array from the key & data\n */\n\n\nexport function hmacShaAsU8a(key, data, bitLength = 256, onlyJs) {\n  const u8aKey = u8aToU8a(key);\n  return !hasBigInt || !onlyJs && isReady() ? WA_MHAC[bitLength](u8aKey, data) : hmac(JS_HASH[bitLength], u8aKey, data);\n}\n/**\n * @name hmacSha256AsU8a\n * @description creates a Hmac Sha256 Uint8Array from the key & data\n */\n\nexport const hmacSha256AsU8a = createSha(256);\n/**\n * @name hmacSha512AsU8a\n * @description creates a Hmac Sha512 Uint8Array from the key & data\n */\n\nexport const hmacSha512AsU8a = createSha(512);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInt } from '@polkadot/x-bigint';\n/**\n * @name _0n\n * @summary BigInt constant for 0.\n */\n\nexport const _0n = BigInt(0);\n/**\n * @name _1n\n * @summary BigInt constant for 1.\n */\n\nexport const _1n = BigInt(1);\n/**\n * @name _1Mn\n * @summary BigInt constant for 1,000,000.\n */\n\nexport const _1Mn = BigInt(1000000);\n/**\n* @name _1Bn\n* @summary BigInt constant for 1,000,000,000.\n*/\n\nexport const _1Bn = BigInt(1000000000);\n/**\n* @name _1Qn\n* @summary BigInt constant for 1,000,000,000,000,000,000.\n*/\n\nexport const _1Qn = _1Bn * _1Bn;\n/**\n* @name _2pow53n\n* @summary BigInt constant for MAX_SAFE_INTEGER\n*/\n\nexport const _2pow53n = BigInt(Number.MAX_SAFE_INTEGER);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInt } from '@polkadot/x-bigint';\nimport { _1n } from \"../bi/consts.js\";\nimport { objectSpread } from \"../object/spread.js\";\nconst U8_MAX = BigInt(256);\nconst U16_MAX = BigInt(256 * 256);\n\nfunction xor(input) {\n  const result = new Uint8Array(input.length);\n  const dvI = new DataView(input.buffer, input.byteOffset);\n  const dvO = new DataView(result.buffer);\n  const mod = input.length % 2;\n  const length = input.length - mod;\n\n  for (let i = 0; i < length; i += 2) {\n    dvO.setUint16(i, dvI.getUint16(i) ^ 0xffff);\n  }\n\n  if (mod) {\n    dvO.setUint8(length, dvI.getUint8(length) ^ 0xff);\n  }\n\n  return result;\n}\n\nfunction toBigInt(input) {\n  const dvI = new DataView(input.buffer, input.byteOffset);\n  const mod = input.length % 2;\n  const length = input.length - mod;\n  let result = BigInt(0);\n\n  for (let i = 0; i < length; i += 2) {\n    result = result * U16_MAX + BigInt(dvI.getUint16(i));\n  }\n\n  if (mod) {\n    result = result * U8_MAX + BigInt(dvI.getUint8(length));\n  }\n\n  return result;\n}\n/**\n * @name u8aToBigInt\n * @summary Creates a BigInt from a Uint8Array object.\n */\n\n\nexport function u8aToBigInt(value, options = {}) {\n  if (!value || !value.length) {\n    return BigInt(0);\n  }\n\n  const {\n    isLe,\n    isNegative\n  } = objectSpread({\n    isLe: true,\n    isNegative: false\n  }, options);\n  const u8a = isLe ? value.reverse() : value;\n  return isNegative ? toBigInt(xor(u8a)) * -_1n - _1n : toBigInt(u8a);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInt } from '@polkadot/x-bigint';\nimport { hexToBigInt } from \"../hex/toBigInt.js\";\nimport { isBn } from \"../is/bn.js\";\nimport { isHex } from \"../is/hex.js\";\nimport { isToBigInt } from \"../is/toBigInt.js\";\nimport { isToBn } from \"../is/toBn.js\";\n/**\n * @name nToBigInt\n * @summary Creates a bigInt value from a BN, bigint, string (base 10 or hex) or number input.\n */\n\nexport function nToBigInt(value) {\n  return typeof value === 'bigint' ? value : !value ? BigInt(0) : isHex(value) ? hexToBigInt(value.toString()) : isBn(value) ? BigInt(value.toString()) : isToBigInt(value) ? value.toBigInt() : isToBn(value) ? BigInt(value.toBn().toString()) : BigInt(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInt } from '@polkadot/x-bigint';\nimport { objectSpread } from \"../object/spread.js\";\nimport { u8aToBigInt } from \"../u8a/toBigInt.js\";\nimport { hexToU8a } from \"./toU8a.js\";\n/**\n * @name hexToBigInt\n * @summary Creates a BigInt instance object from a hex string.\n */\n\nexport function hexToBigInt(value, options = {}) {\n  return !value || value === '0x' ? BigInt(0) : u8aToBigInt(hexToU8a(value), objectSpread({\n    isLe: false,\n    isNegative: false\n  }, options));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInt } from '@polkadot/x-bigint';\nimport { objectSpread } from \"../object/spread.js\";\nimport { _0n, _1n } from \"./consts.js\";\nimport { nToBigInt } from \"./toBigInt.js\";\nconst DIV = BigInt(256);\nconst NEG_MASK = BigInt(0xff);\n\nfunction createEmpty({\n  bitLength = 0\n}) {\n  return bitLength === -1 ? new Uint8Array() : new Uint8Array(Math.ceil(bitLength / 8));\n}\n\nfunction toU8a(value, {\n  isLe,\n  isNegative\n}) {\n  const arr = [];\n\n  if (isNegative) {\n    value = (value + _1n) * -_1n;\n  }\n\n  while (value !== _0n) {\n    const mod = value % DIV;\n    const val = Number(isNegative ? mod ^ NEG_MASK : mod);\n\n    if (isLe) {\n      arr.push(val);\n    } else {\n      arr.unshift(val);\n    }\n\n    value = (value - mod) / DIV;\n  }\n\n  return Uint8Array.from(arr);\n}\n/**\n * @name nToU8a\n * @summary Creates a Uint8Array object from a bigint.\n */\n\n\nexport function nToU8a(value, options) {\n  const opts = objectSpread({\n    bitLength: -1,\n    isLe: true,\n    isNegative: false\n  }, options);\n  const valueBi = nToBigInt(value);\n\n  if (valueBi === _0n) {\n    return createEmpty(opts);\n  }\n\n  const u8a = toU8a(valueBi, opts);\n\n  if (opts.bitLength === -1) {\n    return u8a;\n  }\n\n  const byteLength = Math.ceil((opts.bitLength || 0) / 8);\n  const output = new Uint8Array(byteLength);\n\n  if (opts.isNegative) {\n    output.fill(0xff);\n  }\n\n  output.set(u8a, opts.isLe ? 0 : byteLength - u8a.length);\n  return output;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { _0n, assert, BN, bnToU8a, hasBigInt, isU8a, nToU8a, u8aToBigInt } from '@polkadot/util';\nimport { BigInt } from '@polkadot/x-bigint';\nimport { BN_BE_256_OPTS, BN_BE_OPTS } from \"../bn.js\"; // pre-defined curve param as lifted form elliptic\n// https://github.com/indutny/elliptic/blob/e71b2d9359c5fe9437fbf46f1f05096de447de57/lib/elliptic/curves.js#L182\n\nconst N = 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141'.replace(/ /g, '');\nconst N_BI = BigInt(`0x${N}`);\nconst N_BN = new BN(N, 'hex');\n\nfunction addBi(seckey, tweak) {\n  let res = u8aToBigInt(tweak, BN_BE_OPTS);\n  assert(res < N_BI, 'Tweak parameter is out of range');\n  res += u8aToBigInt(seckey, BN_BE_OPTS);\n\n  if (res >= N_BI) {\n    res -= N_BI;\n  }\n\n  assert(res !== _0n, 'Invalid resulting private key');\n  return nToU8a(res, BN_BE_256_OPTS);\n}\n\nfunction addBn(seckey, tweak) {\n  const res = new BN(tweak);\n  assert(res.cmp(N_BN) < 0, 'Tweak parameter is out of range');\n  res.iadd(new BN(seckey));\n\n  if (res.cmp(N_BN) >= 0) {\n    res.isub(N_BN);\n  }\n\n  assert(!res.isZero(), 'Invalid resulting private key');\n  return bnToU8a(res, BN_BE_256_OPTS);\n}\n\nexport function secp256k1PrivateKeyTweakAdd(seckey, tweak, onlyBn) {\n  assert(isU8a(seckey) && seckey.length === 32, 'Expected seckey to be an Uint8Array with length 32');\n  assert(isU8a(tweak) && tweak.length === 32, 'Expected tweak to be an Uint8Array with length 32');\n  return !hasBigInt || onlyBn ? addBn(seckey, tweak) : addBi(seckey, tweak);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const HARDENED = 0x80000000;\nexport function hdValidatePath(path) {\n  if (!path.startsWith('m/')) {\n    return false;\n  }\n\n  const parts = path.split('/').slice(1);\n\n  for (const p of parts) {\n    const n = /^\\d+'?$/.test(p) ? parseInt(p.replace(/'$/, ''), 10) : Number.NaN;\n\n    if (isNaN(n) || n >= HARDENED || n < 0) {\n      return false;\n    }\n  }\n\n  return true;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, bnToU8a, stringToU8a, u8aConcat } from '@polkadot/util';\nimport { BN_BE_32_OPTS } from \"../../bn.js\";\nimport { hmacShaAsU8a } from \"../../hmac/index.js\";\nimport { secp256k1PairFromSeed, secp256k1PrivateKeyTweakAdd } from \"../../secp256k1/index.js\";\nimport { HARDENED, hdValidatePath } from \"../validatePath.js\";\nconst MASTER_SECRET = stringToU8a('Bitcoin seed');\n\nfunction createCoded(secretKey, chainCode) {\n  return {\n    chainCode,\n    publicKey: secp256k1PairFromSeed(secretKey).publicKey,\n    secretKey\n  };\n}\n\nfunction deriveChild(hd, index) {\n  const indexBuffer = bnToU8a(index, BN_BE_32_OPTS);\n  const data = index >= HARDENED ? u8aConcat(new Uint8Array(1), hd.secretKey, indexBuffer) : u8aConcat(hd.publicKey, indexBuffer);\n\n  try {\n    const I = hmacShaAsU8a(hd.chainCode, data, 512);\n    return createCoded(secp256k1PrivateKeyTweakAdd(hd.secretKey, I.slice(0, 32)), I.slice(32));\n  } catch (err) {\n    // In case parse256(IL) >= n or ki == 0, proceed with the next value for i\n    return deriveChild(hd, index + 1);\n  }\n}\n\nexport function hdEthereum(seed, path = '') {\n  const I = hmacShaAsU8a(MASTER_SECRET, seed, 512);\n  let hd = createCoded(I.slice(0, 32), I.slice(32));\n\n  if (!path || path === 'm' || path === 'M' || path === \"m'\" || path === \"M'\") {\n    return hd;\n  }\n\n  assert(hdValidatePath(path), 'Invalid derivation path');\n  const parts = path.split('/').slice(1);\n\n  for (const p of parts) {\n    hd = deriveChild(hd, parseInt(p, 10) + (p.length > 1 && p.endsWith(\"'\") ? HARDENED : 0));\n  }\n\n  return hd;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, compactAddLength, isU8a, stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from \"../blake2/asU8a.js\";\nconst HDKD = compactAddLength(stringToU8a('Secp256k1HDKD'));\nexport function secp256k1DeriveHard(seed, chainCode) {\n  assert(isU8a(chainCode) && chainCode.length === 32, 'Invalid chainCode passed to derive'); // NOTE This is specific to the Substrate HDD derivation, so always use the blake2 hasher\n\n  return blake2AsU8a(u8aConcat(HDKD, seed, chainCode), 256);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\nexport function createSeedDeriveFn(fromSeed, derive) {\n  return (keypair, {\n    chainCode,\n    isHard\n  }) => {\n    assert(isHard, 'A soft key was found in the path and is not supported');\n    return fromSeed(derive(keypair.secretKey.subarray(0, 32), chainCode));\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { secp256k1DeriveHard } from \"../secp256k1/deriveHard.js\";\nimport { secp256k1PairFromSeed } from \"../secp256k1/pair/fromSeed.js\";\nimport { createSeedDeriveFn } from \"./hdkdDerive.js\";\nexport const keyHdkdEcdsa = createSeedDeriveFn(secp256k1PairFromSeed, secp256k1DeriveHard);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, compactAddLength, isU8a, stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from \"../blake2/asU8a.js\";\nconst HDKD = compactAddLength(stringToU8a('Ed25519HDKD'));\nexport function ed25519DeriveHard(seed, chainCode) {\n  assert(isU8a(chainCode) && chainCode.length === 32, 'Invalid chainCode passed to derive');\n  return blake2AsU8a(u8aConcat(HDKD, seed, chainCode));\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { ed25519DeriveHard, ed25519PairFromSeed } from \"../ed25519/index.js\";\nimport { createSeedDeriveFn } from \"./hdkdDerive.js\";\nexport const keyHdkdEd25519 = createSeedDeriveFn(ed25519PairFromSeed, ed25519DeriveHard);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isU8a } from '@polkadot/util';\nimport { sr25519PairFromU8a } from \"./pair/fromU8a.js\";\nimport { sr25519KeypairToU8a } from \"./pair/toU8a.js\";\nexport function createDeriveFn(derive) {\n  return (keypair, chainCode) => {\n    assert(isU8a(chainCode) && chainCode.length === 32, 'Invalid chainCode passed to derive');\n    return sr25519PairFromU8a(derive(sr25519KeypairToU8a(keypair), chainCode));\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aConcat } from '@polkadot/util';\nexport function sr25519KeypairToU8a({\n  publicKey,\n  secretKey\n}) {\n  return u8aConcat(secretKey, publicKey).slice();\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sr25519DeriveKeypairHard } from '@polkadot/wasm-crypto';\nimport { createDeriveFn } from \"./derive.js\";\nexport const sr25519DeriveHard = createDeriveFn(sr25519DeriveKeypairHard);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sr25519DeriveKeypairSoft } from '@polkadot/wasm-crypto';\nimport { createDeriveFn } from \"./derive.js\";\nexport const sr25519DeriveSoft = createDeriveFn(sr25519DeriveKeypairSoft);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { keyHdkdEcdsa } from \"./hdkdEcdsa.js\";\nimport { keyHdkdEd25519 } from \"./hdkdEd25519.js\";\nimport { keyHdkdSr25519 } from \"./hdkdSr25519.js\";\nconst generators = {\n  ecdsa: keyHdkdEcdsa,\n  ed25519: keyHdkdEd25519,\n  // FIXME This is Substrate-compatible, not Ethereum-compatible\n  ethereum: keyHdkdEcdsa,\n  sr25519: keyHdkdSr25519\n};\nexport function keyFromPath(pair, path, type) {\n  const keyHdkd = generators[type];\n  let result = pair;\n\n  for (const junction of path) {\n    result = keyHdkd(result, junction);\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sr25519DeriveHard } from \"../sr25519/deriveHard.js\";\nimport { sr25519DeriveSoft } from \"../sr25519/deriveSoft.js\";\nexport function keyHdkdSr25519(keypair, {\n  chainCode,\n  isSoft\n}) {\n  return isSoft ? sr25519DeriveSoft(keypair, chainCode) : sr25519DeriveHard(keypair, chainCode);\n}","// Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// default substrate dev phrase\nexport const DEV_PHRASE = 'bottom drive obey lake curtain smoke basket hold race lonely fit walk'; // seed from the above phrase\n\nexport const DEV_SEED = '0xfac7959dbfe72f052e5a0c3c8d6530f202b02fd8f9f5ca3580ec8deb7797479e';","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from \"./toU8a.js\";\n/**\n * @name u8aEq\n * @summary Compares two Uint8Arrays for equality.\n * @description\n * For `UInt8Array` (or hex string) input values true if there is a match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */\n\nexport function u8aEq(a, b) {\n  const u8aa = u8aToU8a(a);\n  const u8ab = u8aToU8a(b);\n\n  if (u8aa.length === u8ab.length) {\n    const dvA = new DataView(u8aa.buffer, u8aa.byteOffset);\n    const dvB = new DataView(u8ab.buffer, u8ab.byteOffset);\n    const mod = u8aa.length % 4;\n    const length = u8aa.length - mod;\n\n    for (let i = 0; i < length; i += 4) {\n      if (dvA.getUint32(i) !== dvB.getUint32(i)) {\n        return false;\n      }\n    }\n\n    for (let i = length; i < u8aa.length; i++) {\n      if (u8aa[i] !== u8ab[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { blake2AsU8a } from \"../blake2/index.js\";\nimport { keccakAsU8a } from \"../keccak/index.js\";\nexport function hasher(hashType, data, onlyJs) {\n  return hashType === 'keccak' ? keccakAsU8a(data, undefined, onlyJs) : blake2AsU8a(data, undefined, undefined, onlyJs);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Signature, signSync } from '@noble/secp256k1';\nimport { assert, bnToU8a, hasBigInt, u8aConcat } from '@polkadot/util';\nimport { isReady, secp256k1Sign as wasm } from '@polkadot/wasm-crypto';\nimport { BN_BE_256_OPTS } from \"../bn.js\";\nimport { hasher } from \"./hasher.js\";\n/**\n * @name secp256k1Sign\n * @description Returns message signature of `message`, using the supplied pair\n */\n\nexport function secp256k1Sign(message, {\n  secretKey\n}, hashType = 'blake2', onlyJs) {\n  assert((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) === 32, 'Expected valid secp256k1 secretKey, 32-bytes');\n  const data = hasher(hashType, message, onlyJs);\n\n  if (!hasBigInt || !onlyJs && isReady()) {\n    return wasm(data, secretKey);\n  }\n\n  const [sigBytes, recoveryParam] = signSync(data, secretKey, {\n    canonical: true,\n    recovered: true\n  });\n  const {\n    r,\n    s\n  } = Signature.fromHex(sigBytes);\n  return u8aConcat(bnToU8a(r, BN_BE_256_OPTS), bnToU8a(s, BN_BE_256_OPTS), new Uint8Array([recoveryParam || 0]));\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport nacl from 'tweetnacl';\n/**\n * @name naclOpen\n * @summary Opens a message using the receiver's secretKey and nonce\n * @description\n * Returns a message sealed by the sender, using the receiver's `secret` and `nonce`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { naclOpen } from '@polkadot/util-crypto';\n *\n * naclOpen([...], [...], [...]); // => [...]\n * ```\n */\n\nexport function naclOpen(sealed, nonce, senderBoxPublic, receiverBoxSecret) {\n  return nacl.box.open(sealed, nonce, senderBoxPublic, receiverBoxSecret) || null;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport ed2curve from 'ed2curve';\nimport { assertReturn } from '@polkadot/util';\nexport function convertSecretKeyToCurve25519(secretKey) {\n  return ed2curve.convertSecretKey(secretKey);\n}\nexport function convertPublicKeyToCurve25519(publicKey) {\n  return assertReturn(ed2curve.convertPublicKey(publicKey), 'Unable to convert publicKey to ed25519');\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport nacl from 'tweetnacl';\nimport { randomAsU8a } from \"../random/asU8a.js\";\n\n/**\n * @name naclSeal\n * @summary Seals a message using the sender's encrypting secretKey, receiver's public key, and nonce\n * @description\n * Returns an encrypted message which can be open only by receiver's secretKey. If the `nonce` was not supplied, a random value is generated.\n * @example\n * <BR>\n *\n * ```javascript\n * import { naclSeal } from '@polkadot/util-crypto';\n *\n * naclSeal([...], [...], [...], [...]); // => [...]\n * ```\n */\nexport function naclSeal(message, senderBoxSecret, receiverBoxPublic, nonce = randomAsU8a(24)) {\n  return {\n    nonce,\n    sealed: nacl.box(message, nonce, receiverBoxPublic, senderBoxSecret)\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Point } from '@noble/secp256k1';\nimport { assert, hasBigInt } from '@polkadot/util';\nimport { isReady, secp256k1Compress as wasm } from '@polkadot/wasm-crypto';\nexport function secp256k1Compress(publicKey, onlyJs) {\n  if (publicKey.length === 33) {\n    return publicKey;\n  }\n\n  assert(publicKey.length === 65, 'Invalid publicKey provided');\n  return !hasBigInt || !onlyJs && isReady() ? wasm(publicKey) : Point.fromHex(publicKey).toRawBytes(true);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Originally from https://github.com/polkadot-js/extension/pull/743\nimport { u8aConcat } from \"./concat.js\";\nimport { u8aEq } from \"./eq.js\";\nimport { u8aToU8a } from \"./toU8a.js\";\nexport const U8A_WRAP_ETHEREUM = u8aToU8a('\\x19Ethereum Signed Message:\\n');\nexport const U8A_WRAP_PREFIX = u8aToU8a('<Bytes>');\nexport const U8A_WRAP_POSTFIX = u8aToU8a('</Bytes>');\nconst WRAP_LEN = U8A_WRAP_PREFIX.length + U8A_WRAP_POSTFIX.length;\nexport function u8aIsWrapped(u8a, withEthereum) {\n  return u8a.length >= WRAP_LEN && u8aEq(u8a.subarray(0, U8A_WRAP_PREFIX.length), U8A_WRAP_PREFIX) && u8aEq(u8a.slice(-U8A_WRAP_POSTFIX.length), U8A_WRAP_POSTFIX) || withEthereum && u8a.length >= U8A_WRAP_ETHEREUM.length && u8aEq(u8a.subarray(0, U8A_WRAP_ETHEREUM.length), U8A_WRAP_ETHEREUM);\n}\nexport function u8aUnwrapBytes(bytes) {\n  const u8a = u8aToU8a(bytes); // we don't want to unwrap Ethereum-style wraps\n\n  return u8aIsWrapped(u8a, false) ? u8a.subarray(U8A_WRAP_PREFIX.length, u8a.length - U8A_WRAP_POSTFIX.length) : u8a;\n}\nexport function u8aWrapBytes(bytes) {\n  const u8a = u8aToU8a(bytes); // if Ethereum-wrapping, we don't add our wrapping bytes\n\n  return u8aIsWrapped(u8a, true) ? u8a : u8aConcat(U8A_WRAP_PREFIX, u8a, U8A_WRAP_POSTFIX);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport nacl from 'tweetnacl';\nimport { assert, u8aToU8a } from '@polkadot/util';\nimport { ed25519Verify as wasmVerify, isReady } from '@polkadot/wasm-crypto';\n/**\n * @name ed25519Sign\n * @summary Verifies the signature on the supplied message.\n * @description\n * Verifies the `signature` on `message` with the supplied `publicKey`. Returns `true` on sucess, `false` otherwise.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519Verify } from '@polkadot/util-crypto';\n *\n * ed25519Verify([...], [...], [...]); // => true/false\n * ```\n */\n\nexport function ed25519Verify(message, signature, publicKey, onlyJs) {\n  const messageU8a = u8aToU8a(message);\n  const publicKeyU8a = u8aToU8a(publicKey);\n  const signatureU8a = u8aToU8a(signature);\n  assert(publicKeyU8a.length === 32, () => `Invalid publicKey, received ${publicKeyU8a.length}, expected 32`);\n  assert(signatureU8a.length === 64, () => `Invalid signature, received ${signatureU8a.length} bytes, expected 64`);\n  return !onlyJs && isReady() ? wasmVerify(signatureU8a, messageU8a, publicKeyU8a) : nacl.sign.detached.verify(messageU8a, signatureU8a, publicKeyU8a);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { recoverPublicKey, Signature } from '@noble/secp256k1';\nimport { assert, hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { isReady, secp256k1Recover as wasm } from '@polkadot/wasm-crypto';\nimport { secp256k1Compress } from \"./compress.js\";\nimport { secp256k1Expand } from \"./expand.js\";\n/**\n * @name secp256k1Recover\n * @description Recovers a publicKey from the supplied signature\n */\n\nexport function secp256k1Recover(msgHash, signature, recovery, hashType = 'blake2', onlyJs) {\n  const sig = u8aToU8a(signature).subarray(0, 64);\n  const msg = u8aToU8a(msgHash);\n  const publicKey = !hasBigInt || !onlyJs && isReady() ? wasm(msg, sig, recovery) : recoverPublicKey(msg, Signature.fromCompact(sig).toRawBytes(), recovery);\n  assert(publicKey, 'Unable to recover publicKey from signature');\n  return hashType === 'keccak' ? secp256k1Expand(publicKey, onlyJs) : secp256k1Compress(publicKey, onlyJs);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util';\nimport { sr25519Verify as wasmVerify } from '@polkadot/wasm-crypto';\n/**\n * @name sr25519Verify\n * @description Verifies the signature of `message`, using the supplied pair\n */\n\nexport function sr25519Verify(message, signature, publicKey) {\n  const publicKeyU8a = u8aToU8a(publicKey);\n  const signatureU8a = u8aToU8a(signature);\n  assert(publicKeyU8a.length === 32, () => `Invalid publicKey, received ${publicKeyU8a.length} bytes, expected 32`);\n  assert(signatureU8a.length === 64, () => `Invalid signature, received ${signatureU8a.length} bytes, expected 64`);\n  return wasmVerify(signatureU8a, u8aToU8a(message), publicKeyU8a);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aIsWrapped, u8aToU8a, u8aUnwrapBytes, u8aWrapBytes } from '@polkadot/util';\nimport { decodeAddress } from \"../address/decode.js\";\nimport { ed25519Verify } from \"../ed25519/verify.js\";\nimport { secp256k1Verify } from \"../secp256k1/verify.js\";\nimport { sr25519Verify } from \"../sr25519/verify.js\";\n\nconst secp256k1VerifyHasher = hashType => (message, signature, publicKey) => secp256k1Verify(message, signature, publicKey, hashType);\n\nconst VERIFIERS_ECDSA = [['ecdsa', secp256k1VerifyHasher('blake2')], ['ethereum', secp256k1VerifyHasher('keccak')]];\nconst VERIFIERS = [['ed25519', ed25519Verify], ['sr25519', sr25519Verify], ...VERIFIERS_ECDSA];\nconst CRYPTO_TYPES = ['ed25519', 'sr25519', 'ecdsa'];\n\nfunction verifyDetect(result, {\n  message,\n  publicKey,\n  signature\n}, verifiers = VERIFIERS) {\n  result.isValid = verifiers.some(([crypto, verify]) => {\n    try {\n      if (verify(message, signature, publicKey)) {\n        result.crypto = crypto;\n        return true;\n      }\n    } catch (error) {// do nothing, result.isValid still set to false\n    }\n\n    return false;\n  });\n  return result;\n}\n\nfunction verifyMultisig(result, {\n  message,\n  publicKey,\n  signature\n}) {\n  assert([0, 1, 2].includes(signature[0]), () => `Unknown crypto type, expected signature prefix [0..2], found ${signature[0]}`);\n  const type = CRYPTO_TYPES[signature[0]] || 'none';\n  result.crypto = type;\n\n  try {\n    result.isValid = {\n      ecdsa: () => verifyDetect(result, {\n        message,\n        publicKey,\n        signature: signature.subarray(1)\n      }, VERIFIERS_ECDSA).isValid,\n      ed25519: () => ed25519Verify(message, signature.subarray(1), publicKey),\n      none: () => {\n        throw Error('no verify for `none` crypto type');\n      },\n      sr25519: () => sr25519Verify(message, signature.subarray(1), publicKey)\n    }[type]();\n  } catch (error) {// ignore, result.isValid still set to false\n  }\n\n  return result;\n}\n\nfunction getVerifyFn(signature) {\n  return [0, 1, 2].includes(signature[0]) && [65, 66].includes(signature.length) ? verifyMultisig : verifyDetect;\n}\n\nexport function signatureVerify(message, signature, addressOrPublicKey) {\n  const signatureU8a = u8aToU8a(signature);\n  assert([64, 65, 66].includes(signatureU8a.length), () => `Invalid signature length, expected [64..66] bytes, found ${signatureU8a.length}`);\n  const publicKey = decodeAddress(addressOrPublicKey);\n  const input = {\n    message: u8aToU8a(message),\n    publicKey,\n    signature: signatureU8a\n  };\n  const result = {\n    crypto: 'none',\n    isValid: false,\n    isWrapped: u8aIsWrapped(input.message, true),\n    publicKey\n  };\n  const isWrappedBytes = u8aIsWrapped(input.message, false);\n  const verifyFn = getVerifyFn(signatureU8a);\n  verifyFn(result, input);\n\n  if (result.crypto !== 'none' || result.isWrapped && !isWrappedBytes) {\n    return result;\n  }\n\n  input.message = isWrappedBytes ? u8aUnwrapBytes(input.message) : u8aWrapBytes(input.message);\n  return verifyFn(result, input);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aEq, u8aToU8a } from '@polkadot/util';\nimport { hasher } from \"./hasher.js\";\nimport { secp256k1Recover } from \"./recover.js\";\n/**\n * @name secp256k1Verify\n * @description Verifies the signature of `message`, using the supplied pair\n */\n\nexport function secp256k1Verify(msgHash, signature, address, hashType = 'blake2', onlyJs) {\n  const sig = u8aToU8a(signature);\n  assert(sig.length === 65, `Expected signature with 65 bytes, ${sig.length} found instead`);\n  const publicKey = secp256k1Recover(hasher(hashType, msgHash), sig, sig[64], hashType, onlyJs);\n  const signerAddr = hasher(hashType, publicKey, onlyJs);\n  const inputAddr = u8aToU8a(address); // for Ethereum (keccak) the last 20 bytes is the address\n\n  return u8aEq(publicKey, inputAddr) || (hashType === 'keccak' ? u8aEq(signerAddr.slice(-20), inputAddr.slice(-20)) : u8aEq(signerAddr, inputAddr));\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util';\nimport { vrfSign } from '@polkadot/wasm-crypto';\nconst EMPTY_U8A = new Uint8Array();\n/**\n * @name sr25519VrfSign\n * @description Sign with sr25519 vrf signing (deterministic)\n */\n\nexport function sr25519VrfSign(message, {\n  secretKey\n}, context = EMPTY_U8A, extra = EMPTY_U8A) {\n  assert((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) === 64, 'Invalid secretKey, expected 64-bytes');\n  return vrfSign(secretKey, u8aToU8a(context), u8aToU8a(message), u8aToU8a(extra));\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util';\nimport { vrfVerify } from '@polkadot/wasm-crypto';\nconst EMPTY_U8A = new Uint8Array();\n/**\n * @name sr25519VrfVerify\n * @description Verify with sr25519 vrf verification\n */\n\nexport function sr25519VrfVerify(message, signOutput, publicKey, context = EMPTY_U8A, extra = EMPTY_U8A) {\n  const publicKeyU8a = u8aToU8a(publicKey);\n  const proofU8a = u8aToU8a(signOutput);\n  assert(publicKeyU8a.length === 32, 'Invalid publicKey, expected 32-bytes');\n  assert(proofU8a.length === 96, 'Invalid vrfSign output, expected 96 bytes');\n  return vrfVerify(publicKeyU8a, u8aToU8a(context), u8aToU8a(message), u8aToU8a(extra), proofU8a);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name u8aFixLength\n * @summary Shifts a Uint8Array to a specific bitLength\n * @description\n * Returns a uint8Array with the specified number of bits contained in the return value. (If bitLength is -1, length checking is not done). Values with more bits are trimmed to the specified length.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aFixLength } from '@polkadot/util';\n *\n * u8aFixLength('0x12') // => 0x12\n * u8aFixLength('0x12', 16) // => 0x0012\n * u8aFixLength('0x1234', 8) // => 0x12\n * ```\n */\nexport function u8aFixLength(value, bitLength = -1, atStart = false) {\n  const byteLength = Math.ceil(bitLength / 8);\n\n  if (bitLength === -1 || value.length === byteLength) {\n    return value;\n  } else if (value.length > byteLength) {\n    return value.subarray(0, byteLength);\n  }\n\n  const result = new Uint8Array(byteLength);\n  result.set(value, atStart ? 0 : byteLength - value.length);\n  return result;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport nacl from 'tweetnacl';\n/**\n * @name naclDecrypt\n * @summary Decrypts a message using the supplied secretKey and nonce\n * @description\n * Returns an decrypted message, using the `secret` and `nonce`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { naclDecrypt } from '@polkadot/util-crypto';\n *\n * naclDecrypt([...], [...], [...]); // => [...]\n * ```\n */\n\nexport function naclDecrypt(encrypted, nonce, secret) {\n  return nacl.secretbox.open(encrypted, nonce, secret) || null;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToBn } from \"../hex/toBn.js\";\nimport { u8aToHex } from \"./toHex.js\";\nconst DEFAULT_OPTS = {\n  isLe: true,\n  isNegative: false\n};\n/**\n * @name u8aToBn\n * @summary Creates a BN from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual BN. `null` or `undefined` values returns an `0x0` value.\n * @param value The value to convert\n * @param options Options to pass while converting\n * @param options.isLe Convert using Little Endian\n * @param options.isNegative Convert using two's complement\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToBn } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */\n\nexport function u8aToBn(value, options = DEFAULT_OPTS) {\n  return hexToBn(u8aToHex(value), options);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const DEFAULT_PARAMS = {\n  N: 1 << 15,\n  p: 1,\n  r: 8\n};","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToBn } from '@polkadot/util';\nimport { BN_LE_OPTS } from \"../bn.js\";\nimport { DEFAULT_PARAMS } from \"./defaults.js\";\nexport function scryptFromU8a(data) {\n  const salt = data.subarray(0, 32);\n  const N = u8aToBn(data.subarray(32 + 0, 32 + 4), BN_LE_OPTS).toNumber();\n  const p = u8aToBn(data.subarray(32 + 4, 32 + 8), BN_LE_OPTS).toNumber();\n  const r = u8aToBn(data.subarray(32 + 8, 32 + 12), BN_LE_OPTS).toNumber(); // FIXME At this moment we assume these to be fixed params, this is not a great idea since we lose flexibility\n  // and updates for greater security. However we need some protection against carefully-crafted params that can\n  // eat up CPU since these are user inputs. So we need to get very clever here, but atm we only allow the defaults\n  // and if no match, bail out\n\n  assert(N === DEFAULT_PARAMS.N && p === DEFAULT_PARAMS.p && r === DEFAULT_PARAMS.r, 'Invalid injected scrypt params found');\n  return {\n    params: {\n      N,\n      p,\n      r\n    },\n    salt\n  };\n}","import { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { assertNumber, asyncLoop, checkOpts, u32 } from './utils.js';\n// RFC 7914 Scrypt KDF\n// Left rotate for uint32\nconst rotl = (a, b) => (a << b) | (a >>> (32 - b));\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(prev, pi, input, ii, out, oi) {\n    // Based on https://cr.yp.to/salsa20.html\n    // Xor blocks\n    let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n    let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n    let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n    let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n    let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n    let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n    let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n    let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n    // Save state to temporary variables (salsa)\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    // Main loop (salsa)\n    for (let i = 0; i < 8; i += 2) {\n        x04 ^= rotl(x00 + x12 | 0, 7);\n        x08 ^= rotl(x04 + x00 | 0, 9);\n        x12 ^= rotl(x08 + x04 | 0, 13);\n        x00 ^= rotl(x12 + x08 | 0, 18);\n        x09 ^= rotl(x05 + x01 | 0, 7);\n        x13 ^= rotl(x09 + x05 | 0, 9);\n        x01 ^= rotl(x13 + x09 | 0, 13);\n        x05 ^= rotl(x01 + x13 | 0, 18);\n        x14 ^= rotl(x10 + x06 | 0, 7);\n        x02 ^= rotl(x14 + x10 | 0, 9);\n        x06 ^= rotl(x02 + x14 | 0, 13);\n        x10 ^= rotl(x06 + x02 | 0, 18);\n        x03 ^= rotl(x15 + x11 | 0, 7);\n        x07 ^= rotl(x03 + x15 | 0, 9);\n        x11 ^= rotl(x07 + x03 | 0, 13);\n        x15 ^= rotl(x11 + x07 | 0, 18);\n        x01 ^= rotl(x00 + x03 | 0, 7);\n        x02 ^= rotl(x01 + x00 | 0, 9);\n        x03 ^= rotl(x02 + x01 | 0, 13);\n        x00 ^= rotl(x03 + x02 | 0, 18);\n        x06 ^= rotl(x05 + x04 | 0, 7);\n        x07 ^= rotl(x06 + x05 | 0, 9);\n        x04 ^= rotl(x07 + x06 | 0, 13);\n        x05 ^= rotl(x04 + x07 | 0, 18);\n        x11 ^= rotl(x10 + x09 | 0, 7);\n        x08 ^= rotl(x11 + x10 | 0, 9);\n        x09 ^= rotl(x08 + x11 | 0, 13);\n        x10 ^= rotl(x09 + x08 | 0, 18);\n        x12 ^= rotl(x15 + x14 | 0, 7);\n        x13 ^= rotl(x12 + x15 | 0, 9);\n        x14 ^= rotl(x13 + x12 | 0, 13);\n        x15 ^= rotl(x14 + x13 | 0, 18);\n    }\n    // Write output (salsa)\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\nfunction BlockMix(input, ii, out, oi, r) {\n    // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n    let head = oi + 0;\n    let tail = oi + 16 * r;\n    for (let i = 0; i < 16; i++)\n        out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n    for (let i = 0; i < r; i++, head += 16, ii += 16) {\n        // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n        XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n        if (i > 0)\n            tail += 16; // First iteration overwrites tmp value in tail\n        XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n    }\n}\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password, salt, _opts) {\n    // Maxmem - 1GB+1KB by default\n    const opts = checkOpts({\n        dkLen: 32,\n        asyncTick: 10,\n        maxmem: 1024 ** 3 + 1024,\n    }, _opts);\n    const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n    assertNumber(N);\n    assertNumber(r);\n    assertNumber(p);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    assertNumber(maxmem);\n    if (onProgress !== undefined && typeof onProgress !== 'function')\n        throw new Error('progressCb should be function');\n    const blockSize = 128 * r;\n    const blockSize32 = blockSize / 4;\n    if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n        // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n        // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n        throw new Error('Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32');\n    }\n    if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n        throw new Error('Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)');\n    }\n    if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n        throw new Error('Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32');\n    }\n    const memUsed = blockSize * (N + p);\n    if (memUsed > maxmem) {\n        throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`);\n    }\n    // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n    // Since it has only one iteration there is no reason to use async variant\n    const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n    const B32 = u32(B);\n    // Re-used between parallel iterations. Array(iterations) of B\n    const V = u32(new Uint8Array(blockSize * N));\n    const tmp = u32(new Uint8Array(blockSize));\n    let blockMixCb = () => { };\n    if (onProgress) {\n        const totalBlockMix = 2 * N * p;\n        // Invoke callback if progress changes from 10.01 to 10.02\n        // Allows to draw smooth progress bar on up to 8K screen\n        const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n        let blockMixCnt = 0;\n        blockMixCb = () => {\n            blockMixCnt++;\n            if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n                onProgress(blockMixCnt / totalBlockMix);\n        };\n    }\n    return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\nfunction scryptOutput(password, dkLen, B, V, tmp) {\n    const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n    B.fill(0);\n    V.fill(0);\n    tmp.fill(0);\n    return res;\n}\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(password, salt, opts);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        for (let i = 0, pos = 0; i < N - 1; i++) {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        }\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        for (let i = 0; i < N; i++) {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        }\n    }\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(password, salt, opts);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        let pos = 0;\n        await asyncLoop(N - 1, asyncTick, (i) => {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        });\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        await asyncLoop(N, asyncTick, (i) => {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        });\n    }\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { scrypt as scryptJs } from '@noble/hashes/scrypt';\nimport { hasBigInt, objectSpread, u8aToU8a } from '@polkadot/util';\nimport { isReady, scrypt } from '@polkadot/wasm-crypto';\nimport { randomAsU8a } from \"../random/asU8a.js\";\nimport { DEFAULT_PARAMS } from \"./defaults.js\";\nexport function scryptEncode(passphrase, salt = randomAsU8a(), params = DEFAULT_PARAMS, onlyJs) {\n  const u8a = u8aToU8a(passphrase);\n  return {\n    params,\n    password: !hasBigInt || !onlyJs && isReady() ? scrypt(u8a, salt, Math.log2(params.N), params.r, params.p) : scryptJs(u8a, salt, objectSpread({\n      dkLen: 64\n    }, params)),\n    salt\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const ENCODING = ['scrypt', 'xsalsa20-poly1305'];\nexport const ENCODING_NONE = ['none'];\nexport const ENCODING_VERSION = '3';\nexport const NONCE_LENGTH = 24;\nexport const SCRYPT_LENGTH = 32 + 3 * 4;","// Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const PKCS8_DIVIDER = new Uint8Array([161, 35, 3, 33, 0]);\nexport const PKCS8_HEADER = new Uint8Array([48, 83, 2, 1, 1, 48, 5, 6, 3, 43, 101, 112, 4, 34, 4, 32]);\nexport const PUB_LENGTH = 32;\nexport const SALT_LENGTH = 32;\nexport const SEC_LENGTH = 64;\nexport const SEED_LENGTH = 32;","// Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isUndefined, u8aEq } from '@polkadot/util';\nimport { jsonDecryptData } from '@polkadot/util-crypto';\nimport { PKCS8_DIVIDER, PKCS8_HEADER, PUB_LENGTH, SEC_LENGTH, SEED_LENGTH } from \"./defaults.js\";\nconst SEED_OFFSET = PKCS8_HEADER.length;\nexport function decodePair(passphrase, encrypted, _encType) {\n  const encType = Array.isArray(_encType) || isUndefined(_encType) ? _encType : [_encType];\n  const decrypted = jsonDecryptData(encrypted, passphrase, encType);\n  const header = decrypted.subarray(0, PKCS8_HEADER.length);\n  assert(u8aEq(header, PKCS8_HEADER), 'Invalid Pkcs8 header found in body');\n  let secretKey = decrypted.subarray(SEED_OFFSET, SEED_OFFSET + SEC_LENGTH);\n  let divOffset = SEED_OFFSET + SEC_LENGTH;\n  let divider = decrypted.subarray(divOffset, divOffset + PKCS8_DIVIDER.length); // old-style, we have the seed here\n\n  if (!u8aEq(divider, PKCS8_DIVIDER)) {\n    divOffset = SEED_OFFSET + SEED_LENGTH;\n    secretKey = decrypted.subarray(SEED_OFFSET, divOffset);\n    divider = decrypted.subarray(divOffset, divOffset + PKCS8_DIVIDER.length);\n    assert(u8aEq(divider, PKCS8_DIVIDER), 'Invalid Pkcs8 divider found in body');\n  }\n\n  const pubOffset = divOffset + PKCS8_DIVIDER.length;\n  const publicKey = decrypted.subarray(pubOffset, pubOffset + PUB_LENGTH);\n  return {\n    publicKey,\n    secretKey\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, stringToU8a, u8aFixLength } from '@polkadot/util';\nimport { naclDecrypt } from \"../nacl/index.js\";\nimport { scryptEncode, scryptFromU8a } from \"../scrypt/index.js\";\nimport { ENCODING, NONCE_LENGTH, SCRYPT_LENGTH } from \"./constants.js\";\nexport function jsonDecryptData(encrypted, passphrase, encType = ENCODING) {\n  assert(encrypted, 'No encrypted data available to decode');\n  assert(passphrase || !encType.includes('xsalsa20-poly1305'), 'Password required to decode encrypted data');\n  let encoded = encrypted;\n\n  if (passphrase) {\n    let password;\n\n    if (encType.includes('scrypt')) {\n      const {\n        params,\n        salt\n      } = scryptFromU8a(encrypted);\n      password = scryptEncode(passphrase, salt, params).password;\n      encrypted = encrypted.subarray(SCRYPT_LENGTH);\n    } else {\n      password = stringToU8a(passphrase);\n    }\n\n    encoded = naclDecrypt(encrypted.subarray(NONCE_LENGTH), encrypted.subarray(0, NONCE_LENGTH), u8aFixLength(password, 256, true));\n  }\n\n  assert(encoded, 'Unable to decode using the supplied passphrase');\n  return encoded;\n}","// Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aConcat } from '@polkadot/util';\nimport { naclEncrypt, scryptEncode, scryptToU8a } from '@polkadot/util-crypto';\nimport { PKCS8_DIVIDER, PKCS8_HEADER } from \"./defaults.js\";\nexport function encodePair({\n  publicKey,\n  secretKey\n}, passphrase) {\n  assert(secretKey, 'Expected a valid secretKey to be passed to encode');\n  const encoded = u8aConcat(PKCS8_HEADER, secretKey, PKCS8_DIVIDER, publicKey);\n\n  if (!passphrase) {\n    return encoded;\n  }\n\n  const {\n    params,\n    password,\n    salt\n  } = scryptEncode(passphrase);\n  const {\n    encrypted,\n    nonce\n  } = naclEncrypt(encoded, password.subarray(0, 32));\n  return u8aConcat(scryptToU8a(salt, params), nonce, encrypted);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport nacl from 'tweetnacl';\nimport { randomAsU8a } from \"../random/asU8a.js\";\n\n/**\n * @name naclEncrypt\n * @summary Encrypts a message using the supplied secretKey and nonce\n * @description\n * Returns an encrypted message, using the `secretKey` and `nonce`. If the `nonce` was not supplied, a random value is generated.\n * @example\n * <BR>\n *\n * ```javascript\n * import { naclEncrypt } from '@polkadot/util-crypto';\n *\n * naclEncrypt([...], [...]); // => [...]\n * ```\n */\nexport function naclEncrypt(message, secret, nonce = randomAsU8a(24)) {\n  return {\n    encrypted: nacl.secretbox(message, nonce, secret),\n    nonce\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToU8a, u8aConcat } from '@polkadot/util';\nimport { BN_LE_32_OPTS } from \"../bn.js\";\nexport function scryptToU8a(salt, {\n  N,\n  p,\n  r\n}) {\n  return u8aConcat(salt, bnToU8a(N, BN_LE_32_OPTS), bnToU8a(p, BN_LE_32_OPTS), bnToU8a(r, BN_LE_32_OPTS));\n}","// Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util';\nimport { jsonEncryptFormat } from '@polkadot/util-crypto';\nexport function pairToJson(type, {\n  address,\n  meta\n}, encoded, isEncrypted) {\n  return objectSpread(jsonEncryptFormat(encoded, ['pkcs8', type], isEncrypted), {\n    address,\n    meta\n  });\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Encode } from \"../base64/index.js\";\nimport { ENCODING, ENCODING_NONE, ENCODING_VERSION } from \"./constants.js\";\nexport function jsonEncryptFormat(encoded, contentType, isEncrypted) {\n  return {\n    encoded: base64Encode(encoded),\n    encoding: {\n      content: contentType,\n      type: isEncrypted ? ENCODING : ENCODING_NONE,\n      version: ENCODING_VERSION\n    }\n  };\n}","// Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, objectSpread, u8aConcat, u8aEmpty, u8aEq, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { blake2AsU8a, convertPublicKeyToCurve25519, convertSecretKeyToCurve25519, ed25519PairFromSeed as ed25519FromSeed, ed25519Sign, ethereumEncode, keccakAsU8a, keyExtractPath, keyFromPath, naclOpen, naclSeal, secp256k1Compress, secp256k1Expand, secp256k1PairFromSeed as secp256k1FromSeed, secp256k1Sign, signatureVerify, sr25519PairFromSeed as sr25519FromSeed, sr25519Sign, sr25519VrfSign, sr25519VrfVerify } from '@polkadot/util-crypto';\nimport { decodePair } from \"./decode.js\";\nimport { encodePair } from \"./encode.js\";\nimport { pairToJson } from \"./toJson.js\";\nconst SIG_TYPE_NONE = new Uint8Array();\nconst TYPE_FROM_SEED = {\n  ecdsa: secp256k1FromSeed,\n  ed25519: ed25519FromSeed,\n  ethereum: secp256k1FromSeed,\n  sr25519: sr25519FromSeed\n};\nconst TYPE_PREFIX = {\n  ecdsa: new Uint8Array([2]),\n  ed25519: new Uint8Array([0]),\n  ethereum: new Uint8Array([2]),\n  sr25519: new Uint8Array([1])\n};\nconst TYPE_SIGNATURE = {\n  ecdsa: (m, p) => secp256k1Sign(m, p, 'blake2'),\n  ed25519: ed25519Sign,\n  ethereum: (m, p) => secp256k1Sign(m, p, 'keccak'),\n  sr25519: sr25519Sign\n};\nconst TYPE_ADDRESS = {\n  ecdsa: p => p.length > 32 ? blake2AsU8a(p) : p,\n  ed25519: p => p,\n  ethereum: p => p.length === 20 ? p : keccakAsU8a(secp256k1Expand(p)),\n  sr25519: p => p\n};\n\nfunction isLocked(secretKey) {\n  return !secretKey || u8aEmpty(secretKey);\n}\n\nfunction vrfHash(proof, context, extra) {\n  return blake2AsU8a(u8aConcat(context || '', extra || '', proof));\n}\n/**\n * @name createPair\n * @summary Creates a keyring pair object\n * @description Creates a keyring pair object with provided account public key, metadata, and encoded arguments.\n * The keyring pair stores the account state including the encoded address and associated metadata.\n *\n * It has properties whose values are functions that may be called to perform account actions:\n *\n * - `address` function retrieves the address associated with the account.\n * - `decodedPkcs8` function is called with the account passphrase and account encoded public key.\n * It decodes the encoded public key using the passphrase provided to obtain the decoded account public key\n * and associated secret key that are then available in memory, and changes the account address stored in the\n * state of the pair to correspond to the address of the decoded public key.\n * - `encodePkcs8` function when provided with the correct passphrase associated with the account pair\n * and when the secret key is in memory (when the account pair is not locked) it returns an encoded\n * public key of the account.\n * - `meta` is the metadata that is stored in the state of the pair, either when it was originally\n * created or set via `setMeta`.\n * - `publicKey` returns the public key stored in memory for the pair.\n * - `sign` may be used to return a signature by signing a provided message with the secret\n * key (if it is in memory) using Nacl.\n * - `toJson` calls another `toJson` function and provides the state of the pair,\n * it generates arguments to be passed to the other `toJson` function including an encoded public key of the account\n * that it generates using the secret key from memory (if it has been made available in memory)\n * and the optionally provided passphrase argument. It passes a third boolean argument to `toJson`\n * indicating whether the public key has been encoded or not (if a passphrase argument was provided then it is encoded).\n * The `toJson` function that it calls returns a JSON object with properties including the `address`\n * and `meta` that are assigned with the values stored in the corresponding state variables of the account pair,\n * an `encoded` property that is assigned with the encoded public key in hex format, and an `encoding`\n * property that indicates whether the public key value of the `encoded` property is encoded or not.\n */\n\n\nexport function createPair({\n  toSS58,\n  type\n}, {\n  publicKey,\n  secretKey\n}, meta = {}, encoded = null, encTypes) {\n  const decodePkcs8 = (passphrase, userEncoded) => {\n    const decoded = decodePair(passphrase, userEncoded || encoded, encTypes);\n\n    if (decoded.secretKey.length === 64) {\n      publicKey = decoded.publicKey;\n      secretKey = decoded.secretKey;\n    } else {\n      const pair = TYPE_FROM_SEED[type](decoded.secretKey);\n      publicKey = pair.publicKey;\n      secretKey = pair.secretKey;\n    }\n  };\n\n  const recode = passphrase => {\n    isLocked(secretKey) && encoded && decodePkcs8(passphrase, encoded);\n    encoded = encodePair({\n      publicKey,\n      secretKey\n    }, passphrase); // re-encode, latest version\n\n    encTypes = undefined; // swap to defaults, latest version follows\n\n    return encoded;\n  };\n\n  const encodeAddress = () => {\n    const raw = TYPE_ADDRESS[type](publicKey);\n    return type === 'ethereum' ? ethereumEncode(raw) : toSS58(raw);\n  };\n\n  return {\n    get address() {\n      return encodeAddress();\n    },\n\n    get addressRaw() {\n      const raw = TYPE_ADDRESS[type](publicKey);\n      return type === 'ethereum' ? raw.slice(-20) : raw;\n    },\n\n    get isLocked() {\n      return isLocked(secretKey);\n    },\n\n    get meta() {\n      return meta;\n    },\n\n    get publicKey() {\n      return publicKey;\n    },\n\n    get type() {\n      return type;\n    },\n\n    // eslint-disable-next-line sort-keys\n    decodePkcs8,\n    decryptMessage: (encryptedMessageWithNonce, senderPublicKey) => {\n      assert(!isLocked(secretKey), 'Cannot encrypt with a locked key pair');\n      assert(!['ecdsa', 'ethereum'].includes(type), 'Secp256k1 not supported yet');\n      const messageU8a = u8aToU8a(encryptedMessageWithNonce);\n      return naclOpen(messageU8a.slice(24, messageU8a.length), messageU8a.slice(0, 24), convertPublicKeyToCurve25519(u8aToU8a(senderPublicKey)), convertSecretKeyToCurve25519(secretKey));\n    },\n    derive: (suri, meta) => {\n      assert(type !== 'ethereum', 'Unable to derive on this keypair');\n      assert(!isLocked(secretKey), 'Cannot derive on a locked keypair');\n      const {\n        path\n      } = keyExtractPath(suri);\n      const derived = keyFromPath({\n        publicKey,\n        secretKey\n      }, path, type);\n      return createPair({\n        toSS58,\n        type\n      }, derived, meta, null);\n    },\n    encodePkcs8: passphrase => {\n      return recode(passphrase);\n    },\n    encryptMessage: (message, recipientPublicKey, nonceIn) => {\n      assert(!isLocked(secretKey), 'Cannot encrypt with a locked key pair');\n      assert(!['ecdsa', 'ethereum'].includes(type), 'Secp256k1 not supported yet');\n      const {\n        nonce,\n        sealed\n      } = naclSeal(u8aToU8a(message), convertSecretKeyToCurve25519(secretKey), convertPublicKeyToCurve25519(u8aToU8a(recipientPublicKey)), nonceIn);\n      return u8aConcat(nonce, sealed);\n    },\n    lock: () => {\n      secretKey = new Uint8Array();\n    },\n    setMeta: additional => {\n      meta = objectSpread({}, meta, additional);\n    },\n    sign: (message, options = {}) => {\n      assert(!isLocked(secretKey), 'Cannot sign with a locked key pair');\n      return u8aConcat(options.withType ? TYPE_PREFIX[type] : SIG_TYPE_NONE, TYPE_SIGNATURE[type](u8aToU8a(message), {\n        publicKey,\n        secretKey\n      }));\n    },\n    toJson: passphrase => {\n      // NOTE: For ecdsa and ethereum, the publicKey cannot be extracted from the address. For these\n      // pass the hex-encoded publicKey through to the address portion of the JSON (before decoding)\n      // unless the publicKey is already an address\n      const address = ['ecdsa', 'ethereum'].includes(type) ? publicKey.length === 20 ? u8aToHex(publicKey) : u8aToHex(secp256k1Compress(publicKey)) : encodeAddress();\n      return pairToJson(type, {\n        address,\n        meta\n      }, recode(passphrase), !!passphrase);\n    },\n    unlock: passphrase => {\n      return decodePkcs8(passphrase);\n    },\n    verify: (message, signature, signerPublic) => {\n      return signatureVerify(message, signature, TYPE_ADDRESS[type](u8aToU8a(signerPublic))).isValid;\n    },\n    vrfSign: (message, context, extra) => {\n      assert(!isLocked(secretKey), 'Cannot sign with a locked key pair');\n\n      if (type === 'sr25519') {\n        return sr25519VrfSign(message, {\n          secretKey\n        }, context, extra);\n      }\n\n      const proof = TYPE_SIGNATURE[type](u8aToU8a(message), {\n        publicKey,\n        secretKey\n      });\n      return u8aConcat(vrfHash(proof, context, extra), proof);\n    },\n    vrfVerify: (message, vrfResult, signerPublic, context, extra) => {\n      if (type === 'sr25519') {\n        return sr25519VrfVerify(message, vrfResult, publicKey, context, extra);\n      }\n\n      const result = signatureVerify(message, u8aConcat(TYPE_PREFIX[type], vrfResult.subarray(32)), TYPE_ADDRESS[type](u8aToU8a(signerPublic)));\n      return result.isValid && u8aEq(vrfResult.subarray(0, 32), vrfHash(vrfResult.subarray(32), context, extra));\n    }\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport nacl from 'tweetnacl';\nimport { assert, u8aToU8a } from '@polkadot/util';\nimport { ed25519Sign as wasmSign, isReady } from '@polkadot/wasm-crypto';\n/**\n * @name ed25519Sign\n * @summary Signs a message using the supplied secretKey\n * @description\n * Returns message signature of `message`, using the `secretKey`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519Sign } from '@polkadot/util-crypto';\n *\n * ed25519Sign([...], [...]); // => [...]\n * ```\n */\n\nexport function ed25519Sign(message, {\n  publicKey,\n  secretKey\n}, onlyJs) {\n  assert(secretKey, 'Expected a valid secretKey');\n  const messageU8a = u8aToU8a(message);\n  return !onlyJs && isReady() ? wasmSign(publicKey, secretKey.subarray(0, 32), messageU8a) : nacl.sign.detached(messageU8a, secretKey);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util';\nimport { sr25519Sign as wasmSign } from '@polkadot/wasm-crypto';\n/**\n * @name sr25519Sign\n * @description Returns message signature of `message`, using the supplied pair\n */\n\nexport function sr25519Sign(message, {\n  publicKey,\n  secretKey\n}) {\n  assert((publicKey === null || publicKey === void 0 ? void 0 : publicKey.length) === 32, 'Expected a valid publicKey, 32-bytes');\n  assert((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) === 64, 'Expected a valid secretKey, 64-bytes');\n  return wasmSign(publicKey, secretKey, u8aToU8a(message));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name u8aEmpty\n * @summary Tests for a `Uint8Array` for emptyness\n * @description\n * Checks to see if the input `Uint8Array` has zero length or contains all 0 values.\n */\nexport function u8aEmpty(value) {\n  // on smaller values < 64 bytes, the byte-by-byte compare is faster than\n  // allocating yet another object for DataView (on large buffers the DataView\n  // is much faster)\n  for (let i = 0; i < value.length; i++) {\n    if (value[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}","// Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isHex, isU8a, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nexport class Pairs {\n  #map = {};\n\n  add(pair) {\n    this.#map[decodeAddress(pair.address).toString()] = pair;\n    return pair;\n  }\n\n  all() {\n    return Object.values(this.#map);\n  }\n\n  get(address) {\n    const pair = this.#map[decodeAddress(address).toString()];\n    assert(pair, () => `Unable to retrieve keypair '${isU8a(address) || isHex(address) ? u8aToHex(u8aToU8a(address)) : address}'`);\n    return pair;\n  }\n\n  remove(address) {\n    delete this.#map[decodeAddress(address).toString()];\n  }\n\n}","// Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, hexToU8a, isHex, isUndefined, stringToU8a } from '@polkadot/util';\nimport { base64Decode, decodeAddress, ed25519PairFromSeed as ed25519FromSeed, encodeAddress, ethereumEncode, hdEthereum, keyExtractSuri, keyFromPath, mnemonicToLegacySeed, mnemonicToMiniSecret, secp256k1PairFromSeed as secp256k1FromSeed, sr25519PairFromSeed as sr25519FromSeed } from '@polkadot/util-crypto';\nimport { DEV_PHRASE } from \"./defaults.js\";\nimport { createPair } from \"./pair/index.js\";\nimport { Pairs } from \"./pairs.js\";\nconst PairFromSeed = {\n  ecdsa: seed => secp256k1FromSeed(seed),\n  ed25519: seed => ed25519FromSeed(seed),\n  ethereum: seed => secp256k1FromSeed(seed),\n  sr25519: seed => sr25519FromSeed(seed)\n};\n\nfunction pairToPublic({\n  publicKey\n}) {\n  return publicKey;\n}\n/**\n * # @polkadot/keyring\n *\n * ## Overview\n *\n * @name Keyring\n * @summary Keyring management of user accounts\n * @description Allows generation of keyring pairs from a variety of input combinations, such as\n * json object containing account address or public key, account metadata, and account encoded using\n * `addFromJson`, or by providing those values as arguments separately to `addFromAddress`,\n * or by providing the mnemonic (seed phrase) and account metadata as arguments to `addFromMnemonic`.\n * Stores the keyring pairs in a keyring pair dictionary. Removal of the keyring pairs from the keyring pair\n * dictionary is achieved using `removePair`. Retrieval of all the stored pairs via `getPairs` or perform\n * lookup of a pair for a given account address or public key using `getPair`. JSON metadata associated with\n * an account may be obtained using `toJson` accompanied by the account passphrase.\n */\n\n\nexport class Keyring {\n  #pairs;\n  #type;\n  #ss58;\n  decodeAddress = decodeAddress;\n\n  constructor(options = {}) {\n    options.type = options.type || 'ed25519';\n    assert(['ecdsa', 'ethereum', 'ed25519', 'sr25519'].includes(options.type || 'undefined'), () => `Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '${options.type || 'unknown'}`);\n    this.#pairs = new Pairs();\n    this.#ss58 = options.ss58Format;\n    this.#type = options.type;\n  }\n  /**\n   * @description retrieve the pairs (alias for getPairs)\n   */\n\n\n  get pairs() {\n    return this.getPairs();\n  }\n  /**\n   * @description retrieve the publicKeys (alias for getPublicKeys)\n   */\n\n\n  get publicKeys() {\n    return this.getPublicKeys();\n  }\n  /**\n   * @description Returns the type of the keyring, ed25519, sr25519 or ecdsa\n   */\n\n\n  get type() {\n    return this.#type;\n  }\n  /**\n   * @name addPair\n   * @summary Stores an account, given a keyring pair, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n   */\n\n\n  addPair(pair) {\n    return this.#pairs.add(pair);\n  }\n  /**\n   * @name addFromAddress\n   * @summary Stores an account, given an account address, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n   * @description Allows user to explicitly provide separate inputs including account address or public key, and optionally\n   * the associated account metadata, and the default encoded value as arguments (that may be obtained from the json file\n   * of an account backup), and then generates a keyring pair from them that it passes to\n   * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n   */\n\n\n  addFromAddress(address, meta = {}, encoded = null, type = this.type, ignoreChecksum, encType) {\n    const publicKey = this.decodeAddress(address, ignoreChecksum);\n    return this.addPair(createPair({\n      toSS58: this.encodeAddress,\n      type\n    }, {\n      publicKey,\n      secretKey: new Uint8Array()\n    }, meta, encoded, encType));\n  }\n  /**\n   * @name addFromJson\n   * @summary Stores an account, given JSON data, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n   * @description Allows user to provide a json object argument that contains account information (that may be obtained from the json file\n   * of an account backup), and then generates a keyring pair from it that it passes to\n   * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n   */\n\n\n  addFromJson(json, ignoreChecksum) {\n    return this.addPair(this.createFromJson(json, ignoreChecksum));\n  }\n  /**\n   * @name addFromMnemonic\n   * @summary Stores an account, given a mnemonic, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n   * @description Allows user to provide a mnemonic (seed phrase that is provided when account is originally created)\n   * argument and a metadata argument that contains account information (that may be obtained from the json file\n   * of an account backup), and then generates a keyring pair from it that it passes to\n   * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n   */\n\n\n  addFromMnemonic(mnemonic, meta = {}, type = this.type) {\n    return this.addFromUri(mnemonic, meta, type);\n  }\n  /**\n   * @name addFromPair\n   * @summary Stores an account created from an explicit publicKey/secreteKey combination\n   */\n\n\n  addFromPair(pair, meta = {}, type = this.type) {\n    return this.addPair(this.createFromPair(pair, meta, type));\n  }\n  /**\n   * @name addFromSeed\n   * @summary Stores an account, given seed data, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n   * @description Stores in a keyring pair dictionary the public key of the pair as a key and the pair as the associated value.\n   * Allows user to provide the account seed as an argument, and then generates a keyring pair from it that it passes to\n   * `addPair` to store in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n   */\n\n\n  addFromSeed(seed, meta = {}, type = this.type) {\n    return this.addPair(createPair({\n      toSS58: this.encodeAddress,\n      type\n    }, PairFromSeed[type](seed), meta, null));\n  }\n  /**\n   * @name addFromUri\n   * @summary Creates an account via an suri\n   * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed). The secret can be a hex string, mnemonic phrase or a string (to be padded)\n   */\n\n\n  addFromUri(suri, meta = {}, type = this.type) {\n    return this.addPair(this.createFromUri(suri, meta, type));\n  }\n  /**\n   * @name createFromJson\n   * @description Creates a pair from a JSON keyfile\n   */\n\n\n  createFromJson({\n    address,\n    encoded,\n    encoding: {\n      content,\n      type,\n      version\n    },\n    meta\n  }, ignoreChecksum) {\n    assert(version !== '3' || content[0] === 'pkcs8', () => `Unable to decode non-pkcs8 type, [${content.join(',')}] found}`);\n    const cryptoType = version === '0' || !Array.isArray(content) ? this.type : content[1];\n    const encType = !Array.isArray(type) ? [type] : type;\n    assert(['ed25519', 'sr25519', 'ecdsa', 'ethereum'].includes(cryptoType), () => `Unknown crypto type ${cryptoType}`); // Here the address and publicKey are 32 bytes and isomorphic. This is why the address field needs to be the public key for ethereum type pairs\n\n    const publicKey = isHex(address) ? hexToU8a(address) : this.decodeAddress(address, ignoreChecksum);\n    const decoded = isHex(encoded) ? hexToU8a(encoded) : base64Decode(encoded);\n    return createPair({\n      toSS58: this.encodeAddress,\n      type: cryptoType\n    }, {\n      publicKey,\n      secretKey: new Uint8Array()\n    }, meta, decoded, encType);\n  }\n  /**\n   * @name createFromPair\n   * @summary Creates a pair from an explicit publicKey/secreteKey combination\n   */\n\n\n  createFromPair(pair, meta = {}, type = this.type) {\n    return createPair({\n      toSS58: this.encodeAddress,\n      type\n    }, pair, meta, null);\n  }\n  /**\n   * @name createFromUri\n   * @summary Creates a Keypair from an suri\n   * @description This creates a pair from the suri, but does not add it to the keyring\n   */\n\n\n  createFromUri(_suri, meta = {}, type = this.type) {\n    // here we only aut-add the dev phrase if we have a hard-derived path\n    const suri = _suri.startsWith('//') ? `${DEV_PHRASE}${_suri}` : _suri;\n    const {\n      derivePath,\n      password,\n      path,\n      phrase\n    } = keyExtractSuri(suri);\n    let seed;\n    const isPhraseHex = isHex(phrase, 256);\n\n    if (isPhraseHex) {\n      seed = hexToU8a(phrase);\n    } else {\n      const parts = phrase.split(' ');\n\n      if ([12, 15, 18, 21, 24].includes(parts.length)) {\n        seed = type === 'ethereum' ? mnemonicToLegacySeed(phrase, '', false, 64) : mnemonicToMiniSecret(phrase, password);\n      } else {\n        assert(phrase.length <= 32, 'specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes');\n        seed = stringToU8a(phrase.padEnd(32));\n      }\n    }\n\n    const derived = type === 'ethereum' ? isPhraseHex ? PairFromSeed[type](seed) // for eth, if the private key is provided as suri, it must be derived only once\n    : hdEthereum(seed, derivePath.substring(1)) : keyFromPath(PairFromSeed[type](seed), path, type);\n    return createPair({\n      toSS58: this.encodeAddress,\n      type\n    }, derived, meta, null);\n  }\n  /**\n   * @name encodeAddress\n   * @description Encodes the input into an ss58 representation\n   */\n\n\n  encodeAddress = (address, ss58Format) => {\n    return this.type === 'ethereum' ? ethereumEncode(address) : encodeAddress(address, isUndefined(ss58Format) ? this.#ss58 : ss58Format);\n  };\n  /**\n   * @name getPair\n   * @summary Retrieves an account keyring pair from the Keyring Pair Dictionary, given an account address\n   * @description Returns a keyring pair value from the keyring pair dictionary by performing\n   * a key lookup using the provided account address or public key (after decoding it).\n   */\n\n  getPair(address) {\n    return this.#pairs.get(address);\n  }\n  /**\n   * @name getPairs\n   * @summary Retrieves all account keyring pairs from the Keyring Pair Dictionary\n   * @description Returns an array list of all the keyring pair values that are stored in the keyring pair dictionary.\n   */\n\n\n  getPairs() {\n    return this.#pairs.all();\n  }\n  /**\n   * @name getPublicKeys\n   * @summary Retrieves Public Keys of all Keyring Pairs stored in the Keyring Pair Dictionary\n   * @description Returns an array list of all the public keys associated with each of the keyring pair values that are stored in the keyring pair dictionary.\n   */\n\n\n  getPublicKeys() {\n    return this.#pairs.all().map(pairToPublic);\n  }\n  /**\n   * @name removePair\n   * @description Deletes the provided input address or public key from the stored Keyring Pair Dictionary.\n   */\n\n\n  removePair(address) {\n    this.#pairs.remove(address);\n  }\n  /**\n   * @name setSS58Format;\n   * @description Sets the ss58 format for the keyring\n   */\n\n\n  setSS58Format(ss58) {\n    this.#ss58 = ss58;\n  }\n  /**\n   * @name toJson\n   * @summary Returns a JSON object associated with the input argument that contains metadata assocated with an account\n   * @description Returns a JSON object containing the metadata associated with an account\n   * when valid address or public key and when the account passphrase is provided if the account secret\n   * is not already unlocked and available in memory. Note that in [Polkadot-JS Apps](https://github.com/polkadot-js/apps) the user\n   * may backup their account to a JSON file that contains this information.\n   */\n\n\n  toJson(address, passphrase) {\n    return this.#pairs.get(address).toJson(passphrase);\n  }\n\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sshash } from \"./sshash.js\";\nexport function checkAddressChecksum(decoded) {\n  const ss58Length = decoded[0] & 0b01000000 ? 2 : 1;\n  const ss58Decoded = ss58Length === 1 ? decoded[0] : (decoded[0] & 0b00111111) << 2 | decoded[1] >> 6 | (decoded[1] & 0b00111111) << 8; // 32/33 bytes public + 2 bytes checksum + prefix\n\n  const isPublicKey = [34 + ss58Length, 35 + ss58Length].includes(decoded.length);\n  const length = decoded.length - (isPublicKey ? 2 : 1); // calculate the hash and do the checksum byte checks\n\n  const hash = sshash(decoded.subarray(0, length));\n  const isValid = (decoded[0] & 0b10000000) === 0 && ![46, 47].includes(decoded[0]) && (isPublicKey ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1] : decoded[decoded.length - 1] === hash[0]);\n  return [isValid, length, ss58Length, ss58Decoded];\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L6\nimport { assert, isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { base58Decode } from \"../base58/index.js\";\nimport { checkAddressChecksum } from \"./checksum.js\";\nimport { defaults } from \"./defaults.js\";\nexport function decodeAddress(encoded, ignoreChecksum, ss58Format = -1) {\n  assert(encoded, 'Invalid empty address passed');\n\n  if (isU8a(encoded) || isHex(encoded)) {\n    return u8aToU8a(encoded);\n  }\n\n  try {\n    const decoded = base58Decode(encoded);\n    assert(defaults.allowedEncodedLengths.includes(decoded.length), 'Invalid decoded address length');\n    const [isValid, endPos, ss58Length, ss58Decoded] = checkAddressChecksum(decoded);\n    assert(ignoreChecksum || isValid, 'Invalid decoded address checksum');\n    assert([-1, ss58Decoded].includes(ss58Format), () => `Expected ss58Format ${ss58Format}, received ${ss58Decoded}`);\n    return decoded.slice(ss58Length, endPos);\n  } catch (error) {\n    throw new Error(`Decoding ${encoded}: ${error.message}`);\n  }\n}","// Copyright (C) 2021-2022 Parity Technologies (UK) Ltd.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// \thttp://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport default [\n\t{\n\t\t\"prefix\": 0,\n\t\t\"network\": \"polkadot\",\n\t\t\"displayName\": \"Polkadot Relay Chain\",\n\t\t\"symbols\": [\n\t\t\t\"DOT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadot.network\"\n\t},\n\t{\n\t\t\"prefix\": 1,\n\t\t\"network\": \"BareSr25519\",\n\t\t\"displayName\": \"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 2,\n\t\t\"network\": \"kusama\",\n\t\t\"displayName\": \"Kusama Relay Chain\",\n\t\t\"symbols\": [\n\t\t\t\"KSM\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kusama.network\"\n\t},\n\t{\n\t\t\"prefix\": 3,\n\t\t\"network\": \"BareEd25519\",\n\t\t\"displayName\": \"Bare 32-bit Ed25519 public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"Ed25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 4,\n\t\t\"network\": \"katalchain\",\n\t\t\"displayName\": \"Katal Chain\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 5,\n\t\t\"network\": \"astar\",\n\t\t\"displayName\": \"Astar Network\",\n\t\t\"symbols\": [\n\t\t\t\"ASTR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://astar.network\"\n\t},\n\t{\n\t\t\"prefix\": 6,\n\t\t\"network\": \"bifrost\",\n\t\t\"displayName\": \"Bifrost\",\n\t\t\"symbols\": [\n\t\t\t\"BNC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bifrost.finance/\"\n\t},\n\t{\n\t\t\"prefix\": 7,\n\t\t\"network\": \"edgeware\",\n\t\t\"displayName\": \"Edgeware\",\n\t\t\"symbols\": [\n\t\t\t\"EDG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://edgewa.re\"\n\t},\n\t{\n\t\t\"prefix\": 8,\n\t\t\"network\": \"karura\",\n\t\t\"displayName\": \"Karura\",\n\t\t\"symbols\": [\n\t\t\t\"KAR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://karura.network/\"\n\t},\n\t{\n\t\t\"prefix\": 9,\n\t\t\"network\": \"reynolds\",\n\t\t\"displayName\": \"Laminar Reynolds Canary\",\n\t\t\"symbols\": [\n\t\t\t\"REY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://laminar.network/\"\n\t},\n\t{\n\t\t\"prefix\": 10,\n\t\t\"network\": \"acala\",\n\t\t\"displayName\": \"Acala\",\n\t\t\"symbols\": [\n\t\t\t\"ACA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://acala.network/\"\n\t},\n\t{\n\t\t\"prefix\": 11,\n\t\t\"network\": \"laminar\",\n\t\t\"displayName\": \"Laminar\",\n\t\t\"symbols\": [\n\t\t\t\"LAMI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://laminar.network/\"\n\t},\n\t{\n\t\t\"prefix\": 12,\n\t\t\"network\": \"polymesh\",\n\t\t\"displayName\": \"Polymesh\",\n\t\t\"symbols\": [\n\t\t\t\"POLYX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polymath.network/\"\n\t},\n\t{\n\t\t\"prefix\": 13,\n\t\t\"network\": \"integritee\",\n\t\t\"displayName\": \"Integritee\",\n\t\t\"symbols\": [\n\t\t\t\"TEER\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://integritee.network\"\n\t},\n\t{\n\t\t\"prefix\": 14,\n\t\t\"network\": \"totem\",\n\t\t\"displayName\": \"Totem\",\n\t\t\"symbols\": [\n\t\t\t\"TOTEM\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t0\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://totemaccounting.com\"\n\t},\n\t{\n\t\t\"prefix\": 15,\n\t\t\"network\": \"synesthesia\",\n\t\t\"displayName\": \"Synesthesia\",\n\t\t\"symbols\": [\n\t\t\t\"SYN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://synesthesia.network/\"\n\t},\n\t{\n\t\t\"prefix\": 16,\n\t\t\"network\": \"kulupu\",\n\t\t\"displayName\": \"Kulupu\",\n\t\t\"symbols\": [\n\t\t\t\"KLP\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kulupu.network/\"\n\t},\n\t{\n\t\t\"prefix\": 17,\n\t\t\"network\": \"dark\",\n\t\t\"displayName\": \"Dark Mainnet\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 18,\n\t\t\"network\": \"darwinia\",\n\t\t\"displayName\": \"Darwinia Network\",\n\t\t\"symbols\": [\n\t\t\t\"RING\",\n\t\t\t\"KTON\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9,\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://darwinia.network/\"\n\t},\n\t{\n\t\t\"prefix\": 19,\n\t\t\"network\": \"geek\",\n\t\t\"displayName\": \"GeekCash\",\n\t\t\"symbols\": [\n\t\t\t\"GEEK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://geekcash.org\"\n\t},\n\t{\n\t\t\"prefix\": 20,\n\t\t\"network\": \"stafi\",\n\t\t\"displayName\": \"Stafi\",\n\t\t\"symbols\": [\n\t\t\t\"FIS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://stafi.io\"\n\t},\n\t{\n\t\t\"prefix\": 21,\n\t\t\"network\": \"dock-testnet\",\n\t\t\"displayName\": \"Dock Testnet\",\n\t\t\"symbols\": [\n\t\t\t\"DCK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dock.io\"\n\t},\n\t{\n\t\t\"prefix\": 22,\n\t\t\"network\": \"dock-mainnet\",\n\t\t\"displayName\": \"Dock Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"DCK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dock.io\"\n\t},\n\t{\n\t\t\"prefix\": 23,\n\t\t\"network\": \"shift\",\n\t\t\"displayName\": \"ShiftNrg\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 24,\n\t\t\"network\": \"zero\",\n\t\t\"displayName\": \"ZERO\",\n\t\t\"symbols\": [\n\t\t\t\"ZERO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zero.io\"\n\t},\n\t{\n\t\t\"prefix\": 25,\n\t\t\"network\": \"zero-alphaville\",\n\t\t\"displayName\": \"ZERO Alphaville\",\n\t\t\"symbols\": [\n\t\t\t\"ZERO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zero.io\"\n\t},\n\t{\n\t\t\"prefix\": 26,\n\t\t\"network\": \"jupiter\",\n\t\t\"displayName\": \"Jupiter\",\n\t\t\"symbols\": [\n\t\t\t\"jDOT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://jupiter.patract.io\"\n\t},\n\t{\n\t\t\"prefix\": 27,\n\t\t\"network\": \"kabocha\",\n\t\t\"displayName\": \"Kabocha\",\n\t\t\"symbols\": [\n\t\t\t\"KAB\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kabocha.network\"\n\t},\n\t{\n\t\t\"prefix\": 28,\n\t\t\"network\": \"subsocial\",\n\t\t\"displayName\": \"Subsocial\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 29,\n\t\t\"network\": \"cord\",\n\t\t\"displayName\": \"CORD Network\",\n\t\t\"symbols\": [\n\t\t\t\"DHI\",\n\t\t\t\"WAY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cord.network/\"\n\t},\n\t{\n\t\t\"prefix\": 30,\n\t\t\"network\": \"phala\",\n\t\t\"displayName\": \"Phala Network\",\n\t\t\"symbols\": [\n\t\t\t\"PHA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://phala.network\"\n\t},\n\t{\n\t\t\"prefix\": 31,\n\t\t\"network\": \"litentry\",\n\t\t\"displayName\": \"Litentry Network\",\n\t\t\"symbols\": [\n\t\t\t\"LIT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://litentry.com/\"\n\t},\n\t{\n\t\t\"prefix\": 32,\n\t\t\"network\": \"robonomics\",\n\t\t\"displayName\": \"Robonomics\",\n\t\t\"symbols\": [\n\t\t\t\"XRT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://robonomics.network\"\n\t},\n\t{\n\t\t\"prefix\": 33,\n\t\t\"network\": \"datahighway\",\n\t\t\"displayName\": \"DataHighway\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 34,\n\t\t\"network\": \"ares\",\n\t\t\"displayName\": \"Ares Protocol\",\n\t\t\"symbols\": [\n\t\t\t\"ARES\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.aresprotocol.com/\"\n\t},\n\t{\n\t\t\"prefix\": 35,\n\t\t\"network\": \"vln\",\n\t\t\"displayName\": \"Valiu Liquidity Network\",\n\t\t\"symbols\": [\n\t\t\t\"USDv\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://valiu.com/\"\n\t},\n\t{\n\t\t\"prefix\": 36,\n\t\t\"network\": \"centrifuge\",\n\t\t\"displayName\": \"Centrifuge Chain\",\n\t\t\"symbols\": [\n\t\t\t\"CFG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://centrifuge.io/\"\n\t},\n\t{\n\t\t\"prefix\": 37,\n\t\t\"network\": \"nodle\",\n\t\t\"displayName\": \"Nodle Chain\",\n\t\t\"symbols\": [\n\t\t\t\"NODL\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://nodle.io/\"\n\t},\n\t{\n\t\t\"prefix\": 38,\n\t\t\"network\": \"kilt\",\n\t\t\"displayName\": \"KILT Chain\",\n\t\t\"symbols\": [\n\t\t\t\"KILT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kilt.io/\"\n\t},\n\t{\n\t\t\"prefix\": 39,\n\t\t\"network\": \"mathchain\",\n\t\t\"displayName\": \"MathChain mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"MATH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mathwallet.org\"\n\t},\n\t{\n\t\t\"prefix\": 40,\n\t\t\"network\": \"mathchain-testnet\",\n\t\t\"displayName\": \"MathChain testnet\",\n\t\t\"symbols\": [\n\t\t\t\"MATH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mathwallet.org\"\n\t},\n\t{\n\t\t\"prefix\": 41,\n\t\t\"network\": \"poli\",\n\t\t\"displayName\": \"Polimec Chain\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polimec.io/\"\n\t},\n\t{\n\t\t\"prefix\": 42,\n\t\t\"network\": \"substrate\",\n\t\t\"displayName\": \"Substrate\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://substrate.io/\"\n\t},\n\t{\n\t\t\"prefix\": 43,\n\t\t\"network\": \"BareSecp256k1\",\n\t\t\"displayName\": \"Bare 32-bit ECDSA SECP-256k1 public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 44,\n\t\t\"network\": \"chainx\",\n\t\t\"displayName\": \"ChainX\",\n\t\t\"symbols\": [\n\t\t\t\"PCX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t8\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://chainx.org/\"\n\t},\n\t{\n\t\t\"prefix\": 45,\n\t\t\"network\": \"uniarts\",\n\t\t\"displayName\": \"UniArts Network\",\n\t\t\"symbols\": [\n\t\t\t\"UART\",\n\t\t\t\"UINK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://uniarts.me\"\n\t},\n\t{\n\t\t\"prefix\": 46,\n\t\t\"network\": \"reserved46\",\n\t\t\"displayName\": \"This prefix is reserved.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": null,\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 47,\n\t\t\"network\": \"reserved47\",\n\t\t\"displayName\": \"This prefix is reserved.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": null,\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 48,\n\t\t\"network\": \"neatcoin\",\n\t\t\"displayName\": \"Neatcoin Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"NEAT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://neatcoin.org\"\n\t},\n\t{\n\t\t\"prefix\": 49,\n\t\t\"network\": \"picasso\",\n\t\t\"displayName\": \"Picasso\",\n\t\t\"symbols\": [\n\t\t\t\"PICA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://picasso.composable.finance\"\n\t},\n\t{\n\t\t\"prefix\": 50,\n\t\t\"network\": \"composable\",\n\t\t\"displayName\": \"Composable\",\n\t\t\"symbols\": [\n\t\t\t\"LAYR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://composable.finance\"\n\t},\n\t{\n\t\t\"prefix\": 51,\n\t\t\"network\": \"oak\",\n\t\t\"displayName\": \"OAK Network\",\n\t\t\"symbols\": [\n\t\t\t\"OAK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://oak.tech\"\n\t},\n\t{\n\t\t\"prefix\": 52,\n\t\t\"network\": \"KICO\",\n\t\t\"displayName\": \"KICO\",\n\t\t\"symbols\": [\n\t\t\t\"KICO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t14\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dico.io\"\n\t},\n\t{\n\t\t\"prefix\": 53,\n\t\t\"network\": \"DICO\",\n\t\t\"displayName\": \"DICO\",\n\t\t\"symbols\": [\n\t\t\t\"DICO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t14\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dico.io\"\n\t},\n\t{\n\t\t\"prefix\": 55,\n\t\t\"network\": \"xxnetwork\",\n\t\t\"displayName\": \"xx network\",\n\t\t\"symbols\": [\n\t\t\t\"XX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://xx.network\"\n\t},\n\t{\n\t\t\"prefix\": 63,\n\t\t\"network\": \"hydradx\",\n\t\t\"displayName\": \"HydraDX\",\n\t\t\"symbols\": [\n\t\t\t\"HDX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://hydradx.io\"\n\t},\n\t{\n\t\t\"prefix\": 65,\n\t\t\"network\": \"aventus\",\n\t\t\"displayName\": \"AvN Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"AVT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://aventus.io\"\n\t},\n\t{\n\t\t\"prefix\": 66,\n\t\t\"network\": \"crust\",\n\t\t\"displayName\": \"Crust Network\",\n\t\t\"symbols\": [\n\t\t\t\"CRU\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://crust.network\"\n\t},\n\t{\n\t\t\"prefix\": 67,\n\t\t\"network\": \"genshiro\",\n\t\t\"displayName\": \"Genshiro Network\",\n\t\t\"symbols\": [\n\t\t\t\"GENS\",\n\t\t\t\"EQD\",\n\t\t\t\"LPT0\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9,\n\t\t\t9,\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://genshiro.equilibrium.io\"\n\t},\n\t{\n\t\t\"prefix\": 68,\n\t\t\"network\": \"equilibrium\",\n\t\t\"displayName\": \"Equilibrium Network\",\n\t\t\"symbols\": [\n\t\t\t\"EQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://equilibrium.io\"\n\t},\n\t{\n\t\t\"prefix\": 69,\n\t\t\"network\": \"sora\",\n\t\t\"displayName\": \"SORA Network\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 73,\n\t\t\"network\": \"zeitgeist\",\n\t\t\"displayName\": \"Zeitgeist\",\n\t\t\"symbols\": [\n\t\t\t\"ZTG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zeitgeist.pm\"\n\t},\n\t{\n\t\t\"prefix\": 77,\n\t\t\"network\": \"manta\",\n\t\t\"displayName\": \"Manta network\",\n\t\t\"symbols\": [\n\t\t\t\"MANTA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://manta.network\"\n\t},\n\t{\n\t\t\"prefix\": 78,\n\t\t\"network\": \"calamari\",\n\t\t\"displayName\": \"Calamari: Manta Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"KMA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://manta.network\"\n\t},\n\t{\n\t\t\"prefix\": 88,\n\t\t\"network\": \"polkadex\",\n\t\t\"displayName\": \"Polkadex Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"PDEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadex.trade\"\n\t},\n\t{\n\t\t\"prefix\": 98,\n\t\t\"network\": \"polkasmith\",\n\t\t\"displayName\": \"PolkaSmith Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"PKS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkafoundry.com\"\n\t},\n\t{\n\t\t\"prefix\": 99,\n\t\t\"network\": \"polkafoundry\",\n\t\t\"displayName\": \"PolkaFoundry Network\",\n\t\t\"symbols\": [\n\t\t\t\"PKF\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkafoundry.com\"\n\t},\n\t{\n\t\t\"prefix\": 101,\n\t\t\"network\": \"origintrail-parachain\",\n\t\t\"displayName\": \"OriginTrail Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"TRAC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://origintrail.io\"\n\t},\n\t{\n\t\t\"prefix\": 105,\n\t\t\"network\": \"pontem-network\",\n\t\t\"displayName\": \"Pontem Network\",\n\t\t\"symbols\": [\n\t\t\t\"PONT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pontem.network\"\n\t},\n\t{\n\t\t\"prefix\": 110,\n\t\t\"network\": \"heiko\",\n\t\t\"displayName\": \"Heiko\",\n\t\t\"symbols\": [\n\t\t\t\"HKO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parallel.fi/\"\n\t},\n\t{\n\t\t\"prefix\": 113,\n\t\t\"network\": \"integritee-incognito\",\n\t\t\"displayName\": \"Integritee Incognito\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://integritee.network\"\n\t},\n\t{\n\t\t\"prefix\": 128,\n\t\t\"network\": \"clover\",\n\t\t\"displayName\": \"Clover Finance\",\n\t\t\"symbols\": [\n\t\t\t\"CLV\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://clover.finance\"\n\t},\n\t{\n\t\t\"prefix\": 131,\n\t\t\"network\": \"litmus\",\n\t\t\"displayName\": \"Litmus Network\",\n\t\t\"symbols\": [\n\t\t\t\"LIT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://litentry.com/\"\n\t},\n\t{\n\t\t\"prefix\": 136,\n\t\t\"network\": \"altair\",\n\t\t\"displayName\": \"Altair\",\n\t\t\"symbols\": [\n\t\t\t\"AIR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://centrifuge.io/\"\n\t},\n\t{\n\t\t\"prefix\": 172,\n\t\t\"network\": \"parallel\",\n\t\t\"displayName\": \"Parallel\",\n\t\t\"symbols\": [\n\t\t\t\"PARA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parallel.fi/\"\n\t},\n\t{\n\t\t\"prefix\": 252,\n\t\t\"network\": \"social-network\",\n\t\t\"displayName\": \"Social Network\",\n\t\t\"symbols\": [\n\t\t\t\"NET\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://social.network\"\n\t},\n\t{\n\t\t\"prefix\": 255,\n\t\t\"network\": \"quartz_mainnet\",\n\t\t\"displayName\": \"QUARTZ by UNIQUE\",\n\t\t\"symbols\": [\n\t\t\t\"QTZ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 268,\n\t\t\"network\": \"pioneer_network\",\n\t\t\"displayName\": \"Pioneer Network by Bit.Country\",\n\t\t\"symbols\": [\n\t\t\t\"NEER\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bit.country\"\n\t},\n\t{\n\t\t\"prefix\": 420,\n\t\t\"network\": \"sora_kusama_para\",\n\t\t\"displayName\": \"SORA Kusama Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 1110,\n\t\t\"network\": \"efinity\",\n\t\t\"displayName\": \"Efinity\",\n\t\t\"symbols\": [\n\t\t\t\"EFI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://efinity.io/\"\n\t},\n\t{\n\t\t\"prefix\": 1284,\n\t\t\"network\": \"moonbeam\",\n\t\t\"displayName\": \"Moonbeam\",\n\t\t\"symbols\": [\n\t\t\t\"GLMR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonbeam.network\"\n\t},\n\t{\n\t\t\"prefix\": 1285,\n\t\t\"network\": \"moonriver\",\n\t\t\"displayName\": \"Moonriver\",\n\t\t\"symbols\": [\n\t\t\t\"MOVR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonbeam.network\"\n\t},\n\t{\n\t\t\"prefix\": 1337,\n\t\t\"network\": \"ajuna\",\n\t\t\"displayName\": \"Ajuna Network\",\n\t\t\"symbols\": [\n\t\t\t\"AJUN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://ajuna.io\"\n\t},\n\t{\n\t\t\"prefix\": 2007,\n\t\t\"network\": \"kapex\",\n\t\t\"displayName\": \"Kapex\",\n\t\t\"symbols\": [\n\t\t\t\"KAPEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://totemaccounting.com\"\n\t},\n\t{\n\t\t\"prefix\": 2032,\n\t\t\"network\": \"interlay\",\n\t\t\"displayName\": \"Interlay\",\n\t\t\"symbols\": [\n\t\t\t\"INTR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://interlay.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2092,\n\t\t\"network\": \"kintsugi\",\n\t\t\"displayName\": \"Kintsugi\",\n\t\t\"symbols\": [\n\t\t\t\"KINT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://interlay.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2254,\n\t\t\"network\": \"subspace_testnet\",\n\t\t\"displayName\": \"Subspace testnet\",\n\t\t\"symbols\": [\n\t\t\t\"tSSC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://subspace.network\"\n\t},\n\t{\n\t\t\"prefix\": 6094,\n\t\t\"network\": \"subspace\",\n\t\t\"displayName\": \"Subspace\",\n\t\t\"symbols\": [\n\t\t\t\"SSC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://subspace.network\"\n\t},\n\t{\n\t\t\"prefix\": 10041,\n\t\t\"network\": \"basilisk\",\n\t\t\"displayName\": \"Basilisk\",\n\t\t\"symbols\": [\n\t\t\t\"BSX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bsx.fi\"\n\t},\n\t{\n\t\t\"prefix\": 11330,\n\t\t\"network\": \"cess-testnet\",\n\t\t\"displayName\": \"CESS Testnet\",\n\t\t\"symbols\": [\n\t\t\t\"TCESS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cess.cloud\"\n\t},\n\t{\n\t\t\"prefix\": 11331,\n\t\t\"network\": \"cess\",\n\t\t\"displayName\": \"CESS\",\n\t\t\"symbols\": [\n\t\t\t\"CESS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cess.cloud\"\n\t},\n\t{\n\t\t\"prefix\": 11820,\n\t\t\"network\": \"contextfree\",\n\t\t\"displayName\": \"Automata ContextFree\",\n\t\t\"symbols\": [\n\t\t\t\"CTX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ata.network\"\n\t}\n];\n","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport { knownGenesis } from \"./genesis.js\";\nexport const substrateRegistry = 'https://raw.githubusercontent.com/paritytech/ss58-registry/main/ss58-registry.json'; // these are icon overrides\n\nexport const knownIcon = {\n  centrifuge: 'polkadot',\n  kusama: 'polkadot',\n  polkadot: 'polkadot',\n  sora: 'polkadot',\n  statemine: 'polkadot',\n  statemint: 'polkadot',\n  westmint: 'polkadot'\n}; // These match up with the keys of the ledgerApps object in the @polkadot/hw-ledger/defaults.ts\n// and maps to the known slip44 (minus the `0x8` hard derivation flag)\n// NOTE: Any network here needs to have a genesisHash attached in the config above\n\nexport const knownLedger = {\n  bifrost: 0x00000314,\n  centrifuge: 0x000002eb,\n  'dock-mainnet': 0x00000252,\n  edgeware: 0x0000020b,\n  equilibrium: 0x05f5e0fd,\n  genshiro: 0x05f5e0fc,\n  kusama: 0x000001b2,\n  'nodle-chain': 0x000003eb,\n  polkadot: 0x00000162,\n  polymesh: 0x00000253,\n  sora: 0x00000269,\n  statemine: 0x000001b2 // common-good on Kusama, shares derivation\n\n}; // testnets should not allow selection\n\nexport const knownTestnet = {\n  '': true,\n  // this is the default non-network entry\n  'cess-testnet': true,\n  'dock-testnet': true,\n  jupiter: true,\n  'mathchain-testnet': true,\n  subspace_testnet: true,\n  'zero-alphaville': true\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// NOTE: In the case where the network was hard-spooned and multiple genesisHashes\n// are provided, it needs to be in reverse order, i.e. most-recent first, oldest\n// last. This make lookups for the current a simple genesisHash[0]\n// (See Kusama as an example)\nexport const knownGenesis = {\n  acala: ['0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c'],\n  astar: ['0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6'],\n  basilisk: ['0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755'],\n  bifrost: ['0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed'],\n  centrifuge: ['0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5'],\n  'dock-mainnet': ['0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9'],\n  edgeware: ['0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b'],\n  equilibrium: ['0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925'],\n  genshiro: ['0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243'],\n  hydradx: ['0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc', // Snakenet Gen3-1\n  '0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9', // Snakenet Gen3\n  '0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047', // Snakenet Gen2\n  '0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2' // Snakenet Gen1\n  ],\n  karura: ['0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b'],\n  kulupu: ['0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba'],\n  kusama: ['0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe', // Kusama CC3,\n  '0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636', // Kusama CC2\n  '0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf' // Kusama CC1\n  ],\n  'nodle-chain': ['0xa3d114c2b8d0627c1aa9b134eafcf7d05ca561fdc19fb388bb9457f81809fb23'],\n  picasso: ['0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c'],\n  polkadot: ['0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3'],\n  polymesh: ['0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063'],\n  rococo: ['0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897', '0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770', '0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff', '0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a', '0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9', '0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779', '0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215', '0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9', '0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147', '0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd', '0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299'],\n  sora: ['0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5'],\n  stafi: ['0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80'],\n  statemine: ['0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a'],\n  subsocial: ['0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8']\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport knownSubstrate from '@substrate/ss58-registry';\nimport { knownGenesis, knownIcon, knownLedger, knownTestnet } from \"./defaults.js\"; // These are known prefixes that are not sorted\n\nconst UNSORTED = [0, 2, 42];\nconst TESTNETS = ['testnet'];\n\nfunction toExpanded(o) {\n  const network = o.network || '';\n  const nameParts = network.replace(/_/g, '-').split('-');\n  const n = o; // ledger additions\n\n  n.slip44 = knownLedger[network];\n  n.hasLedgerSupport = !!n.slip44; // general items\n\n  n.genesisHash = knownGenesis[network] || [];\n  n.icon = knownIcon[network] || 'substrate'; // filtering\n\n  n.isTestnet = !!knownTestnet[network] || TESTNETS.includes(nameParts[nameParts.length - 1]);\n  n.isIgnored = n.isTestnet || !(o.standardAccount && o.decimals && o.decimals.length && o.symbols && o.symbols.length) && o.prefix !== 42;\n  return n;\n}\n\nfunction filterSelectable({\n  genesisHash,\n  prefix\n}) {\n  return !!genesisHash.length || prefix === 42;\n}\n\nfunction filterAvailable(n) {\n  return !n.isIgnored && !!n.network;\n}\n\nfunction sortNetworks(a, b) {\n  const isUnSortedA = UNSORTED.includes(a.prefix);\n  const isUnSortedB = UNSORTED.includes(b.prefix);\n  return isUnSortedA === isUnSortedB ? isUnSortedA ? 0 : a.displayName.localeCompare(b.displayName) : isUnSortedA ? -1 : 1;\n} // This is all the Substrate networks with our additional information\n\n\nexport const allNetworks = knownSubstrate.map(toExpanded); // The list of available/claimed prefixes\n//   - no testnets\n//   - we only include those where we have a standardAccount\n//   - sort by name, however we keep 0, 2, 42 first in the list\n\nexport const availableNetworks = allNetworks.filter(filterAvailable).sort(sortNetworks); // A filtered list of those chains we have details about (genesisHashes)\n\nexport const selectableNetworks = availableNetworks.filter(filterSelectable);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { availableNetworks } from \"../networks.js\";\n\nfunction networkToPrefix({\n  prefix\n}) {\n  return prefix;\n}\n\nexport const defaults = {\n  allowedDecodedLengths: [1, 2, 4, 8, 32, 33],\n  // publicKey has prefix + 2 checksum bytes, short only prefix + 1 checksum byte\n  allowedEncodedLengths: [3, 4, 6, 10, 35, 36, 37, 38],\n  allowedPrefix: availableNetworks.map(networkToPrefix),\n  prefix: 42\n};","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L34\nimport { assert, u8aConcat } from '@polkadot/util';\nimport { base58Encode } from \"../base58/index.js\";\nimport { decodeAddress } from \"./decode.js\";\nimport { defaults } from \"./defaults.js\";\nimport { sshash } from \"./sshash.js\";\nexport function encodeAddress(key, ss58Format = defaults.prefix) {\n  // decode it, this means we can re-encode an address\n  const u8a = decodeAddress(key);\n  assert(ss58Format >= 0 && ss58Format <= 16383 && ![46, 47].includes(ss58Format), 'Out of range ss58Format specified');\n  assert(defaults.allowedDecodedLengths.includes(u8a.length), () => `Expected a valid key to convert, with length ${defaults.allowedDecodedLengths.join(', ')}`);\n  const input = u8aConcat(ss58Format < 64 ? [ss58Format] : [(ss58Format & 0b0000000011111100) >> 2 | 0b01000000, ss58Format >> 8 | (ss58Format & 0b0000000000000011) << 6], u8a);\n  return base58Encode(u8aConcat(input, sshash(input).subarray(0, [32, 33].includes(u8a.length) ? 2 : 1)));\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from \"../blake2/asU8a.js\";\nconst SS58_PREFIX = stringToU8a('SS58PRE');\nexport function sshash(key) {\n  return blake2AsU8a(u8aConcat(SS58_PREFIX, key), 512);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util'; // re-export the type so *.d.ts files don't have ../src imports\n\nexport function createDecode({\n  coder,\n  ipfs\n}, validate) {\n  return (value, ipfsCompat) => {\n    validate(value, ipfsCompat);\n    return coder.decode(ipfs && ipfsCompat ? value.substr(1) : value);\n  };\n}\nexport function createEncode({\n  coder,\n  ipfs\n}) {\n  return (value, ipfsCompat) => {\n    const out = coder.encode(u8aToU8a(value));\n    return ipfs && ipfsCompat ? `${ipfs}${out}` : out;\n  };\n}\nexport function createIs(validate) {\n  return (value, ipfsCompat) => {\n    try {\n      return validate(value, ipfsCompat);\n    } catch (error) {\n      return false;\n    }\n  };\n}\nexport function createValidate({\n  chars,\n  ipfs,\n  type\n}) {\n  return (value, ipfsCompat) => {\n    assert(value && typeof value === 'string', () => `Expected non-null, non-empty ${type} string input`);\n\n    if (ipfs && ipfsCompat) {\n      assert(value[0] === ipfs, () => `Expected ipfs-compatible ${type} to start with '${ipfs}'`);\n    }\n\n    for (let i = ipfsCompat ? 1 : 0; i < value.length; i++) {\n      assert(chars.includes(value[i]) || value[i] === '=' && (i === value.length - 1 || !chars.includes(value[i + 1])), () => `Invalid ${type} character \"${value[i]}\" (0x${value.charCodeAt(i).toString(16)}) at index ${i}`);\n    }\n\n    return true;\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { base58 } from '@scure/base';\nimport { createDecode, createEncode, createIs, createValidate } from \"../base32/helpers.js\";\nconst config = {\n  chars: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n  coder: base58,\n  ipfs: 'z',\n  type: 'base58'\n};\n/**\n * @name base58Validate\n * @summary Validates a base58 value.\n * @description\n * Validates that the supplied value is valid base58, throwing exceptions if not\n */\n\nexport const base58Validate = createValidate(config);\n/**\n * @name base58Decode\n * @summary Decodes a base58 value.\n * @description\n * From the provided input, decode the base58 and return the result as an `Uint8Array`.\n */\n\nexport const base58Decode = createDecode(config, base58Validate);\n/**\n* @name base58Encode\n* @summary Creates a base58 value.\n* @description\n* From the provided input, create the base58 and return the result as a string.\n*/\n\nexport const base58Encode = createEncode(config);\n/**\n* @name isBase58\n* @description Checks if the input is in base58, returning true/false\n*/\n\nexport const isBase58 = createIs(base58Validate);","import { assertNumber, Hash, toBytes, u32 } from './utils.js';\n// prettier-ignore\nexport const SIGMA = new Uint8Array([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n    // For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n]);\nexport class BLAKE2 extends Hash {\n    constructor(blockLen, outputLen, opts = {}, keyLen, saltLen, persLen) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.length = 0;\n        this.pos = 0;\n        this.finished = false;\n        this.destroyed = false;\n        assertNumber(blockLen);\n        assertNumber(outputLen);\n        assertNumber(keyLen);\n        if (outputLen < 0 || outputLen > keyLen)\n            throw new Error('Blake2: outputLen bigger than keyLen');\n        if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen))\n            throw new Error(`Key should be up 1..${keyLen} byte long or undefined`);\n        if (opts.salt !== undefined && opts.salt.length !== saltLen)\n            throw new Error(`Salt should be ${saltLen} byte long or undefined`);\n        if (opts.personalization !== undefined && opts.personalization.length !== persLen)\n            throw new Error(`Personalization should be ${persLen} byte long or undefined`);\n        this.buffer32 = u32((this.buffer = new Uint8Array(blockLen)));\n    }\n    update(data) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        // Main difference with other hashes: there is flag for last block,\n        // so we cannot process current block before we know that there\n        // is the next one. This significantly complicates logic and reduces ability\n        // to do zero-copy processing\n        const { finished, blockLen, buffer, buffer32 } = this;\n        if (finished)\n            throw new Error('digest() was already called');\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            // If buffer is full and we still have input (don't process last block, same as blake2s)\n            if (this.pos === blockLen) {\n                this.compress(buffer32, 0, false);\n                this.pos = 0;\n            }\n            const take = Math.min(blockLen - this.pos, len - pos);\n            const dataOffset = data.byteOffset + pos;\n            // full block && aligned to 4 bytes && not last in input\n            if (take === blockLen && !(dataOffset % 4) && pos + take < len) {\n                const data32 = new Uint32Array(data.buffer, dataOffset, Math.floor((len - pos) / 4));\n                for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {\n                    this.length += blockLen;\n                    this.compress(data32, pos32, false);\n                }\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            this.length += take;\n            pos += take;\n        }\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length < this.outputLen)\n            throw new Error('_Blake2: Invalid output buffer');\n        const { finished, pos, buffer32 } = this;\n        if (finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        // Padding\n        this.buffer.subarray(pos).fill(0);\n        this.compress(buffer32, 0, true);\n        const out32 = u32(out);\n        this.get().forEach((v, i) => (out32[i] = v));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        const { buffer, length, finished, destroyed, outputLen, pos } = this;\n        to || (to = new this.constructor({ dkLen: outputLen }));\n        to.set(...this.get());\n        to.length = length;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.outputLen = outputLen;\n        to.buffer.set(buffer);\n        to.pos = pos;\n        return to;\n    }\n}\n","import * as blake2 from './_blake2.js';\nimport * as u64 from './_u64.js';\nimport { toBytes, u32, wrapConstructorWithOpts } from './utils.js';\n// Same as SHA-512 but LE\n// prettier-ignore\nconst IV = new Uint32Array([\n    0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,\n    0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n]);\n// Temporary buffer\nconst BUF = new Uint32Array(32);\n// Mixing function G splitted in two halfs\nfunction G1(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore\n    let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore\n    let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore\n    let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 32)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotr32H(Dh, Dl), Dl: u64.rotr32L(Dh, Dl) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 24)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrSH(Bh, Bl, 24), Bl: u64.rotrSL(Bh, Bl, 24) });\n    (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);\n    (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);\n    (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);\n    (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);\n}\nfunction G2(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore\n    let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore\n    let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore\n    let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 16)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotrSH(Dh, Dl, 16), Dl: u64.rotrSL(Dh, Dl, 16) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 63)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrBH(Bh, Bl, 63), Bl: u64.rotrBL(Bh, Bl, 63) });\n    (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);\n    (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);\n    (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);\n    (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);\n}\nclass BLAKE2b extends blake2.BLAKE2 {\n    constructor(opts = {}) {\n        super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);\n        // Same as SHA-512, but LE\n        this.v0l = IV[0] | 0;\n        this.v0h = IV[1] | 0;\n        this.v1l = IV[2] | 0;\n        this.v1h = IV[3] | 0;\n        this.v2l = IV[4] | 0;\n        this.v2h = IV[5] | 0;\n        this.v3l = IV[6] | 0;\n        this.v3h = IV[7] | 0;\n        this.v4l = IV[8] | 0;\n        this.v4h = IV[9] | 0;\n        this.v5l = IV[10] | 0;\n        this.v5h = IV[11] | 0;\n        this.v6l = IV[12] | 0;\n        this.v6h = IV[13] | 0;\n        this.v7l = IV[14] | 0;\n        this.v7h = IV[15] | 0;\n        const keyLength = opts.key ? opts.key.length : 0;\n        this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n        if (opts.salt) {\n            const salt = u32(toBytes(opts.salt));\n            this.v4l ^= salt[0];\n            this.v4h ^= salt[1];\n            this.v5l ^= salt[2];\n            this.v5h ^= salt[3];\n        }\n        if (opts.personalization) {\n            const pers = u32(toBytes(opts.personalization));\n            this.v6l ^= pers[0];\n            this.v6h ^= pers[1];\n            this.v7l ^= pers[2];\n            this.v7h ^= pers[3];\n        }\n        if (opts.key) {\n            // Pad to blockLen and update\n            const tmp = new Uint8Array(this.blockLen);\n            tmp.set(toBytes(opts.key));\n            this.update(tmp);\n        }\n    }\n    // prettier-ignore\n    get() {\n        let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;\n        return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];\n    }\n    // prettier-ignore\n    set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {\n        this.v0l = v0l | 0;\n        this.v0h = v0h | 0;\n        this.v1l = v1l | 0;\n        this.v1h = v1h | 0;\n        this.v2l = v2l | 0;\n        this.v2h = v2h | 0;\n        this.v3l = v3l | 0;\n        this.v3h = v3h | 0;\n        this.v4l = v4l | 0;\n        this.v4h = v4h | 0;\n        this.v5l = v5l | 0;\n        this.v5h = v5h | 0;\n        this.v6l = v6l | 0;\n        this.v6h = v6h | 0;\n        this.v7l = v7l | 0;\n        this.v7h = v7h | 0;\n    }\n    compress(msg, offset, isLast) {\n        this.get().forEach((v, i) => (BUF[i] = v)); // First half from state.\n        BUF.set(IV, 16); // Second half from IV.\n        let { h, l } = u64.fromBig(BigInt(this.length));\n        BUF[24] = IV[8] ^ l; // Low word of the offset.\n        BUF[25] = IV[9] ^ h; // High word.\n        // Invert all bits for last block\n        if (isLast) {\n            BUF[28] = ~BUF[28];\n            BUF[29] = ~BUF[29];\n        }\n        let j = 0;\n        const s = blake2.SIGMA;\n        for (let i = 0; i < 12; i++) {\n            G1(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G2(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G1(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G2(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G1(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G2(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G1(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G2(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G1(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G2(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G1(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G2(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G1(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G2(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G1(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n            G2(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n        }\n        this.v0l ^= BUF[0] ^ BUF[16];\n        this.v0h ^= BUF[1] ^ BUF[17];\n        this.v1l ^= BUF[2] ^ BUF[18];\n        this.v1h ^= BUF[3] ^ BUF[19];\n        this.v2l ^= BUF[4] ^ BUF[20];\n        this.v2h ^= BUF[5] ^ BUF[21];\n        this.v3l ^= BUF[6] ^ BUF[22];\n        this.v3h ^= BUF[7] ^ BUF[23];\n        this.v4l ^= BUF[8] ^ BUF[24];\n        this.v4h ^= BUF[9] ^ BUF[25];\n        this.v5l ^= BUF[10] ^ BUF[26];\n        this.v5h ^= BUF[11] ^ BUF[27];\n        this.v6l ^= BUF[12] ^ BUF[28];\n        this.v6h ^= BUF[13] ^ BUF[29];\n        this.v7l ^= BUF[14] ^ BUF[30];\n        this.v7h ^= BUF[15] ^ BUF[31];\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer32.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/**\n * BLAKE2b - optimized for 64-bit platforms. JS doesn't have uint64, so it's slower than BLAKE2s.\n * @param msg - message that would be hashed\n * @param opts - dkLen, key, salt, personalization\n */\nexport const blake2b = wrapConstructorWithOpts((opts) => new BLAKE2b(opts));\n","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { blake2b as blake2bJs } from '@noble/hashes/blake2b';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { blake2b, isReady } from '@polkadot/wasm-crypto';\nimport { createAsHex } from \"../helpers.js\";\n\n/**\n * @name blake2AsU8a\n * @summary Creates a blake2b u8a from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsU8a } from '@polkadot/util-crypto';\n *\n * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]\n * ```\n */\nexport function blake2AsU8a(data, bitLength = 256, key, onlyJs) {\n  const byteLength = Math.ceil(bitLength / 8);\n  const u8a = u8aToU8a(data);\n  return !hasBigInt || !onlyJs && isReady() ? blake2b(u8a, u8aToU8a(key), byteLength) : blake2bJs(u8a, {\n    dkLen: byteLength,\n    key: key || undefined\n  });\n}\n/**\n * @name blake2AsHex\n * @description Creates a blake2b hex from the input.\n */\n\nexport const blake2AsHex = createAsHex(blake2AsU8a);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasBigInt, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { isReady } from '@polkadot/wasm-crypto'; // re-export so TS *.d.ts generation is correct\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function createAsHex(fn) {\n  return (...args) => u8aToHex(fn(...args));\n}\nexport function createBitHasher(bitLength, fn) {\n  return (data, onlyJs) => fn(data, bitLength, onlyJs);\n}\nexport function createDualHasher(wa, js) {\n  return (value, bitLength = 256, onlyJs) => {\n    const u8a = u8aToU8a(value);\n    return !hasBigInt || !onlyJs && isReady() ? wa[bitLength](u8a) : js[bitLength](u8a);\n  };\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from \"./is/function.js\";\nimport { isNull } from \"./is/null.js\";\nimport { isUndefined } from \"./is/undefined.js\";\n\n/**\n * @name assert\n * @summary Checks for a valid test, if not Error is thrown.\n * @description\n * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.\n * @example\n * <BR>\n *\n * ```javascript\n * const { assert } from '@polkadot/util';\n *\n * assert(true, 'True should be true'); // passes\n * assert(false, 'False should not be true'); // Error thrown\n * assert(false, () => 'message'); // Error with 'message'\n * ```\n */\nexport function assert(condition, message) {\n  if (!condition) {\n    throw new Error(isFunction(message) ? message() : message);\n  }\n}\n/**\n * @name assertReturn\n * @description Returns when the value is not undefined/null, otherwise throws assertion error\n */\n\nexport function assertReturn(value, message) {\n  assert(!isUndefined(value) && !isNull(value), message);\n  return value;\n}\n/**\n * @name assertUnreachable\n * @description An assertion helper that ensures all codepaths are followed\n */\n\nexport function assertUnreachable(x) {\n  throw new Error(`This codepath should be unreachable. Unhandled input: ${x}`);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInt } from '@polkadot/x-bigint';\nexport const hasBigInt = typeof BigInt === 'function' && typeof BigInt.asIntN === 'function';\nexport const hasBuffer = typeof Buffer !== 'undefined';\nexport const hasCjs = typeof require === 'function' && typeof module !== 'undefined';\nexport const hasDirname = typeof __dirname !== 'undefined';\nexport const hasEsm = !hasCjs;\nexport const hasProcess = typeof process === 'object';\nexport const hasWasm = typeof WebAssembly !== 'undefined';","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst U8_TO_HEX = new Array(256);\nconst U16_TO_HEX = new Array(256 * 256);\nconst HEX_TO_U8 = {};\nconst HEX_TO_U16 = {};\n\nfor (let n = 0; n < 256; n++) {\n  const hex = n.toString(16).padStart(2, '0');\n  U8_TO_HEX[n] = hex;\n  HEX_TO_U8[hex] = n;\n}\n\nfor (let i = 0; i < 256; i++) {\n  for (let j = 0; j < 256; j++) {\n    const hex = U8_TO_HEX[i] + U8_TO_HEX[j];\n    const n = i << 8 | j;\n    U16_TO_HEX[n] = hex;\n    HEX_TO_U16[hex] = n;\n  }\n}\n\nexport { HEX_TO_U16, HEX_TO_U8, U16_TO_HEX, U8_TO_HEX };","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { REGEX_HEX_NOPREFIX, REGEX_HEX_PREFIXED } from \"../is/hex.js\";\n/**\n * @name hexStripPrefix\n * @summary Strips any leading `0x` prefix.\n * @description\n * Tests for the existence of a `0x` prefix, and returns the value without the prefix. Un-prefixed values are returned as-is.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexStripPrefix } from '@polkadot/util';\n *\n * console.log('stripped', hexStripPrefix('0x1234')); // => 1234\n * ```\n */\n\nexport function hexStripPrefix(value) {\n  if (!value || value === '0x') {\n    return '';\n  } else if (REGEX_HEX_PREFIXED.test(value)) {\n    return value.substr(2);\n  } else if (REGEX_HEX_NOPREFIX.test(value)) {\n    return value;\n  }\n\n  throw new Error(`Expected hex value to convert, found '${value}'`);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { HEX_TO_U8, HEX_TO_U16 } from \"./alphabet.js\";\nimport { hexStripPrefix } from \"./stripPrefix.js\";\n/**\n * @name hexToU8a\n * @summary Creates a Uint8Array object from a hex string.\n * @description\n * `null` inputs returns an empty `Uint8Array` result. Hex input values return the actual bytes value converted to a Uint8Array. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToU8a } from '@polkadot/util';\n *\n * hexToU8a('0x80001f'); // Uint8Array([0x80, 0x00, 0x1f])\n * hexToU8a('0x80001f', 32); // Uint8Array([0x00, 0x80, 0x00, 0x1f])\n * ```\n */\n\nexport function hexToU8a(_value, bitLength = -1) {\n  if (!_value) {\n    return new Uint8Array();\n  }\n\n  const value = hexStripPrefix(_value).toLowerCase();\n  const valLength = value.length / 2;\n  const endLength = Math.ceil(bitLength === -1 ? valLength : bitLength / 8);\n  const result = new Uint8Array(endLength);\n  const offset = endLength > valLength ? endLength - valLength : 0;\n  const dv = new DataView(result.buffer, offset);\n  const mod = (endLength - offset) % 2;\n  const length = endLength - offset - mod;\n\n  for (let i = 0; i < length; i += 2) {\n    dv.setUint16(i, HEX_TO_U16[value.substr(i * 2, 4)]);\n  }\n\n  if (mod) {\n    dv.setUint8(length, HEX_TO_U8[value.substr(value.length - 2, 2)]);\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n/**\n * @name isFunction\n * @summary Tests for a `function`.\n * @description\n * Checks to see if the input value is a JavaScript function.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isFunction } from '@polkadot/util';\n *\n * isFunction(() => false); // => true\n * ```\n */\nexport function isFunction(value) {\n  return typeof value === 'function';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const REGEX_HEX_PREFIXED = /^0x[\\da-fA-F]+$/;\nexport const REGEX_HEX_NOPREFIX = /^[\\da-fA-F]+$/;\n/**\n * @name isHex\n * @summary Tests for a hex string.\n * @description\n * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isHex } from '@polkadot/util';\n *\n * isHex('0x1234'); // => true\n * isHex('0x1234', 8); // => false\n * ```\n */\n\nexport function isHex(value, bitLength = -1, ignoreLength) {\n  return typeof value === 'string' && (value === '0x' || REGEX_HEX_PREFIXED.test(value)) && (bitLength === -1 ? ignoreLength || value.length % 2 === 0 : value.length === 2 + Math.ceil(bitLength / 4));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isNull\n * @summary Tests for a `null` values.\n * @description\n * Checks to see if the input value is `null`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isNull } from '@polkadot/util';\n *\n * console.log('isNull', isNull(null)); // => true\n * ```\n */\nexport function isNull(value) {\n  return value === null;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isU8a\n * @summary Tests for a `Uint8Array` object instance.\n * @description\n * Checks to see if the input object is an instance of `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isUint8Array } from '@polkadot/util';\n *\n * console.log('isU8a', isU8a([])); // => false\n * ```\n */\nexport function isU8a(value) {\n  return value instanceof Uint8Array;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isUndefined\n * @summary Tests for a `undefined` values.\n * @description\n * Checks to see if the input value is `undefined`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isUndefined } from '@polkadot/util';\n *\n * console.log('isUndefined', isUndefined(void(0))); // => true\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isUndefined(value) {\n  return typeof value === 'undefined';\n}","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// This is very limited, only handling Ascii values\nexport class TextEncoder {\n  encode(value) {\n    const u8a = new Uint8Array(value.length);\n\n    for (let i = 0; i < value.length; i++) {\n      u8a[i] = value.charCodeAt(i);\n    }\n\n    return u8a;\n  }\n\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { TextEncoder } from '@polkadot/x-textencoder';\nconst encoder = new TextEncoder();\n/**\n * @name stringToU8a\n * @summary Creates a Uint8Array object from a utf-8 string.\n * @description\n * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringToU8a } from '@polkadot/util';\n *\n * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\nexport function stringToU8a(value) {\n  return value ? encoder.encode(value.toString()) : new Uint8Array();\n}","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { extractGlobal } from '@polkadot/x-global';\nimport { TextEncoder as Fallback } from \"./fallback.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nexport const TextEncoder = extractGlobal('TextEncoder', Fallback);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from \"./toU8a.js\";\n/**\n * @name u8aConcat\n * @summary Creates a concatenated Uint8Array from the inputs.\n * @description\n * Concatenates the input arrays into a single `UInt8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { { u8aConcat } from '@polkadot/util';\n *\n * u8aConcat(\n *   new Uint8Array([1, 2, 3]),\n *   new Uint8Array([4, 5, 6])\n * ); // [1, 2, 3, 4, 5, 6]\n * ```\n */\n\nexport function u8aConcat(...list) {\n  let length = 0;\n  let offset = 0;\n  const u8as = new Array(list.length);\n\n  for (let i = 0; i < list.length; i++) {\n    u8as[i] = u8aToU8a(list[i]);\n    length += u8as[i].length;\n  }\n\n  const result = new Uint8Array(length);\n\n  for (let i = 0; i < u8as.length; i++) {\n    result.set(u8as[i], offset);\n    offset += u8as[i].length;\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { U8_TO_HEX, U16_TO_HEX } from \"../hex/alphabet.js\";\n/** @internal */\n\nfunction hex(value) {\n  const mod = value.length % 2;\n  const length = value.length - mod;\n  const dv = new DataView(value.buffer, value.byteOffset);\n  let result = '';\n\n  for (let i = 0; i < length; i += 2) {\n    result += U16_TO_HEX[dv.getUint16(i)];\n  }\n\n  if (mod) {\n    result += U8_TO_HEX[dv.getUint8(length)];\n  }\n\n  return result;\n}\n/**\n * @name u8aToHex\n * @summary Creates a hex string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual hex string. `null` or `undefined` values returns an `0x` string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToHex } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */\n\n\nexport function u8aToHex(value, bitLength = -1, isPrefixed = true) {\n  const length = Math.ceil(bitLength / 8);\n  return `${isPrefixed ? '0x' : ''}${!value || !value.length ? '' : length > 0 && value.length > length ? `${hex(value.subarray(0, length / 2))}…${hex(value.subarray(value.length - length / 2))}` : hex(value)}`;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToU8a } from \"../hex/toU8a.js\";\nimport { isBuffer } from \"../is/buffer.js\";\nimport { isHex } from \"../is/hex.js\";\nimport { isU8a } from \"../is/u8a.js\";\nimport { stringToU8a } from \"../string/toU8a.js\";\n/**\n * @name u8aToU8a\n * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.\n * @description\n * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToU8a } from '@polkadot/util';\n *\n * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])\n * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])\n * ```\n */\n\nexport function u8aToU8a(value) {\n  return !value ? new Uint8Array() : Array.isArray(value) || isBuffer(value) ? new Uint8Array(value) : isU8a(value) ? value : isHex(value) ? hexToU8a(value) : stringToU8a(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasBuffer } from \"../has.js\";\n/**\n * @name isBuffer\n * @summary Tests for a `Buffer` object instance.\n * @description\n * Checks to see if the input object is an instance of `Buffer`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBuffer } from '@polkadot/util';\n *\n * console.log('isBuffer', isBuffer(Buffer.from([]))); // => true\n * ```\n */\n\nexport function isBuffer(value) {\n  return hasBuffer && Buffer.isBuffer(value);\n}","// Copyright 2019-2021 @polkadot/wasm-crypto-wasm authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bytes as _bytes, sizeCompressed as _sizeCompressed, sizeUncompressed as _sizeUncompressed } from \"./cjs/bytes.js\";\nexport const bytes = _bytes;\nexport const sizeCompressed = _sizeCompressed;\nexport const sizeUncompressed = _sizeUncompressed;","// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// MIT License\n//\n// Copyright (c) 2020 Arjun Barrett\n//\n// Copied from https://github.com/101arrowz/fflate/blob/73c737941ec89d85cdf0ad39ee6f26c5fdc95fd7/src/index.ts\n// This only contains the unzlibSync function, no compression, no async, no workers\n//\n// These 2 issues are addressed as a short-term, stop-gap solution\n//   - https://github.com/polkadot-js/api/issues/2963\n//   - https://github.com/101arrowz/fflate/issues/17\n//\n// Only tweaks make here are some TS adjustments (we use strict null checks), the code is otherwise as-is with\n// only the single required function provided (compression is still being done in the build with fflate)\n\n/* eslint-disable */\n// inflate state\n// aliases for shorter compressed code (most minifers don't do this)\nconst u8 = Uint8Array,\n      u16 = Uint16Array,\n      u32 = Uint32Array; // code length index map\n\nconst clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]); // fixed length extra bits\n\nconst fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0,\n/* unused */\n0, 0,\n/* impossible */\n0]); // fixed distance extra bits\n// see fleb note\n\nconst fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13,\n/* unused */\n0, 0]); // get base, reverse index map from extra bits\n\nconst freb = (eb, start) => {\n  const b = new u16(31);\n\n  for (let i = 0; i < 31; ++i) {\n    b[i] = start += 1 << eb[i - 1];\n  } // numbers here are at max 18 bits\n\n\n  const r = new u32(b[30]);\n\n  for (let i = 1; i < 30; ++i) {\n    for (let j = b[i]; j < b[i + 1]; ++j) {\n      r[j] = j - b[i] << 5 | i;\n    }\n  }\n\n  return [b, r];\n};\n\nconst [fl, revfl] = freb(fleb, 2); // we can ignore the fact that the other numbers are wrong; they never happen anyway\n\nfl[28] = 258, revfl[258] = 28;\nconst [fd] = freb(fdeb, 0); // map of value to reverse (assuming 16 bits)\n\nconst rev = new u16(32768);\n\nfor (let i = 0; i < 32768; ++i) {\n  // reverse table algorithm from SO\n  let x = (i & 0xAAAA) >>> 1 | (i & 0x5555) << 1;\n  x = (x & 0xCCCC) >>> 2 | (x & 0x3333) << 2;\n  x = (x & 0xF0F0) >>> 4 | (x & 0x0F0F) << 4;\n  rev[i] = ((x & 0xFF00) >>> 8 | (x & 0x00FF) << 8) >>> 1;\n} // create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\n\n\nconst hMap = (cd, mb, r) => {\n  const s = cd.length; // index\n\n  let i = 0; // u16 \"map\": index -> # of codes with bit length = index\n\n  const l = new u16(mb); // length of cd must be 288 (total # of codes)\n\n  for (; i < s; ++i) ++l[cd[i] - 1]; // u16 \"map\": index -> minimum code for bit length = index\n\n\n  const le = new u16(mb);\n\n  for (i = 0; i < mb; ++i) {\n    le[i] = le[i - 1] + l[i - 1] << 1;\n  }\n\n  let co;\n\n  if (r) {\n    // u16 \"map\": index -> number of actual bits, symbol for code\n    co = new u16(1 << mb); // bits to remove for reverser\n\n    const rvb = 15 - mb;\n\n    for (i = 0; i < s; ++i) {\n      // ignore 0 lengths\n      if (cd[i]) {\n        // num encoding both symbol and bits read\n        const sv = i << 4 | cd[i]; // free bits\n\n        const r = mb - cd[i]; // start value\n\n        let v = le[cd[i] - 1]++ << r; // m is end value\n\n        for (const m = v | (1 << r) - 1; v <= m; ++v) {\n          // every 16 bit value starting with the code yields the same result\n          co[rev[v] >>> rvb] = sv;\n        }\n      }\n    }\n  } else {\n    co = new u16(s);\n\n    for (i = 0; i < s; ++i) co[i] = rev[le[cd[i] - 1]++] >>> 15 - cd[i];\n  }\n\n  return co;\n}; // fixed length tree\n\n\nconst flt = new u8(288);\n\nfor (let i = 0; i < 144; ++i) flt[i] = 8;\n\nfor (let i = 144; i < 256; ++i) flt[i] = 9;\n\nfor (let i = 256; i < 280; ++i) flt[i] = 7;\n\nfor (let i = 280; i < 288; ++i) flt[i] = 8; // fixed distance tree\n\n\nconst fdt = new u8(32);\n\nfor (let i = 0; i < 32; ++i) fdt[i] = 5; // fixed length map\n\n\nconst flrm = hMap(flt, 9, 1); // fixed distance map\n\nconst fdrm = hMap(fdt, 5, 1); // read d, starting at bit p and mask with m\n\nconst bits = (d, p, m) => {\n  const o = p >>> 3;\n  return (d[o] | d[o + 1] << 8) >>> (p & 7) & m;\n}; // read d, starting at bit p continuing for at least 16 bits\n\n\nconst bits16 = (d, p) => {\n  const o = p >>> 3;\n  return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >>> (p & 7);\n}; // get end of byte\n\n\nconst shft = p => (p >>> 3) + (p & 7 && 1); // typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\n\n\nconst slc = (v, s, e) => {\n  if (s == null || s < 0) s = 0;\n  if (e == null || e > v.length) e = v.length; // can't use .constructor in case user-supplied\n\n  const n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\n  n.set(v.subarray(s, e));\n  return n;\n}; // find max of array\n\n\nconst max = a => {\n  let m = a[0];\n\n  for (let i = 1; i < a.length; ++i) {\n    if (a[i] > m) m = a[i];\n  }\n\n  return m;\n}; // expands raw DEFLATE data\n\n\nconst inflt = (dat, buf, st) => {\n  const noSt = !st || st.i;\n  if (!st) st = {}; // source length\n\n  const sl = dat.length; // have to estimate size\n\n  const noBuf = !buf || !noSt; // Assumes roughly 33% compression ratio average\n\n  if (!buf) buf = new u8(sl * 3); // ensure buffer can fit at least l elements\n\n  const cbuf = l => {\n    let bl = buf.length; // need to increase size to fit\n\n    if (l > bl) {\n      // Double or set to necessary, whichever is greater\n      const nbuf = new u8(Math.max(bl << 1, l));\n      nbuf.set(buf);\n      buf = nbuf;\n    }\n  }; //  last chunk         bitpos           bytes\n\n\n  let final = st.f || 0,\n      pos = st.p || 0,\n      bt = st.b || 0,\n      lm = st.l,\n      dm = st.d,\n      lbt = st.m,\n      dbt = st.n;\n  if (final && !lm) return buf; // total bits\n\n  const tbts = sl << 3;\n\n  do {\n    if (!lm) {\n      // BFINAL - this is only 1 when last chunk is next\n      st.f = final = bits(dat, pos, 1); // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n\n      const type = bits(dat, pos + 1, 3);\n      pos += 3;\n\n      if (!type) {\n        // go to end of byte boundary\n        const s = shft(pos) + 4,\n              l = dat[s - 4] | dat[s - 3] << 8,\n              t = s + l;\n\n        if (t > sl) {\n          if (noSt) throw 'unexpected EOF';\n          break;\n        } // ensure size\n\n\n        if (noBuf) cbuf(bt + l); // Copy over uncompressed data\n\n        buf.set(dat.subarray(s, t), bt); // Get new bitpos, update byte count\n\n        st.b = bt += l, st.p = pos = t << 3;\n        continue;\n      } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;else if (type == 2) {\n        //  literal                            lengths\n        const hLit = bits(dat, pos, 31) + 257,\n              hcLen = bits(dat, pos + 10, 15) + 4;\n        const tl = hLit + bits(dat, pos + 5, 31) + 1;\n        pos += 14; // length+distance tree\n\n        const ldt = new u8(tl); // code length tree\n\n        const clt = new u8(19);\n\n        for (let i = 0; i < hcLen; ++i) {\n          // use index map to get real code\n          clt[clim[i]] = bits(dat, pos + i * 3, 7);\n        }\n\n        pos += hcLen * 3; // code lengths bits\n\n        const clb = max(clt),\n              clbmsk = (1 << clb) - 1;\n        if (!noSt && pos + tl * (clb + 7) > tbts) break; // code lengths map\n\n        const clm = hMap(clt, clb, 1);\n\n        for (let i = 0; i < tl;) {\n          const r = clm[bits(dat, pos, clbmsk)]; // bits read\n\n          pos += r & 15; // symbol\n\n          const s = r >>> 4; // code length to copy\n\n          if (s < 16) {\n            ldt[i++] = s;\n          } else {\n            //  copy   count\n            let c = 0,\n                n = 0;\n            if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;\n\n            while (n--) ldt[i++] = c;\n          }\n        } //    length tree                 distance tree\n\n\n        const lt = ldt.subarray(0, hLit),\n              dt = ldt.subarray(hLit); // max length bits\n\n        lbt = max(lt); // max dist bits\n\n        dbt = max(dt);\n        lm = hMap(lt, lbt, 1);\n        dm = hMap(dt, dbt, 1);\n      } else throw 'invalid block type';\n\n      if (pos > tbts) throw 'unexpected EOF';\n    } // Make sure the buffer can hold this + the largest possible addition\n    // maximum chunk size (practically, theoretically infinite) is 2^17;\n\n\n    if (noBuf) cbuf(bt + 131072);\n    const lms = (1 << lbt) - 1,\n          dms = (1 << dbt) - 1;\n    const mxa = lbt + dbt + 18;\n\n    while (noSt || pos + mxa < tbts) {\n      // bits read, code\n      const c = lm[bits16(dat, pos) & lms],\n            sym = c >>> 4;\n      pos += c & 15;\n      if (pos > tbts) throw 'unexpected EOF';\n      if (!c) throw 'invalid length/literal';\n      if (sym < 256) buf[bt++] = sym;else if (sym == 256) {\n        lm = undefined;\n        break;\n      } else {\n        let add = sym - 254; // no extra bits needed if less\n\n        if (sym > 264) {\n          // index\n          const i = sym - 257,\n                b = fleb[i];\n          add = bits(dat, pos, (1 << b) - 1) + fl[i];\n          pos += b;\n        } // dist\n\n\n        const d = dm[bits16(dat, pos) & dms],\n              dsym = d >>> 4;\n        if (!d) throw 'invalid distance';\n        pos += d & 15;\n        let dt = fd[dsym];\n\n        if (dsym > 3) {\n          const b = fdeb[dsym];\n          dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n        }\n\n        if (pos > tbts) throw 'unexpected EOF';\n        if (noBuf) cbuf(bt + 131072);\n        const end = bt + add;\n\n        for (; bt < end; bt += 4) {\n          buf[bt] = buf[bt - dt];\n          buf[bt + 1] = buf[bt + 1 - dt];\n          buf[bt + 2] = buf[bt + 2 - dt];\n          buf[bt + 3] = buf[bt + 3 - dt];\n        }\n\n        bt = end;\n      }\n    }\n\n    st.l = lm, st.p = pos, st.b = bt;\n    if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n  } while (!final);\n\n  return bt == buf.length ? buf : slc(buf, 0, bt);\n}; // zlib valid\n\n\nconst zlv = d => {\n  if ((d[0] & 15) != 8 || d[0] >>> 4 > 7 || (d[0] << 8 | d[1]) % 31) throw 'invalid zlib data';\n  if (d[1] & 32) throw 'invalid zlib data: preset dictionaries not supported';\n};\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\n\n\nexport function unzlibSync(data, out) {\n  return inflt((zlv(data), data.subarray(2, -4)), out);\n}","// Copyright 2019-2021 @polkadot/wasm-crypto-wasm authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Decode } from \"./base64.js\";\nimport { bytes, sizeUncompressed } from \"./bytes.js\";\nimport { unzlibSync } from \"./fflate.js\";\nexport const wasmBytes = unzlibSync(base64Decode(bytes), new Uint8Array(sizeUncompressed));","// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nexport function base64Decode(data) {\n  const bytes = [];\n  let byte = 0;\n  let bits = 0;\n\n  for (let i = 0; i < data.length && data[i] !== '='; i++) {\n    // each character represents 6 bits\n    byte = byte << 6 | chars.indexOf(data[i]); // each byte needs to contain 8 bits\n\n    if ((bits += 6) >= 8) {\n      bytes.push(byte >>> (bits -= 8) & 0xff);\n    }\n  }\n\n  return Uint8Array.from(bytes);\n}","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// This is very limited, only handling Ascii values\nexport class TextDecoder {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-useless-constructor\n  constructor(_) {// nothing\n  }\n\n  decode(value) {\n    let result = '';\n\n    for (let i = 0; i < value.length; i++) {\n      result += String.fromCharCode(value[i]);\n    }\n\n    return result;\n  }\n\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { TextDecoder } from '@polkadot/x-textdecoder';\nconst decoder = new TextDecoder('utf-8');\n/**\n * @name u8aToString\n * @summary Creates a utf-8 string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToString } from '@polkadot/util';\n *\n * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello\n * ```\n */\n\nexport function u8aToString(value) {\n  return !(value !== null && value !== void 0 && value.length) ? '' : decoder.decode(value);\n}","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { extractGlobal } from '@polkadot/x-global';\nimport { TextDecoder as Fallback } from \"./fallback.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nexport const TextDecoder = extractGlobal('TextDecoder', Fallback);","// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { assert, stringToU8a, u8aToString } from '@polkadot/util';\nlet wasm = null;\nlet cachegetInt32 = null;\nlet cachegetUint8 = null;\nexport async function initWasm(wasmBytes, asmFn, wbg) {\n  try {\n    assert(typeof WebAssembly !== 'undefined' && wasmBytes && wasmBytes.length, 'WebAssembly is not available in your environment');\n    const source = await WebAssembly.instantiate(wasmBytes, {\n      wbg\n    });\n    wasm = source.instance.exports;\n  } catch (error) {\n    // if we have a valid supplied asm.js, return that\n    if (asmFn) {\n      wasm = asmFn(wbg);\n    } else {\n      console.error('FATAL: Unable to initialize @polkadot/wasm-crypto');\n      console.error(error);\n      wasm = null;\n    }\n  }\n}\nexport function withWasm(fn) {\n  return (...params) => {\n    assert(wasm, 'The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.');\n    return fn(wasm, ...params);\n  };\n}\nexport function getWasm() {\n  return wasm;\n}\nexport function getInt32() {\n  if (cachegetInt32 === null || cachegetInt32.buffer !== wasm.memory.buffer) {\n    cachegetInt32 = new Int32Array(wasm.memory.buffer);\n  }\n\n  return cachegetInt32;\n}\nexport function getUint8() {\n  if (cachegetUint8 === null || cachegetUint8.buffer !== wasm.memory.buffer) {\n    cachegetUint8 = new Uint8Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint8;\n}\nexport function getU8a(ptr, len) {\n  return getUint8().subarray(ptr / 1, ptr / 1 + len);\n}\nexport function getString(ptr, len) {\n  return u8aToString(getU8a(ptr, len));\n}\nexport function allocU8a(arg) {\n  const ptr = wasm.__wbindgen_malloc(arg.length * 1);\n\n  getUint8().set(arg, ptr / 1);\n  return [ptr, arg.length];\n}\nexport function allocString(arg) {\n  return allocU8a(stringToU8a(arg));\n}\nexport function resultU8a() {\n  const r0 = getInt32()[8 / 4 + 0];\n  const r1 = getInt32()[8 / 4 + 1];\n  const ret = getU8a(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return ret;\n}\nexport function resultString() {\n  return u8aToString(resultU8a());\n}","// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable camelcase */\nimport { getRandomValues } from '@polkadot/x-randomvalues';\nimport { getString, getU8a } from \"./bridge.js\";\nconst DEFAULT_CRYPTO = {\n  getRandomValues\n};\nconst DEFAULT_SELF = {\n  crypto: DEFAULT_CRYPTO\n};\nconst heap = new Array(32).fill(undefined).concat(undefined, null, true, false);\nlet heapNext = heap.length;\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nfunction dropObject(idx) {\n  if (idx < 36) {\n    return;\n  }\n\n  heap[idx] = heapNext;\n  heapNext = idx;\n}\n\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\n\nfunction addObject(obj) {\n  if (heapNext === heap.length) {\n    heap.push(heap.length + 1);\n  }\n\n  const idx = heapNext;\n  heapNext = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\n\nexport function __wbindgen_is_undefined(idx) {\n  return getObject(idx) === undefined;\n}\nexport function __wbindgen_throw(ptr, len) {\n  throw new Error(getString(ptr, len));\n}\nexport function __wbg_self_1b7a39e3a92c949c() {\n  return addObject(DEFAULT_SELF);\n}\nexport function __wbg_require_604837428532a733(ptr, len) {\n  throw new Error(`Unable to require ${getString(ptr, len)}`);\n} // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport function __wbg_crypto_968f1772287e2df0(_idx) {\n  return addObject(DEFAULT_CRYPTO);\n} // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport function __wbg_getRandomValues_a3d34b4fee3c2869(_idx) {\n  return addObject(DEFAULT_CRYPTO.getRandomValues);\n} // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport function __wbg_getRandomValues_f5e14ab7ac8e995d(_arg0, ptr, len) {\n  DEFAULT_CRYPTO.getRandomValues(getU8a(ptr, len));\n} // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport function __wbg_randomFillSync_d5bd2d655fdf256a(_idx, _ptr, _len) {\n  throw new Error('randomFillsync is not available'); // getObject(idx).randomFillSync(getU8a(ptr, len));\n}\nexport function __wbindgen_object_drop_ref(idx) {\n  takeObject(idx);\n}\nexport function abort() {\n  throw new Error('abort');\n}","// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { asmJsInit } from '@polkadot/wasm-crypto-asmjs';\nimport { wasmBytes } from '@polkadot/wasm-crypto-wasm';\nimport { allocString, allocU8a, getWasm, initWasm, resultString, resultU8a, withWasm } from \"./bridge.js\";\nimport * as imports from \"./imports.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nconst wasmPromise = initWasm(wasmBytes, asmJsInit, imports).catch(() => null);\nexport const bip39Generate = withWasm((wasm, words) => {\n  wasm.ext_bip39_generate(8, words);\n  return resultString();\n});\nexport const bip39ToEntropy = withWasm((wasm, phrase) => {\n  wasm.ext_bip39_to_entropy(8, ...allocString(phrase));\n  return resultU8a();\n});\nexport const bip39ToMiniSecret = withWasm((wasm, phrase, password) => {\n  wasm.ext_bip39_to_mini_secret(8, ...allocString(phrase), ...allocString(password));\n  return resultU8a();\n});\nexport const bip39ToSeed = withWasm((wasm, phrase, password) => {\n  wasm.ext_bip39_to_seed(8, ...allocString(phrase), ...allocString(password));\n  return resultU8a();\n});\nexport const bip39Validate = withWasm((wasm, phrase) => {\n  const ret = wasm.ext_bip39_validate(...allocString(phrase));\n  return ret !== 0;\n});\nexport const ed25519KeypairFromSeed = withWasm((wasm, seed) => {\n  wasm.ext_ed_from_seed(8, ...allocU8a(seed));\n  return resultU8a();\n});\nexport const ed25519Sign = withWasm((wasm, pubkey, seckey, message) => {\n  wasm.ext_ed_sign(8, ...allocU8a(pubkey), ...allocU8a(seckey), ...allocU8a(message));\n  return resultU8a();\n});\nexport const ed25519Verify = withWasm((wasm, signature, message, pubkey) => {\n  const ret = wasm.ext_ed_verify(...allocU8a(signature), ...allocU8a(message), ...allocU8a(pubkey));\n  return ret !== 0;\n});\nexport const secp256k1FromSeed = withWasm((wasm, seckey) => {\n  wasm.ext_secp_from_seed(8, ...allocU8a(seckey));\n  return resultU8a();\n});\nexport const secp256k1Compress = withWasm((wasm, pubkey) => {\n  wasm.ext_secp_pub_compress(8, ...allocU8a(pubkey));\n  return resultU8a();\n});\nexport const secp256k1Expand = withWasm((wasm, pubkey) => {\n  wasm.ext_secp_pub_expand(8, ...allocU8a(pubkey));\n  return resultU8a();\n});\nexport const secp256k1Recover = withWasm((wasm, msgHash, sig, recovery) => {\n  wasm.ext_secp_recover(8, ...allocU8a(msgHash), ...allocU8a(sig), recovery);\n  return resultU8a();\n});\nexport const secp256k1Sign = withWasm((wasm, msgHash, seckey) => {\n  wasm.ext_secp_sign(8, ...allocU8a(msgHash), ...allocU8a(seckey));\n  return resultU8a();\n});\nexport const sr25519DeriveKeypairHard = withWasm((wasm, pair, cc) => {\n  wasm.ext_sr_derive_keypair_hard(8, ...allocU8a(pair), ...allocU8a(cc));\n  return resultU8a();\n});\nexport const sr25519DeriveKeypairSoft = withWasm((wasm, pair, cc) => {\n  wasm.ext_sr_derive_keypair_soft(8, ...allocU8a(pair), ...allocU8a(cc));\n  return resultU8a();\n});\nexport const sr25519DerivePublicSoft = withWasm((wasm, pubkey, cc) => {\n  wasm.ext_sr_derive_public_soft(8, ...allocU8a(pubkey), ...allocU8a(cc));\n  return resultU8a();\n});\nexport const sr25519KeypairFromSeed = withWasm((wasm, seed) => {\n  wasm.ext_sr_from_seed(8, ...allocU8a(seed));\n  return resultU8a();\n});\nexport const sr25519Sign = withWasm((wasm, pubkey, secret, message) => {\n  wasm.ext_sr_sign(8, ...allocU8a(pubkey), ...allocU8a(secret), ...allocU8a(message));\n  return resultU8a();\n});\nexport const sr25519Verify = withWasm((wasm, signature, message, pubkey) => {\n  const ret = wasm.ext_sr_verify(...allocU8a(signature), ...allocU8a(message), ...allocU8a(pubkey));\n  return ret !== 0;\n});\nexport const sr25519Agree = withWasm((wasm, pubkey, secret) => {\n  wasm.ext_sr_agree(8, ...allocU8a(pubkey), ...allocU8a(secret));\n  return resultU8a();\n});\nexport const vrfSign = withWasm((wasm, secret, context, message, extra) => {\n  wasm.ext_vrf_sign(8, ...allocU8a(secret), ...allocU8a(context), ...allocU8a(message), ...allocU8a(extra));\n  return resultU8a();\n});\nexport const vrfVerify = withWasm((wasm, pubkey, context, message, extra, outAndProof) => {\n  const ret = wasm.ext_vrf_verify(...allocU8a(pubkey), ...allocU8a(context), ...allocU8a(message), ...allocU8a(extra), ...allocU8a(outAndProof));\n  return ret !== 0;\n});\nexport const blake2b = withWasm((wasm, data, key, size) => {\n  wasm.ext_blake2b(8, ...allocU8a(data), ...allocU8a(key), size);\n  return resultU8a();\n});\nexport const hmacSha256 = withWasm((wasm, key, data) => {\n  wasm.ext_hmac_sha256(8, ...allocU8a(key), ...allocU8a(data));\n  return resultU8a();\n});\nexport const hmacSha512 = withWasm((wasm, key, data) => {\n  wasm.ext_hmac_sha512(8, ...allocU8a(key), ...allocU8a(data));\n  return resultU8a();\n});\nexport const keccak256 = withWasm((wasm, data) => {\n  wasm.ext_keccak256(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const keccak512 = withWasm((wasm, data) => {\n  wasm.ext_keccak512(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const pbkdf2 = withWasm((wasm, data, salt, rounds) => {\n  wasm.ext_pbkdf2(8, ...allocU8a(data), ...allocU8a(salt), rounds);\n  return resultU8a();\n});\nexport const scrypt = withWasm((wasm, password, salt, log2n, r, p) => {\n  wasm.ext_scrypt(8, ...allocU8a(password), ...allocU8a(salt), log2n, r, p);\n  return resultU8a();\n});\nexport const sha256 = withWasm((wasm, data) => {\n  wasm.ext_sha256(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const sha512 = withWasm((wasm, data) => {\n  wasm.ext_sha512(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const twox = withWasm((wasm, data, rounds) => {\n  wasm.ext_twox(8, ...allocU8a(data), rounds);\n  return resultU8a();\n});\nexport function isReady() {\n  return !!getWasm();\n}\nexport function waitReady() {\n  return wasmPromise.then(() => isReady());\n}","// Copyright 2019-2021 @polkadot/wasm-crypto-asmjs authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const asmJsInit = null;","// Copyright 2017-2022 @polkadot/x-bigint authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { xglobal } from '@polkadot/x-global';\nexport { packageInfo } from \"./packageInfo.js\";\nexport const BigInt = typeof xglobal.BigInt === 'function' && typeof xglobal.BigInt.asIntN === 'function' ? xglobal.BigInt : () => Number.NaN;","// Copyright 2017-2022 @polkadot/x-global authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport { packageInfo } from \"./packageInfo.js\";\n\nfunction evaluateThis(fn) {\n  return fn('return this');\n}\n\nexport const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);\nexport function extractGlobal(name, fallback) {\n  return typeof xglobal[name] === 'undefined' ? fallback : xglobal[name];\n}\nexport function exposeGlobal(name, fallback) {\n  if (typeof xglobal[name] === 'undefined') {\n    xglobal[name] = fallback;\n  }\n}","// Copyright 2017-2022 @polkadot/x-randomvalues authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { xglobal } from '@polkadot/x-global';\nexport { packageInfo } from \"./packageInfo.js\";\nexport function getRandomValues(arr) {\n  // We use x-global here - this prevents packagers such as rollup\n  // confusing this with the \"normal\" Node.js import and stubbing it\n  // (and also aligns with eg. x-fetch, where x-global is used)\n  return xglobal.crypto.getRandomValues(arr);\n}","export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nexport let OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n","import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport let Kind;\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n","import { inspect } from './inspect.mjs';\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\n\nexport const instanceOf =\n  /* c8 ignore next 5 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  process.env.NODE_ENV === 'production'\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = inspect(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      devAssert(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      devAssert(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","unsupportedIterableToArray","o","allowArrayLike","it","Symbol","iterator","isArray","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","arrayLikeToArray","minLen","Object","prototype","toString","slice","constructor","name","from","test","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","BN","number","base","endian","isBN","this","negative","words","red","_init","Buffer","wordSize","window","require","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","b","Math","min","move","dest","src","num","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","strip","input","output","outLen","prev","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","assertNumber","Number","isSafeInteger","chain","wrap","args","encode","reverse","reduce","decode","alphabet","digits","map","letter","indexOf","join","separator","to","chr","data","push","normalize","fn","convertRadix","pos","forEach","d","digit","digitBase","floor","radix2carry","convertRadix2","radix","bytes","Uint8Array","radix2","revPadding","unsafeWrapper","apply","checksum","set","payload","newChecksum","oldChecksum","toUpperCase","genBase58","abc","XMR_BLOCK_LEN","block","subarray","padStart","blockLen","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","encodingConst","v","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","lowered","toLowerCase","sepIndex","lastIndexOf","sum","endsWith","actualLength","decodeToBytes","decodeUnsafe","TextDecoder","TextEncoder","CODERS","utf8","hex","base16","base32","base64","base64url","base58","base58xmr","coderTypeError","keys","type","hasOwnProperty","root","ed2curve","nacl","gf","init","Float64Array","gf0","gf1","I","car25519","sel25519","Z","M","S","pack25519","neq25519","xi","yi","vn","unpackneg","den","den2","den4","den6","set25519","unpack25519","pow2523","par25519","convertPublicKey","pk","inv25519","convertSecretKey","sk","lowlevel","crypto_hash","convertKeyPair","edKeyPair","publicKey","secretKey","__assign","assign","arguments","create","randombytes","_0","_9","_121665","D2","X","Y","ts64","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","key","t0","t1","t2","t3","t4","t5","t6","t7","buffer","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","update","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b10","b11","b12","b13","b14","b15","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r3","r4","r5","r6","r7","r8","r9","mac","macpos","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","th","tl","wh","Int32Array","wl","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","seeded","L","modL","crypto_sign","sm","smlen","crypto_sign_open","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","nonce","open","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","keyPair","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","sign","signedMsg","mlen","detached","sig","verify","fromSeed","seed","seedLength","signatureLength","hash","hashLength","setPRNG","crypto","msCrypto","getRandomValues","sizeCompressed","sizeUncompressed","_arrayLikeToArray","_arrayWithHoles","_assertThisInitialized","ReferenceError","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","_createForOfIteratorHelper","_possibleConstructorReturn","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","getPrototypeOf","NewTarget","Reflect","construct","_getPrototypeOf","setPrototypeOf","__proto__","_inherits","subClass","superClass","_isNativeReflectConstruct","sham","Proxy","Boolean","valueOf","_iterableToArray","iter","_nonIterableRest","_setPrototypeOf","_slicedToArray","arrayWithHoles","_i","_s","_arr","_n","_d","nonIterableRest","_toConsumableArray","iterableToArray","_typeof","obj","_unsupportedIterableToArray","U32_MASK64","BigInt","_32n","fromBig","le","lst","Ah","Uint32Array","Al","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u32","byteOffset","createView","DataView","rotr","nodeRequire","bind","setImmediate","Promise","resolve","toBytes","utf8ToBytes","assertHash","outputLen","Hash","_cloneInto","checkOpts","def","_opts","wrapConstructor","hashConstructor","hashC","message","digest","wrapConstructorWithOpts","hashCons","opts","_defineProperty","_classPrivateFieldInitSpec","privateMap","privateCollection","has","_classExtractFieldDescriptor","receiver","action","get","_classPrivateFieldGet","_classPrivateFieldSet","_0n","_1n","_2n","_3n","_8n","POW_2_256","CURVE","P","Gx","Gy","beta","weistrass","USE_ENDOMORPHISM","JacobianPoint","other","az2","az3","bz2","bz3","X1","Y1","Z1","E","X3","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","H","double","ZERO","HH","HHH","V","negate","scalar","normalizeScalar","splitScalarEndo","k1neg","k1","k2neg","k2","k1p","k2p","W","windows","points","affinePoint","equals","BASE","Point","_WINDOW_SIZE","precomputes","pointPrecomputes","precomputeWindow","normalizeZ","windowSize","maxNumber","shiftBy","offset","wbits","pr","cached","point","fake","wNAF","f1p","f2p","invZ","invert","invZ2","toInv","nums","scratch","invertBatch","toAffine","toAffineBatch","fromAffine","WeakMap","delete","isCompressed","hexToBytes","toHex","numTo32bStr","toRawBytes","isValidFieldElement","multiply","isShort","bytesToNumber","_6n","_11n","_22n","_23n","_44n","_88n","pow2","b22","b44","b88","b176","b220","b223","sqrtMod","isYOdd","assertValidity","ensureBytes","header","fromCompressedHex","fromUncompressedHex","privateKey","normalizePrivateKey","msgHash","signature","recovery","truncateHash","normalizeSignature","P_","fromHex","sP","multiplyUnsafe","hG","subtract","sliceDER","parseInt","parseDERInt","bytesToHex","Signature","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHex","rHex","rLen","sLen","toDERRawBytes","toCompactHex","isUint8a","hexToNumber","rBytesLeft","parseDERSignature","fromDER","concatBytes","arrays","every","hexes","uint8a","array","hexByte","byte","isNaN","power","modulo","divNearest","POW_2_128","c1","c2","HmacDrbg","fill","counter","values","utils","hmacSha256","hmacSha256Sync","hmac","hmacSync","incr","kmdToSig","kBytes","error","fromCompact","getPublicKey","fromPrivateKey","recoverPublicKey","fromSignature","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","seedArgs","finalizeSig","recSig","canonical","der","recovered","normalizeS","hashed","toCompactRawBytes","signSync","privKey","drbg","reseedSync","generateSync","_setWindowSize","node","nodeCrypto","web","isValidPrivateKey","bytesLength","randomPrivateKey","b32","sha256","subtle","createHash","messages","importKey","ckey","createHmac","sha256Sync","precompute","secp256k1PairFromSeed","onlyJs","hasBigInt","isReady","full","secp256k1FromSeed","ed25519PairFromSeed","ed25519KeypairFromSeed","sr25519PairFromU8a","fullU8a","u8aToU8a","SEC_LEN","sr25519PairFromSeed","seedU8a","sr25519KeypairFromSeed","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","R","u64","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","posOut","finished","destroyed","state","state32","idx1","idx0","B0","B1","Th","Tl","curH","curL","keccakP","take","keccak","writeInto","xofInto","destroy","digestInto","gen","keccak_256","keccak_512","genShake","dkLen","keccakAsU8a","createDualHasher","keccak256","keccak512","keccak256Js","keccak512Js","createBitHasher","createAsHex","isNumber","objectKeys","objectSpread","isBoolean","DEFAULT_OPTS","isLe","isNegative","hexToBn","options","stripped","hexStripPrefix","bn","isBigInt","isObject","isOn","fns","isFunction","isToBigInt","isToBn","bnToBn","isHex","toBn","toBigInt","createEmpty","createValue","valueBn","bnToU8a","arg1","arg2","BN_BE_OPTS","BN_LE_OPTS","BN_BE_32_OPTS","BN_LE_32_OPTS","BN_BE_256_OPTS","BN_LE_256_OPTS","secp256k1Expand","wasm","u8aConcat","ethereumEncode","addressOrPublic","u8aAddress","includes","address","u8aToHex","u8a","getH160","config","chars","coder","base64Validate","createValidate","base64Decode","createIs","createDecode","base64Encode","createEncode","isBn","BN_ONE","BN_TWO","BN_BILLION","MAX_U8","MAX_SAFE_INTEGER","MAX_U16","MAX_U32","compactAddLength","compactToU8a","RE_NUMBER","DeriveJunction","soft","harden","hexToU8a","String","isString","stringToU8a","blake2AsU8a","startsWith","substr","code","isHard","RE_JUNCTION","keyExtractPath","derivePath","parts","match","path","constructed","RE_CAPTURE","keyExtractSuri","suri","matches","isNull","phrase","password","HMAC","_key","iHash","oHash","buf","pbkdf2Init","_password","_salt","asyncTick","salt","DK","PRF","PRFSalt","pbkdf2Output","prfW","pbkdf2","view","ti","Ti","setInt32","ui","SHA2","padOffset","isLE","process","dataView","roundClean","setBigUint64","_u32_max","setUint32","oview","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","sha512","randomAsU8a","pbkdf2Encode","passphrase","u8aPass","u8aSalt","pbkdf2Js","Maj","SHA256_K","IV","SHA256_W","SHA256","G","W15","W2","s0","s1","T1","T2","shaAsU8a","sha256Js","sha512Js","sha256AsU8a","INVALID_MNEMONIC","INVALID_ENTROPY","binaryToByte","bin","bytesToBinary","deriveChecksumBits","entropyBuffer","mnemonicToSeedSync","mnemonic","mnemonicToEntropy","_entropyBits$match","DEFAULT_WORDLIST","dividerIndex","entropyBits","checksumBits","entropyBytes","entropy","mnemonicValidate","bip39Validate","validateMnemonic","mnemonicToLegacySeed","bip39ToSeed","bip39ToEntropy","jsToEntropy","mnemonicToMiniSecret","bip39ToMiniSecret","JS_HASH","WA_MHAC","hmacSha512","createSha","hmacShaAsU8a","u8aKey","U8_MAX","U16_MAX","dvI","dvO","setUint16","getUint16","setUint8","getUint8","u8aToBigInt","nToBigInt","hexToBigInt","DIV","NEG_MASK","nToU8a","valueBi","unshift","toU8a","N_BI","N_BN","secp256k1PrivateKeyTweakAdd","seckey","tweak","onlyBn","isU8a","addBn","addBi","HARDENED","hdValidatePath","NaN","MASTER_SECRET","createCoded","chainCode","deriveChild","hd","indexBuffer","hdEthereum","HDKD","createSeedDeriveFn","derive","keypair","keyHdkdEcdsa","keyHdkdEd25519","createDeriveFn","sr25519KeypairToU8a","sr25519DeriveHard","sr25519DeriveKeypairHard","sr25519DeriveSoft","sr25519DeriveKeypairSoft","generators","ecdsa","ed25519","ethereum","sr25519","isSoft","keyFromPath","pair","keyHdkd","DEV_PHRASE","u8aEq","u8aa","u8ab","dvA","dvB","hasher","hashType","secp256k1Sign","sigBytes","recoveryParam","naclOpen","sealed","senderBoxPublic","receiverBoxSecret","convertSecretKeyToCurve25519","convertPublicKeyToCurve25519","assertReturn","naclSeal","senderBoxSecret","receiverBoxPublic","secp256k1Compress","U8A_WRAP_ETHEREUM","U8A_WRAP_PREFIX","U8A_WRAP_POSTFIX","WRAP_LEN","u8aIsWrapped","withEthereum","ed25519Verify","messageU8a","publicKeyU8a","signatureU8a","wasmVerify","secp256k1Recover","sr25519Verify","secp256k1VerifyHasher","signerAddr","inputAddr","secp256k1Verify","VERIFIERS_ECDSA","VERIFIERS","CRYPTO_TYPES","verifyDetect","verifiers","isValid","some","verifyMultisig","none","signatureVerify","addressOrPublicKey","decodeAddress","isWrapped","isWrappedBytes","verifyFn","getVerifyFn","u8aUnwrapBytes","u8aWrapBytes","EMPTY_U8A","sr25519VrfSign","context","extra","vrfSign","sr25519VrfVerify","signOutput","proofU8a","vrfVerify","u8aFixLength","atStart","naclDecrypt","encrypted","secret","u8aToBn","DEFAULT_PARAMS","scryptFromU8a","params","rotl","XorAndSalsa","pi","ii","oi","y00","y01","y02","y03","y04","y05","y06","y07","y08","y09","y10","y11","y12","y13","y14","y15","x00","x01","x02","x03","x04","x05","x06","x07","x08","x09","BlockMix","head","tail","scryptInit","maxmem","onProgress","blockSize","blockSize32","memUsed","B32","blockMixCb","totalBlockMix","callbackPer","blockMixCnt","scryptOutput","scrypt","Pi","scryptEncode","log2","scryptJs","ENCODING","ENCODING_NONE","PKCS8_DIVIDER","PKCS8_HEADER","SEED_OFFSET","decodePair","_encType","decrypted","encType","encoded","jsonDecryptData","isUndefined","divOffset","divider","pubOffset","encodePair","naclEncrypt","scryptToU8a","pairToJson","isEncrypted","meta","contentType","content","version","jsonEncryptFormat","SIG_TYPE_NONE","TYPE_FROM_SEED","ed25519FromSeed","sr25519FromSeed","TYPE_PREFIX","TYPE_SIGNATURE","wasmSign","TYPE_ADDRESS","isLocked","u8aEmpty","vrfHash","proof","createPair","toSS58","encTypes","decodePkcs8","userEncoded","decoded","recode","encodeAddress","raw","addressRaw","decryptMessage","encryptedMessageWithNonce","senderPublicKey","derived","encodePkcs8","encryptMessage","recipientPublicKey","nonceIn","lock","setMeta","additional","withType","toJson","unlock","signerPublic","vrfResult","Pairs","PairFromSeed","pairToPublic","Keyring","ss58Format","getPairs","getPublicKeys","ignoreChecksum","addPair","json","createFromJson","addFromUri","createFromPair","createFromUri","cryptoType","_suri","isPhraseHex","padEnd","substring","all","remove","ss58","checkAddressChecksum","ss58Length","ss58Decoded","isPublicKey","sshash","base58Decode","defaults","endPos","knownIcon","centrifuge","kusama","polkadot","sora","statemine","statemint","westmint","knownLedger","bifrost","edgeware","equilibrium","genshiro","polymesh","knownTestnet","jupiter","subspace_testnet","knownGenesis","acala","astar","basilisk","hydradx","karura","kulupu","picasso","rococo","stafi","subsocial","UNSORTED","TESTNETS","availableNetworks","knownSubstrate","network","nameParts","slip44","hasLedgerSupport","genesisHash","icon","isTestnet","isIgnored","standardAccount","decimals","symbols","filter","sort","isUnSortedA","displayName","localeCompare","allowedDecodedLengths","allowedEncodedLengths","allowedPrefix","base58Encode","SS58_PREFIX","validate","ipfs","ipfsCompat","base58Validate","SIGMA","BLAKE2","keyLen","saltLen","persLen","personalization","buffer32","compress","dataOffset","data32","pos32","out32","BUF","G1","Xl","Xh","ll","G2","BLAKE2b","v0l","v0h","v1l","v1h","v2l","v2h","v3l","v3h","v4l","v4h","v5l","v5h","v6l","v6h","v7l","v7h","pers","isLast","blake2","blake2b","blake2bJs","wa","js","condition","hasBuffer","U8_TO_HEX","U16_TO_HEX","HEX_TO_U8","HEX_TO_U16","REGEX_HEX_PREFIXED","REGEX_HEX_NOPREFIX","_value","valLength","endLength","dv","ignoreLength","encoder","extractGlobal","Fallback","u8as","isPrefixed","isBuffer","_bytes","_sizeUncompressed","u8","u16","clim","fleb","fdeb","freb","eb","fl","revfl","fd","rev","hMap","cd","mb","co","rvb","sv","flt","fdt","flrm","fdrm","bits16","inflt","dat","st","noSt","sl","noBuf","cbuf","bl","nbuf","final","bt","lm","lbt","dbt","tbts","hLit","hcLen","ldt","clt","clb","clbmsk","clm","dt","lms","dms","mxa","sym","dsym","slc","wasmBytes","zlv","fromCharCode","decoder","u8aToString","cachegetInt32","cachegetUint8","asmFn","wbg","WebAssembly","instantiate","source","console","withWasm","getInt32","memory","getU8a","ptr","getString","allocU8a","arg","__wbindgen_malloc","allocString","resultU8a","__wbindgen_free","DEFAULT_CRYPTO","DEFAULT_SELF","heap","heapNext","getObject","idx","takeObject","dropObject","addObject","__wbindgen_is_undefined","__wbindgen_throw","__wbg_self_1b7a39e3a92c949c","__wbg_require_604837428532a733","__wbg_crypto_968f1772287e2df0","_idx","__wbg_getRandomValues_a3d34b4fee3c2869","__wbg_getRandomValues_f5e14ab7ac8e995d","_arg0","__wbg_randomFillSync_d5bd2d655fdf256a","_ptr","_len","__wbindgen_object_drop_ref","abort","initWasm","imports","catch","ext_bip39_generate","ext_bip39_to_entropy","ext_bip39_to_mini_secret","ext_bip39_to_seed","ext_bip39_validate","ext_ed_from_seed","ed25519Sign","pubkey","ext_ed_sign","ext_ed_verify","ext_secp_from_seed","ext_secp_pub_compress","ext_secp_pub_expand","ext_secp_recover","ext_secp_sign","cc","ext_sr_derive_keypair_hard","ext_sr_derive_keypair_soft","ext_sr_derive_public_soft","ext_sr_from_seed","sr25519Sign","ext_sr_sign","ext_sr_verify","ext_sr_agree","ext_vrf_sign","outAndProof","ext_vrf_verify","ext_blake2b","ext_hmac_sha256","ext_hmac_sha512","ext_keccak256","ext_keccak512","ext_pbkdf2","log2n","ext_scrypt","ext_sha256","ext_sha512","ext_twox","xglobal","globalThis","global","Function","fallback","devAssert","formatValue","seenValues","JSON","stringify","previouslySeenValues","isJSONable","jsonValue","remaining","items","formatArray","object","entries","tag","getObjectTag","properties","formatObject","formatObjectValue","OperationTypeNode","Location","startToken","endToken","toStringTag","Token","kind","line","column","Set","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","dedentBlockStringLines","lines","_firstNonEmptyLine2","commonIndent","firstNonEmptyLine","lastNonEmptyLine","_firstNonEmptyLine","indent","leadingWhitespace","isWhiteSpace","isDigit","isLetter","isNameStart","isNameContinue","Kind","instanceOf","Source","body","locationOffset","isSource"],"sourceRoot":""}
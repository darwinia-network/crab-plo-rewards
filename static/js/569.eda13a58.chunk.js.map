{"version":3,"file":"static/js/569.eda13a58.chunk.js","mappings":"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","sources":["../node_modules/@ethersproject/logger/src.ts/index.ts","../node_modules/@ethersproject/logger/src.ts/_version.ts","../node_modules/@ethersproject/bytes/src.ts/_version.ts","../node_modules/@ethersproject/bytes/src.ts/index.ts","../node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../node_modules/@ethersproject/bignumber/src.ts/_version.ts","../node_modules/@ethersproject/address/src.ts/_version.ts","../node_modules/@ethersproject/address/src.ts/index.ts","../node_modules/@ethersproject/keccak256/src.ts/index.ts","../node_modules/bn.js/lib/bn.js","../node_modules/js-sha3/src/sha3.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util-crypto/helpers.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/util/assert.js","../node_modules/@polkadot/keyring/node_modules/@polkadot/wasm-crypto/bundle.js"],"sourcesContent":["\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n","export const version = \"logger/5.5.0\";\n","export const version = \"bytes/5.5.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0\n    };\n\n    if (isBytesLike(signature)) {\n        const bytes: Uint8Array = arrayify(signature);\n        if (bytes.length !== 65) {\n            logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n        }\n\n        // Get the r, s and v\n        result.r = hexlify(bytes.slice(0, 32));\n        result.s = hexlify(bytes.slice(32, 64));\n        result.v = bytes[64];\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        logger.checkNew(new.target, BigNumber);\n\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division by zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot modulo negative values\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot raise to negative values\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'and' negative values\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'or' negative values\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'xor' negative values\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot mask negative values\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","export const version = \"bignumber/5.5.0\";\n","export const version = \"address/5.5.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasBigInt, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { isReady } from '@polkadot/wasm-crypto'; // re-export so TS *.d.ts generation is correct\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function createAsHex(fn) {\n  return (...args) => u8aToHex(fn(...args));\n}\nexport function createBitHasher(bitLength, fn) {\n  return (data, onlyJs) => fn(data, bitLength, onlyJs);\n}\nexport function createDualHasher(wa, js) {\n  return (value, bitLength = 256, onlyJs) => {\n    const u8a = u8aToU8a(value);\n    return !hasBigInt || !onlyJs && isReady() ? wa[bitLength](u8a) : js[bitLength](u8a);\n  };\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from \"./is/function.js\";\nimport { isNull } from \"./is/null.js\";\nimport { isUndefined } from \"./is/undefined.js\";\n\n/**\n * @name assert\n * @summary Checks for a valid test, if not Error is thrown.\n * @description\n * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.\n * @example\n * <BR>\n *\n * ```javascript\n * const { assert } from '@polkadot/util';\n *\n * assert(true, 'True should be true'); // passes\n * assert(false, 'False should not be true'); // Error thrown\n * assert(false, () => 'message'); // Error with 'message'\n * ```\n */\nexport function assert(condition, message) {\n  if (!condition) {\n    throw new Error(isFunction(message) ? message() : message);\n  }\n}\n/**\n * @name assertReturn\n * @description Returns when the value is not undefined/null, otherwise throws assertion error\n */\n\nexport function assertReturn(value, message) {\n  assert(!isUndefined(value) && !isNull(value), message);\n  return value;\n}\n/**\n * @name assertUnreachable\n * @description An assertion helper that ensures all codepaths are followed\n */\n\nexport function assertUnreachable(x) {\n  throw new Error(`This codepath should be unreachable. Unhandled input: ${x}`);\n}","// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { asmJsInit } from '@polkadot/wasm-crypto-asmjs';\nimport { wasmBytes } from '@polkadot/wasm-crypto-wasm';\nimport { allocString, allocU8a, getWasm, initWasm, resultString, resultU8a, withWasm } from \"./bridge.js\";\nimport * as imports from \"./imports.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nconst wasmPromise = initWasm(wasmBytes, asmJsInit, imports).catch(() => null);\nexport const bip39Generate = withWasm((wasm, words) => {\n  wasm.ext_bip39_generate(8, words);\n  return resultString();\n});\nexport const bip39ToEntropy = withWasm((wasm, phrase) => {\n  wasm.ext_bip39_to_entropy(8, ...allocString(phrase));\n  return resultU8a();\n});\nexport const bip39ToMiniSecret = withWasm((wasm, phrase, password) => {\n  wasm.ext_bip39_to_mini_secret(8, ...allocString(phrase), ...allocString(password));\n  return resultU8a();\n});\nexport const bip39ToSeed = withWasm((wasm, phrase, password) => {\n  wasm.ext_bip39_to_seed(8, ...allocString(phrase), ...allocString(password));\n  return resultU8a();\n});\nexport const bip39Validate = withWasm((wasm, phrase) => {\n  const ret = wasm.ext_bip39_validate(...allocString(phrase));\n  return ret !== 0;\n});\nexport const ed25519KeypairFromSeed = withWasm((wasm, seed) => {\n  wasm.ext_ed_from_seed(8, ...allocU8a(seed));\n  return resultU8a();\n});\nexport const ed25519Sign = withWasm((wasm, pubkey, seckey, message) => {\n  wasm.ext_ed_sign(8, ...allocU8a(pubkey), ...allocU8a(seckey), ...allocU8a(message));\n  return resultU8a();\n});\nexport const ed25519Verify = withWasm((wasm, signature, message, pubkey) => {\n  const ret = wasm.ext_ed_verify(...allocU8a(signature), ...allocU8a(message), ...allocU8a(pubkey));\n  return ret !== 0;\n});\nexport const secp256k1FromSeed = withWasm((wasm, seckey) => {\n  wasm.ext_secp_from_seed(8, ...allocU8a(seckey));\n  return resultU8a();\n});\nexport const secp256k1Compress = withWasm((wasm, pubkey) => {\n  wasm.ext_secp_pub_compress(8, ...allocU8a(pubkey));\n  return resultU8a();\n});\nexport const secp256k1Expand = withWasm((wasm, pubkey) => {\n  wasm.ext_secp_pub_expand(8, ...allocU8a(pubkey));\n  return resultU8a();\n});\nexport const secp256k1Recover = withWasm((wasm, msgHash, sig, recovery) => {\n  wasm.ext_secp_recover(8, ...allocU8a(msgHash), ...allocU8a(sig), recovery);\n  return resultU8a();\n});\nexport const secp256k1Sign = withWasm((wasm, msgHash, seckey) => {\n  wasm.ext_secp_sign(8, ...allocU8a(msgHash), ...allocU8a(seckey));\n  return resultU8a();\n});\nexport const sr25519DeriveKeypairHard = withWasm((wasm, pair, cc) => {\n  wasm.ext_sr_derive_keypair_hard(8, ...allocU8a(pair), ...allocU8a(cc));\n  return resultU8a();\n});\nexport const sr25519DeriveKeypairSoft = withWasm((wasm, pair, cc) => {\n  wasm.ext_sr_derive_keypair_soft(8, ...allocU8a(pair), ...allocU8a(cc));\n  return resultU8a();\n});\nexport const sr25519DerivePublicSoft = withWasm((wasm, pubkey, cc) => {\n  wasm.ext_sr_derive_public_soft(8, ...allocU8a(pubkey), ...allocU8a(cc));\n  return resultU8a();\n});\nexport const sr25519KeypairFromSeed = withWasm((wasm, seed) => {\n  wasm.ext_sr_from_seed(8, ...allocU8a(seed));\n  return resultU8a();\n});\nexport const sr25519Sign = withWasm((wasm, pubkey, secret, message) => {\n  wasm.ext_sr_sign(8, ...allocU8a(pubkey), ...allocU8a(secret), ...allocU8a(message));\n  return resultU8a();\n});\nexport const sr25519Verify = withWasm((wasm, signature, message, pubkey) => {\n  const ret = wasm.ext_sr_verify(...allocU8a(signature), ...allocU8a(message), ...allocU8a(pubkey));\n  return ret !== 0;\n});\nexport const sr25519Agree = withWasm((wasm, pubkey, secret) => {\n  wasm.ext_sr_agree(8, ...allocU8a(pubkey), ...allocU8a(secret));\n  return resultU8a();\n});\nexport const vrfSign = withWasm((wasm, secret, context, message, extra) => {\n  wasm.ext_vrf_sign(8, ...allocU8a(secret), ...allocU8a(context), ...allocU8a(message), ...allocU8a(extra));\n  return resultU8a();\n});\nexport const vrfVerify = withWasm((wasm, pubkey, context, message, extra, outAndProof) => {\n  const ret = wasm.ext_vrf_verify(...allocU8a(pubkey), ...allocU8a(context), ...allocU8a(message), ...allocU8a(extra), ...allocU8a(outAndProof));\n  return ret !== 0;\n});\nexport const blake2b = withWasm((wasm, data, key, size) => {\n  wasm.ext_blake2b(8, ...allocU8a(data), ...allocU8a(key), size);\n  return resultU8a();\n});\nexport const hmacSha256 = withWasm((wasm, key, data) => {\n  wasm.ext_hmac_sha256(8, ...allocU8a(key), ...allocU8a(data));\n  return resultU8a();\n});\nexport const hmacSha512 = withWasm((wasm, key, data) => {\n  wasm.ext_hmac_sha512(8, ...allocU8a(key), ...allocU8a(data));\n  return resultU8a();\n});\nexport const keccak256 = withWasm((wasm, data) => {\n  wasm.ext_keccak256(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const keccak512 = withWasm((wasm, data) => {\n  wasm.ext_keccak512(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const pbkdf2 = withWasm((wasm, data, salt, rounds) => {\n  wasm.ext_pbkdf2(8, ...allocU8a(data), ...allocU8a(salt), rounds);\n  return resultU8a();\n});\nexport const scrypt = withWasm((wasm, password, salt, log2n, r, p) => {\n  wasm.ext_scrypt(8, ...allocU8a(password), ...allocU8a(salt), log2n, r, p);\n  return resultU8a();\n});\nexport const sha256 = withWasm((wasm, data) => {\n  wasm.ext_sha256(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const sha512 = withWasm((wasm, data) => {\n  wasm.ext_sha512(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const twox = withWasm((wasm, data, rounds) => {\n  wasm.ext_twox(8, ...allocU8a(data), rounds);\n  return resultU8a();\n});\nexport function isReady() {\n  return !!getWasm();\n}\nexport function waitReady() {\n  return wasmPromise.then(() => isReady());\n}"],"names":["_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","_normalizeError","missing","forEach","form","normalize","Error","push","length","join","String","fromCharCode","message","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","constructor","version","Object","defineProperty","this","enumerable","value","writable","_log","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","errors","UNKNOWN_ERROR","messageDetails","keys","key","Uint8Array","hex","i","JSON","stringify","toString","reason","throwError","name","INVALID_ARGUMENT","argument","assert","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","NUMERIC_FAULT","fault","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","MISSING_NEW","checkAbstract","censorship","permanent","globalLogger","logger","isHexable","toHexString","addSlice","array","slice","Array","prototype","call","arguments","isInteger","isBytes","v","arrayify","options","result","unshift","parseInt","allowMissingPrefix","substring","isHexString","hexPad","match","BN","_BN","getChecksumAddress","address","chars","split","expanded","charCodeAt","hashed","data","sha3","toUpperCase","ibanLookup","safeDigits","Math","floor","x","log10","LN10","ibanChecksum","map","c","block","checksum","getAddress","isAddress","module","exports","val","msg","inherits","ctor","superCtor","super_","TempCtor","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","window","require","e","parseHex4Bits","string","index","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","len","min","num","isArray","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","j","w","strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","undefined","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","INPUT_ERROR","WINDOW","root","JS_SHA3_NO_WINDOW","WEB_WORKER","JS_SHA3_NO_NODE_JS","process","versions","node","global","COMMON_JS","JS_SHA3_NO_COMMON_JS","AMD","define","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","CSHAKE_PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","obj","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","isView","buffer","createOutputMethod","outputType","Keccak","update","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","createOutputMethods","method","createMethod","type","create","algorithms","bytepad","Kmac","methodNames","algorithm","methodName","newMethodName","blocks","reset","finalized","blockCount","byteCount","outputBlocks","extraBytes","notString","lastByteIndex","f","encode","bytes","encodeString","strs","paddingBytes","finalize","arrayBuffer","Uint32Array","digest","offset","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","createAsHex","fn","u8aToHex","isFunction","initWasm","wasmBytes","asmJsInit","imports","catch","withWasm","wasm","ext_bip39_generate","resultString","phrase","ext_bip39_to_entropy","allocString","resultU8a","password","ext_bip39_to_mini_secret","ext_bip39_to_seed","ext_bip39_validate","seed","ext_ed_from_seed","allocU8a","pubkey","seckey","ext_ed_sign","signature","ext_ed_verify","ext_secp_from_seed","ext_secp_pub_compress","ext_secp_pub_expand","msgHash","sig","recovery","ext_secp_recover","ext_secp_sign","pair","cc","ext_sr_derive_keypair_hard","ext_sr_derive_keypair_soft","ext_sr_derive_public_soft","ext_sr_from_seed","secret","ext_sr_sign","ext_sr_verify","ext_sr_agree","context","extra","ext_vrf_sign","outAndProof","ext_vrf_verify","blake2b","ext_blake2b","ext_hmac_sha256","ext_hmac_sha512","ext_keccak256","ext_keccak512","salt","rounds","ext_pbkdf2","log2n","ext_scrypt","ext_sha256","ext_sha512","ext_twox","isReady","getWasm"],"sourceRoot":""}
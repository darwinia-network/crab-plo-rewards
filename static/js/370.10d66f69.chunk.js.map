{"version":3,"file":"static/js/370.10d66f69.chunk.js","mappings":"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","sources":["../node_modules/@polkadot/util/node_modules/bn.js/lib/bn.js","../node_modules/@scure/base/index.js","../node_modules/big.js/big.js","../node_modules/tslib/tslib.es6.js","../node_modules/@babel/runtime/helpers/esm/classExtractFieldDescriptor.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js","../node_modules/@babel/runtime/helpers/esm/classApplyDescriptorGet.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js","../node_modules/@babel/runtime/helpers/esm/checkPrivateRedeclaration.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js","../node_modules/@babel/runtime/helpers/esm/classApplyDescriptorSet.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@noble/hashes/esm/_blake2.js","../node_modules/@noble/hashes/esm/blake2b.js","../node_modules/@noble/hashes/esm/cryptoBrowser.js","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@substrate/ss58-registry/index.js","../node_modules/@polkadot/networks/defaults/ledger.js","../node_modules/@polkadot/networks/defaults/genesis.js","../node_modules/@polkadot/networks/defaults/icons.js","../node_modules/@polkadot/networks/defaults/testnets.js","../node_modules/@polkadot/networks/interfaces.js","../node_modules/@polkadot/util/bn/toHex.js","../node_modules/@polkadot/types-codec/abstract/AbstractInt.js","../node_modules/@polkadot/types-codec/base/UInt.js","../node_modules/@polkadot/types-codec/extended/Bytes.js","../node_modules/@polkadot/util/is/ascii.js","../node_modules/@polkadot/types-codec/native/Raw.js","../node_modules/@polkadot/util/is/utf8.js","../node_modules/@polkadot/types-codec/native/Struct.js","../node_modules/@polkadot/types-codec/primitive/U32.js","../node_modules/@polkadot/types-codec/utils/compareMap.js","../node_modules/@polkadot/types-codec/utils/decodeU8a.js","../node_modules/@polkadot/types-codec/utils/mapToTypeMap.js","../node_modules/@polkadot/types-codec/utils/sanitize.js","../node_modules/@polkadot/types-codec/utils/typeToConstructor.js","../node_modules/@polkadot/types-codec/utils/typesToMap.js","../node_modules/@polkadot/types-codec/utils/util.js","../node_modules/@polkadot/types-create/types/types.js","../node_modules/@polkadot/types-create/util/typeSplit.js","../node_modules/@polkadot/types-create/util/getTypeDef.js","../node_modules/@polkadot/types-create/util/xcm.js","../node_modules/@polkadot/types/create/lazy.js","../node_modules/@polkadot/types-codec/native/Json.js","../node_modules/@polkadot/types-codec/base/DoNotConstruct.js","../node_modules/@polkadot/types-codec/utils/compareArray.js","../node_modules/@polkadot/types-codec/abstract/AbstractArray.js","../node_modules/@polkadot/types-codec/base/Null.js","../node_modules/@polkadot/types-codec/base/Enum.js","../node_modules/@polkadot/types-codec/utils/sortValues.js","../node_modules/@polkadot/types-codec/extended/Map.js","../node_modules/@polkadot/types-codec/extended/BTreeMap.js","../node_modules/@polkadot/types-codec/utils/compareSet.js","../node_modules/@polkadot/types-codec/extended/BTreeSet.js","../node_modules/@polkadot/types-codec/base/Compact.js","../node_modules/@polkadot/types-codec/extended/HashMap.js","../node_modules/@polkadot/types-codec/base/Int.js","../node_modules/@polkadot/util/is/codec.js","../node_modules/@polkadot/types-codec/base/Option.js","../node_modules/@polkadot/types-codec/base/Tuple.js","../node_modules/@polkadot/types-codec/extended/Range.js","../node_modules/@polkadot/types-codec/extended/RangeInclusive.js","../node_modules/@polkadot/types-codec/base/Result.js","../node_modules/@polkadot/types-codec/native/Set.js","../node_modules/@polkadot/types-codec/base/Vec.js","../node_modules/@polkadot/types-codec/extended/U8aFixed.js","../node_modules/@polkadot/types-codec/base/VecFixed.js","../node_modules/@polkadot/types-codec/extended/WrapperKeepOpaque.js","../node_modules/@polkadot/types-codec/extended/WrapperOpaque.js","../node_modules/@polkadot/types-create/create/class.js","../node_modules/@polkadot/types-create/create/type.js","../node_modules/@polkadot/types/extrinsic/signedExtensions/emptyCheck.js","../node_modules/@polkadot/types/extrinsic/signedExtensions/polkadot.js","../node_modules/@polkadot/types/extrinsic/signedExtensions/shell.js","../node_modules/@polkadot/types/extrinsic/signedExtensions/substrate.js","../node_modules/@polkadot/types/extrinsic/signedExtensions/index.js","../node_modules/@polkadot/types/extrinsic/signedExtensions/statemint.js","../node_modules/@polkadot/types/generic/Event.js","../node_modules/@polkadot/types-codec/base/Base.js","../node_modules/@polkadot/types/extrinsic/constants.js","../node_modules/@polkadot/types/extrinsic/Extrinsic.js","../node_modules/@polkadot/types-codec/primitive/U64.js","../node_modules/@polkadot/types/extrinsic/ExtrinsicEra.js","../node_modules/@polkadot/types/extrinsic/ExtrinsicPayload.js","../node_modules/@polkadot/types/extrinsic/ExtrinsicPayloadUnknown.js","../node_modules/@polkadot/types/extrinsic/ExtrinsicUnknown.js","../node_modules/@polkadot/types/extrinsic/SignerPayload.js","../node_modules/@polkadot/types/extrinsic/v4/Extrinsic.js","../node_modules/@polkadot/types/extrinsic/v4/ExtrinsicPayload.js","../node_modules/@polkadot/types/extrinsic/util.js","../node_modules/@polkadot/types/extrinsic/v4/ExtrinsicSignature.js","../node_modules/@polkadot/util-crypto/keccak/asU8a.js","../node_modules/@polkadot/util-crypto/ethereum/isAddress.js","../node_modules/@polkadot/util-crypto/ethereum/isChecksum.js","../node_modules/@noble/secp256k1/lib/esm/index.js","../node_modules/@polkadot/util-crypto/bn.js","../node_modules/@polkadot/util-crypto/ethereum/encode.js","../node_modules/@polkadot/util-crypto/secp256k1/expand.js","../node_modules/@polkadot/types/ethereum/AccountId.js","../node_modules/@polkadot/util-crypto/address/encode.js","../node_modules/@polkadot/types/generic/AccountIndex.js","../node_modules/@polkadot/types/ethereum/LookupSource.js","../node_modules/@polkadot/types/generic/AccountId.js","../node_modules/@polkadot/types/generic/Block.js","../node_modules/@polkadot/types/generic/Call.js","../node_modules/@polkadot/types/generic/ChainProperties.js","../node_modules/@polkadot/types/generic/ConsensusEngineId.js","../node_modules/@polkadot/types/generic/LookupSource.js","../node_modules/@polkadot/types/generic/MultiAddress.js","../node_modules/@polkadot/types-codec/native/Bool.js","../node_modules/@polkadot/types/generic/Vote.js","../node_modules/@polkadot/types-codec/extended/BitVec.js","../node_modules/@polkadot/types-codec/primitive/I8.js","../node_modules/@polkadot/types-codec/primitive/I16.js","../node_modules/@polkadot/types-codec/primitive/I32.js","../node_modules/@polkadot/types-codec/primitive/I64.js","../node_modules/@polkadot/types-codec/primitive/I128.js","../node_modules/@polkadot/types-codec/primitive/I256.js","../node_modules/@polkadot/types-codec/native/Text.js","../node_modules/@polkadot/types-codec/extended/Type.js","../node_modules/@polkadot/types-codec/primitive/U8.js","../node_modules/@polkadot/types-codec/primitive/U16.js","../node_modules/@polkadot/types-codec/primitive/U128.js","../node_modules/@polkadot/types-codec/primitive/U256.js","../node_modules/@polkadot/types-codec/primitive/USize.js","../node_modules/@polkadot/types/primitive/Data.js","../node_modules/@polkadot/types/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","../node_modules/@polkadot/types/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","../node_modules/@polkadot/types-create/util/encodeTypes.js","../node_modules/@polkadot/types/metadata/PortableRegistry/PortableRegistry.js","../node_modules/@polkadot/types/create/registry.js","../node_modules/@polkadot/types/interfaces/metadata/v9.js","../node_modules/@polkadot/types/interfaces/metadata/v11.js","../node_modules/@polkadot/types/interfaces/metadata/hashers.js","../node_modules/@polkadot/types/interfaces/scaleInfo/v1.js","../node_modules/@polkadot/types/interfaces/metadata/v14.js","../node_modules/@polkadot/types/interfaces/metadata/definitions.js","../node_modules/@polkadot/types/interfaces/metadata/v10.js","../node_modules/@polkadot/types/interfaces/metadata/v12.js","../node_modules/@polkadot/types/interfaces/metadata/v13.js","../node_modules/@polkadot/types/interfaces/scaleInfo/v0.js","../node_modules/@polkadot/types/interfaces/scaleInfo/definitions.js","../node_modules/@polkadot/types/interfaces/assets/definitions.js","../node_modules/@polkadot/types/interfaces/authorship/definitions.js","../node_modules/@polkadot/types/interfaces/aura/definitions.js","../node_modules/@polkadot/types/interfaces/babe/definitions.js","../node_modules/@polkadot/types/interfaces/balances/definitions.js","../node_modules/@polkadot/types/interfaces/beefy/definitions.js","../node_modules/@polkadot/types/interfaces/collective/definitions.js","../node_modules/@polkadot/types/interfaces/consensus/definitions.js","../node_modules/@polkadot/types/interfaces/contracts/definitions.js","../node_modules/@polkadot/types/interfaces/contracts/rpc.js","../node_modules/@polkadot/types/interfaces/democracy/definitions.js","../node_modules/@polkadot/types/interfaces/dev/definitions.js","../node_modules/@polkadot/types/interfaces/elections/definitions.js","../node_modules/@polkadot/types/interfaces/engine/definitions.js","../node_modules/@polkadot/types/interfaces/evm/definitions.js","../node_modules/@polkadot/types/interfaces/extrinsics/definitions.js","../node_modules/@polkadot/types/interfaces/genericAsset/definitions.js","../node_modules/@polkadot/types/interfaces/gilt/definitions.js","../node_modules/@polkadot/types/interfaces/grandpa/definitions.js","../node_modules/@polkadot/types/interfaces/identity/definitions.js","../node_modules/@polkadot/types/interfaces/imOnline/definitions.js","../node_modules/@polkadot/types/interfaces/lottery/definitions.js","../node_modules/@polkadot/types/interfaces/mmr/definitions.js","../node_modules/@polkadot/types/interfaces/offences/definitions.js","../node_modules/@polkadot/types/interfaces/proxy/definitions.js","../node_modules/@polkadot/types/interfaces/recovery/definitions.js","../node_modules/@polkadot/types/interfaces/scheduler/definitions.js","../node_modules/@polkadot/types/interfaces/session/definitions.js","../node_modules/@polkadot/types/interfaces/society/definitions.js","../node_modules/@polkadot/types/interfaces/staking/definitions.js","../node_modules/@polkadot/types/interfaces/support/definitions.js","../node_modules/@polkadot/types/interfaces/syncstate/definitions.js","../node_modules/@polkadot/types/interfaces/system/definitions.js","../node_modules/@polkadot/types/interfaces/treasury/definitions.js","../node_modules/@polkadot/types/interfaces/txpayment/definitions.js","../node_modules/@polkadot/types/interfaces/uniques/definitions.js","../node_modules/@polkadot/types/interfaces/utility/definitions.js","../node_modules/@polkadot/types/interfaces/vesting/definitions.js","../node_modules/@polkadot/types/interfaces/attestations/definitions.js","../node_modules/@polkadot/types/interfaces/bridges/definitions.js","../node_modules/@polkadot/types/interfaces/claims/definitions.js","../node_modules/@polkadot/types/interfaces/crowdloan/definitions.js","../node_modules/@polkadot/types/interfaces/cumulus/definitions.js","../node_modules/@polkadot/types/interfaces/parachains/slots.js","../node_modules/@polkadot/types/interfaces/parachains/definitions.js","../node_modules/@polkadot/types/interfaces/parachains/hrmp.js","../node_modules/@polkadot/types/interfaces/poll/definitions.js","../node_modules/@polkadot/types/interfaces/purchase/definitions.js","../node_modules/@polkadot/types/interfaces/xcm/v0.js","../node_modules/@polkadot/types/interfaces/xcm/definitions.js","../node_modules/@polkadot/types/interfaces/xcm/v1.js","../node_modules/@polkadot/types/interfaces/xcm/v2.js","../node_modules/@polkadot/types/interfaces/contractsAbi/definitions.js","../node_modules/@polkadot/types/interfaces/eth/definitions.js","../node_modules/@polkadot/types/interfaces/eth/rpc.js","../node_modules/@polkadot/types/interfaces/rpc/definitions.js","../node_modules/@polkadot/types/interfaces/author/definitions.js","../node_modules/@polkadot/types/interfaces/chain/definitions.js","../node_modules/@polkadot/types/interfaces/childstate/definitions.js","../node_modules/@polkadot/types/interfaces/offchain/definitions.js","../node_modules/@polkadot/types/interfaces/payment/definitions.js","../node_modules/@polkadot/types/interfaces/state/definitions.js","../node_modules/@polkadot/types/interfaces/runtime/definitions.js","../node_modules/@polkadot/types/metadata/v9/toV10.js","../node_modules/@polkadot/types/metadata/v10/toV11.js","../node_modules/@polkadot/types/metadata/v11/toV12.js","../node_modules/@polkadot/types/metadata/v12/toV13.js","../node_modules/@polkadot/types/interfaces/alias.js","../node_modules/@polkadot/types/metadata/v13/toV14.js","../node_modules/@polkadot/types/metadata/v14/toLatest.js","../node_modules/@polkadot/types/metadata/MagicNumber.js","../node_modules/@polkadot/types/metadata/util/toCallsOnly.js","../node_modules/@polkadot/types/metadata/util/flattenUniq.js","../node_modules/@polkadot/types/metadata/util/extractTypes.js","../node_modules/@polkadot/types/metadata/util/validateTypes.js","../node_modules/@polkadot/types/metadata/util/getUniqTypes.js","../node_modules/@polkadot/types/metadata/MetadataVersioned.js","../node_modules/@polkadot/types/metadata/Metadata.js","../node_modules/@polkadot/types/metadata/decorate/constants/index.js","../node_modules/@polkadot/types/metadata/decorate/events/index.js","../node_modules/@polkadot/types/metadata/decorate/extrinsics/index.js","../node_modules/@polkadot/types/metadata/decorate/extrinsics/createUnchecked.js","../node_modules/@polkadot/types/metadata/decorate/util.js","../node_modules/@polkadot/types/metadata/util/getSiName.js","../node_modules/@polkadot/types/primitive/StorageKey.js","../node_modules/@polkadot/util-crypto/address/checksum.js","../node_modules/@polkadot/util-crypto/address/decode.js","../node_modules/@polkadot/util-crypto/address/defaults.js","../node_modules/@polkadot/util-crypto/address/sshash.js","../node_modules/@polkadot/util-crypto/base58/bs58.js","../node_modules/@polkadot/util-crypto/base32/helpers.js","../node_modules/@polkadot/util-crypto/blake2/asU8a.js","../node_modules/@polkadot/util-crypto/helpers.js","../node_modules/@polkadot/util-crypto/node_modules/@polkadot/wasm-crypto/bridge.js","../node_modules/@polkadot/util-crypto/node_modules/@polkadot/wasm-crypto/bundle.js","../node_modules/@polkadot/util/assert.js","../node_modules/@polkadot/util/bn/consts.js","../node_modules/@polkadot/util/is/toBigInt.js","../node_modules/@polkadot/util/is/toBn.js","../node_modules/@polkadot/util/bn/toBn.js","../node_modules/@polkadot/util/bn/toU8a.js","../node_modules/@polkadot/util/compact/addLength.js","../node_modules/@polkadot/util/compact/fromU8a.js","../node_modules/@polkadot/util/compact/stripLength.js","../node_modules/@polkadot/util/compact/toU8a.js","../node_modules/@polkadot/util/format/si.js","../node_modules/@polkadot/util/format/formatBalance.js","../node_modules/@polkadot/util/format/formatDecimal.js","../node_modules/@polkadot/util/format/formatNumber.js","../node_modules/@polkadot/util/has.js","../node_modules/@polkadot/util/hex/alphabet.js","../node_modules/@polkadot/util/hex/stripPrefix.js","../node_modules/@polkadot/util/hex/toBn.js","../node_modules/@polkadot/util/hex/toU8a.js","../node_modules/@polkadot/util/is/bigInt.js","../node_modules/@polkadot/util/is/bn.js","../node_modules/@polkadot/util/is/boolean.js","../node_modules/@polkadot/util/is/buffer.js","../node_modules/@polkadot/util/is/function.js","../node_modules/@polkadot/util/is/helpers.js","../node_modules/@polkadot/util/is/hex.js","../node_modules/@polkadot/util/is/null.js","../node_modules/@polkadot/util/is/number.js","../node_modules/@polkadot/util/is/object.js","../node_modules/@polkadot/util/is/string.js","../node_modules/@polkadot/util/is/u8a.js","../node_modules/@polkadot/util/is/undefined.js","../node_modules/@polkadot/util/lazy.js","../node_modules/@polkadot/util/format/formatDate.js","../node_modules/@polkadot/util/logger.js","../node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/index.js","../node_modules/@polkadot/util/object/property.js","../node_modules/@polkadot/util/object/keys.js","../node_modules/@polkadot/util/object/spread.js","../node_modules/@polkadot/util/string/camelCase.js","../node_modules/@polkadot/x-textencoder/browser.js","../node_modules/@polkadot/util/string/toU8a.js","../node_modules/@polkadot/x-textencoder/fallback.js","../node_modules/@polkadot/util/stringify.js","../node_modules/@polkadot/util/u8a/concat.js","../node_modules/@polkadot/util/u8a/eq.js","../node_modules/@polkadot/util/u8a/toBn.js","../node_modules/@polkadot/util/u8a/toHex.js","../node_modules/@polkadot/x-textdecoder/browser.js","../node_modules/@polkadot/util/u8a/toString.js","../node_modules/@polkadot/x-textdecoder/fallback.js","../node_modules/@polkadot/util/u8a/toU8a.js","../node_modules/@polkadot/x-global/index.js","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/inspect.mjs","../node_modules/graphql/language/ast.mjs","../node_modules/graphql/language/blockString.mjs","../node_modules/graphql/language/characterClasses.mjs","../node_modules/graphql/language/kinds.mjs","../node_modules/graphql/jsutils/instanceOf.mjs","../node_modules/graphql/language/source.mjs"],"sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64url = exports.base64 = exports.base32crockford = exports.base32hex = exports.base32 = exports.base16 = exports.utils = exports.assertNumber = void 0;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexports.utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.base58check = base58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const [prefix, _words] = [str.slice(0, sepIndex), str.slice(sepIndex + 1)];\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString;\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n","/*\r\n *  big.js v6.1.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2021 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,            // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n    /*\r\n     * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n     * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n     * primitive number without a loss of precision.\r\n     */\r\n    STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        if (typeof n !== 'string') {\r\n          if (Big.strict === true) {\r\n            throw TypeError(INVALID + 'number');\r\n          }\r\n\r\n          // Minus zero?\r\n          n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n        }\r\n\r\n        parse(x, n);\r\n      }\r\n\r\n      // Retain a reference to this Big constructor.\r\n      // Shadow Big.prototype.constructor which points to Object.\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.strict = STRICT;\r\n    Big.roundDown = 0;\r\n    Big.roundHalfUp = 1;\r\n    Big.roundHalfEven = 2;\r\n    Big.roundUp = 3;\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    if (!NUMERIC.test(n)) {\r\n      throw Error(INVALID + 'number');\r\n    }\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, sd, rm, more) {\r\n    var xc = x.c;\r\n\r\n    if (rm === UNDEFINED) rm = x.constructor.RM;\r\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (sd < 1) {\r\n      more =\r\n        rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n        rm === 1 && xc[0] >= 5 ||\r\n        rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n      );\r\n\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = x.e - sd + 1;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else if (sd < xc.length) {\r\n\r\n      // xc[sd] is the digit after the digit that may be rounded up.\r\n      more =\r\n        rm === 1 && xc[sd] >= 5 ||\r\n        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n        rm === 3 && (more || !!xc[0]);\r\n\r\n      // Remove any digits after the required precision.\r\n      xc.length = sd--;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[sd] > 9;) {\r\n          xc[sd] = 0;\r\n          if (!sd--) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (sd = xc.length; !xc[--sd];) xc.pop();\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   */\r\n  function stringify(x, doExponential, isNonzero) {\r\n    var e = x.e,\r\n      s = x.c.join(''),\r\n      n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (doExponential) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) {\r\n        for (e -= n; e--;) s += '0';\r\n      } else if (e < n) {\r\n        s = s.slice(0, e) + '.' + s.slice(e);\r\n      }\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && isNonzero ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n   */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) {\r\n      y.s = k;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n    q.s = k;\r\n    k = p < 0 ? 0 : p;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n      p--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (yc[0]) {\r\n        y.s = -b;\r\n      } else if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = 1;\r\n      }\r\n      return y;\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var e, k, t,\r\n      x = this,\r\n      Big = x.constructor;\r\n\r\n    y = new Big(y);\r\n\r\n    // Signs differ?\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (!yc[0]) {\r\n        if (xc[0]) {\r\n          y = new Big(x);\r\n        } else {\r\n          y.s = x.s;\r\n        }\r\n      }\r\n      return y;\r\n    }\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (e = xe - ye) {\r\n      if (e > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        e = -e;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; e--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    e = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (k) {\r\n      xc.unshift(k);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor('1'),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n      throw Error(INVALID + 'exponent');\r\n    }\r\n\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n   * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.prec = function (sd, rm) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    return round(new this.constructor(this), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n   * using rounding mode rm, or Big.RM if rm is not specified.\r\n   * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.round = function (dp, rm) {\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    return round(new this.constructor(this), dp + this.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big('0.5');\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) {\r\n      throw Error(NAME + 'No square root');\r\n    }\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s + '');\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) {\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = b;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), ++dp, rm);\r\n      for (; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, true, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n      // x.e may have changed if the value is rounded up.\r\n      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, false, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toJSON = P.toString = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Big as a primitve number.\r\n   */\r\n  P.toNumber = function () {\r\n    var n = Number(stringify(this, true, true));\r\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n      throw Error(NAME + 'Imprecise conversion');\r\n    }\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * rounding mode rm, or Big.RM if rm is not specified.\r\n   * Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      n = x.c[0];\r\n\r\n    if (sd !== UNDEFINED) {\r\n      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n        throw Error(INVALID + 'precision');\r\n      }\r\n      x = round(new Big(x), sd, rm);\r\n      for (; x.c.length < sd;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    if (Big.strict === true) {\r\n      throw Error(NAME + 'valueOf disallowed');\r\n    }\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}","import classApplyDescriptorGet from \"./classApplyDescriptorGet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}","import checkPrivateRedeclaration from \"./checkPrivateRedeclaration.js\";\nexport default function _classPrivateFieldInitSpec(obj, privateMap, value) {\n  checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}","import classApplyDescriptorSet from \"./classApplyDescriptorSet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { assertNumber, Hash, toBytes, u32 } from './utils.js';\n// prettier-ignore\nexport const SIGMA = new Uint8Array([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n    // For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n]);\nexport class BLAKE2 extends Hash {\n    constructor(blockLen, outputLen, opts = {}, keyLen, saltLen, persLen) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.length = 0;\n        this.pos = 0;\n        this.finished = false;\n        this.destroyed = false;\n        assertNumber(blockLen);\n        assertNumber(outputLen);\n        assertNumber(keyLen);\n        if (outputLen < 0 || outputLen > keyLen)\n            throw new Error('Blake2: outputLen bigger than keyLen');\n        if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen))\n            throw new Error(`Key should be up 1..${keyLen} byte long or undefined`);\n        if (opts.salt !== undefined && opts.salt.length !== saltLen)\n            throw new Error(`Salt should be ${saltLen} byte long or undefined`);\n        if (opts.personalization !== undefined && opts.personalization.length !== persLen)\n            throw new Error(`Personalization should be ${persLen} byte long or undefined`);\n        this.buffer32 = u32((this.buffer = new Uint8Array(blockLen)));\n    }\n    update(data) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        // Main difference with other hashes: there is flag for last block,\n        // so we cannot process current block before we know that there\n        // is the next one. This significantly complicates logic and reduces ability\n        // to do zero-copy processing\n        const { finished, blockLen, buffer, buffer32 } = this;\n        if (finished)\n            throw new Error('digest() was already called');\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            // If buffer is full and we still have input (don't process last block, same as blake2s)\n            if (this.pos === blockLen) {\n                this.compress(buffer32, 0, false);\n                this.pos = 0;\n            }\n            const take = Math.min(blockLen - this.pos, len - pos);\n            const dataOffset = data.byteOffset + pos;\n            // full block && aligned to 4 bytes && not last in input\n            if (take === blockLen && !(dataOffset % 4) && pos + take < len) {\n                const data32 = new Uint32Array(data.buffer, dataOffset, Math.floor((len - pos) / 4));\n                for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {\n                    this.length += blockLen;\n                    this.compress(data32, pos32, false);\n                }\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            this.length += take;\n            pos += take;\n        }\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length < this.outputLen)\n            throw new Error('_Blake2: Invalid output buffer');\n        const { finished, pos, buffer32 } = this;\n        if (finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        // Padding\n        this.buffer.subarray(pos).fill(0);\n        this.compress(buffer32, 0, true);\n        const out32 = u32(out);\n        this.get().forEach((v, i) => (out32[i] = v));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        const { buffer, length, finished, destroyed, outputLen, pos } = this;\n        to || (to = new this.constructor({ dkLen: outputLen }));\n        to.set(...this.get());\n        to.length = length;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.outputLen = outputLen;\n        to.buffer.set(buffer);\n        to.pos = pos;\n        return to;\n    }\n}\n","import * as blake2 from './_blake2.js';\nimport * as u64 from './_u64.js';\nimport { toBytes, u32, wrapConstructorWithOpts } from './utils.js';\n// Same as SHA-512 but LE\n// prettier-ignore\nconst IV = new Uint32Array([\n    0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,\n    0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n]);\n// Temporary buffer\nconst BUF = new Uint32Array(32);\n// Mixing function G splitted in two halfs\nfunction G1(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore\n    let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore\n    let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore\n    let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 32)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotr32H(Dh, Dl), Dl: u64.rotr32L(Dh, Dl) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 24)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrSH(Bh, Bl, 24), Bl: u64.rotrSL(Bh, Bl, 24) });\n    (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);\n    (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);\n    (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);\n    (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);\n}\nfunction G2(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore\n    let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore\n    let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore\n    let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 16)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotrSH(Dh, Dl, 16), Dl: u64.rotrSL(Dh, Dl, 16) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 63)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrBH(Bh, Bl, 63), Bl: u64.rotrBL(Bh, Bl, 63) });\n    (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);\n    (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);\n    (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);\n    (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);\n}\nclass BLAKE2b extends blake2.BLAKE2 {\n    constructor(opts = {}) {\n        super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);\n        // Same as SHA-512, but LE\n        this.v0l = IV[0] | 0;\n        this.v0h = IV[1] | 0;\n        this.v1l = IV[2] | 0;\n        this.v1h = IV[3] | 0;\n        this.v2l = IV[4] | 0;\n        this.v2h = IV[5] | 0;\n        this.v3l = IV[6] | 0;\n        this.v3h = IV[7] | 0;\n        this.v4l = IV[8] | 0;\n        this.v4h = IV[9] | 0;\n        this.v5l = IV[10] | 0;\n        this.v5h = IV[11] | 0;\n        this.v6l = IV[12] | 0;\n        this.v6h = IV[13] | 0;\n        this.v7l = IV[14] | 0;\n        this.v7h = IV[15] | 0;\n        const keyLength = opts.key ? opts.key.length : 0;\n        this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n        if (opts.salt) {\n            const salt = u32(toBytes(opts.salt));\n            this.v4l ^= salt[0];\n            this.v4h ^= salt[1];\n            this.v5l ^= salt[2];\n            this.v5h ^= salt[3];\n        }\n        if (opts.personalization) {\n            const pers = u32(toBytes(opts.personalization));\n            this.v6l ^= pers[0];\n            this.v6h ^= pers[1];\n            this.v7l ^= pers[2];\n            this.v7h ^= pers[3];\n        }\n        if (opts.key) {\n            // Pad to blockLen and update\n            const tmp = new Uint8Array(this.blockLen);\n            tmp.set(toBytes(opts.key));\n            this.update(tmp);\n        }\n    }\n    // prettier-ignore\n    get() {\n        let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;\n        return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];\n    }\n    // prettier-ignore\n    set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {\n        this.v0l = v0l | 0;\n        this.v0h = v0h | 0;\n        this.v1l = v1l | 0;\n        this.v1h = v1h | 0;\n        this.v2l = v2l | 0;\n        this.v2h = v2h | 0;\n        this.v3l = v3l | 0;\n        this.v3h = v3h | 0;\n        this.v4l = v4l | 0;\n        this.v4h = v4h | 0;\n        this.v5l = v5l | 0;\n        this.v5h = v5h | 0;\n        this.v6l = v6l | 0;\n        this.v6h = v6h | 0;\n        this.v7l = v7l | 0;\n        this.v7h = v7h | 0;\n    }\n    compress(msg, offset, isLast) {\n        this.get().forEach((v, i) => (BUF[i] = v)); // First half from state.\n        BUF.set(IV, 16); // Second half from IV.\n        let { h, l } = u64.fromBig(BigInt(this.length));\n        BUF[24] = IV[8] ^ l; // Low word of the offset.\n        BUF[25] = IV[9] ^ h; // High word.\n        // Invert all bits for last block\n        if (isLast) {\n            BUF[28] = ~BUF[28];\n            BUF[29] = ~BUF[29];\n        }\n        let j = 0;\n        const s = blake2.SIGMA;\n        for (let i = 0; i < 12; i++) {\n            G1(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G2(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G1(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G2(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G1(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G2(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G1(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G2(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G1(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G2(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G1(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G2(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G1(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G2(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G1(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n            G2(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n        }\n        this.v0l ^= BUF[0] ^ BUF[16];\n        this.v0h ^= BUF[1] ^ BUF[17];\n        this.v1l ^= BUF[2] ^ BUF[18];\n        this.v1h ^= BUF[3] ^ BUF[19];\n        this.v2l ^= BUF[4] ^ BUF[20];\n        this.v2h ^= BUF[5] ^ BUF[21];\n        this.v3l ^= BUF[6] ^ BUF[22];\n        this.v3h ^= BUF[7] ^ BUF[23];\n        this.v4l ^= BUF[8] ^ BUF[24];\n        this.v4h ^= BUF[9] ^ BUF[25];\n        this.v5l ^= BUF[10] ^ BUF[26];\n        this.v5h ^= BUF[11] ^ BUF[27];\n        this.v6l ^= BUF[12] ^ BUF[28];\n        this.v6h ^= BUF[13] ^ BUF[29];\n        this.v7l ^= BUF[14] ^ BUF[30];\n        this.v7h ^= BUF[15] ^ BUF[31];\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer32.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/**\n * BLAKE2b - optimized for 64-bit platforms. JS doesn't have uint64, so it's slower than BLAKE2s.\n * @param msg - message that would be hashed\n * @param opts - dkLen, key, salt, personalization\n */\nexport const blake2b = wrapConstructorWithOpts((opts) => new BLAKE2b(opts));\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import * as u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, assertNumber, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assertNumber(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array))\n            throw new Error('Keccak: invalid output buffer');\n        this.finish();\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= this.blockLen)\n                this.keccak();\n            const take = Math.min(this.blockLen - this.posOut, len - pos);\n            out.set(this.state.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assertNumber(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        if (out.length < this.outputLen)\n            throw new Error('Keccak: invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finish();\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen !== undefined ? opts.dkLen : outputLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","// Copyright (C) 2021-2022 Parity Technologies (UK) Ltd.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// \thttp://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport default [\n\t{\n\t\t\"prefix\": 0,\n\t\t\"network\": \"polkadot\",\n\t\t\"displayName\": \"Polkadot Relay Chain\",\n\t\t\"symbols\": [\n\t\t\t\"DOT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadot.network\"\n\t},\n\t{\n\t\t\"prefix\": 1,\n\t\t\"network\": \"BareSr25519\",\n\t\t\"displayName\": \"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 2,\n\t\t\"network\": \"kusama\",\n\t\t\"displayName\": \"Kusama Relay Chain\",\n\t\t\"symbols\": [\n\t\t\t\"KSM\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kusama.network\"\n\t},\n\t{\n\t\t\"prefix\": 3,\n\t\t\"network\": \"BareEd25519\",\n\t\t\"displayName\": \"Bare 32-bit Ed25519 public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"Ed25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 4,\n\t\t\"network\": \"katalchain\",\n\t\t\"displayName\": \"Katal Chain\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 5,\n\t\t\"network\": \"astar\",\n\t\t\"displayName\": \"Astar Network\",\n\t\t\"symbols\": [\n\t\t\t\"ASTR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://astar.network\"\n\t},\n\t{\n\t\t\"prefix\": 6,\n\t\t\"network\": \"bifrost\",\n\t\t\"displayName\": \"Bifrost\",\n\t\t\"symbols\": [\n\t\t\t\"BNC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bifrost.finance/\"\n\t},\n\t{\n\t\t\"prefix\": 7,\n\t\t\"network\": \"edgeware\",\n\t\t\"displayName\": \"Edgeware\",\n\t\t\"symbols\": [\n\t\t\t\"EDG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://edgewa.re\"\n\t},\n\t{\n\t\t\"prefix\": 8,\n\t\t\"network\": \"karura\",\n\t\t\"displayName\": \"Karura\",\n\t\t\"symbols\": [\n\t\t\t\"KAR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://karura.network/\"\n\t},\n\t{\n\t\t\"prefix\": 9,\n\t\t\"network\": \"reynolds\",\n\t\t\"displayName\": \"Laminar Reynolds Canary\",\n\t\t\"symbols\": [\n\t\t\t\"REY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://laminar.network/\"\n\t},\n\t{\n\t\t\"prefix\": 10,\n\t\t\"network\": \"acala\",\n\t\t\"displayName\": \"Acala\",\n\t\t\"symbols\": [\n\t\t\t\"ACA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://acala.network/\"\n\t},\n\t{\n\t\t\"prefix\": 11,\n\t\t\"network\": \"laminar\",\n\t\t\"displayName\": \"Laminar\",\n\t\t\"symbols\": [\n\t\t\t\"LAMI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://laminar.network/\"\n\t},\n\t{\n\t\t\"prefix\": 12,\n\t\t\"network\": \"polymesh\",\n\t\t\"displayName\": \"Polymesh\",\n\t\t\"symbols\": [\n\t\t\t\"POLYX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polymath.network/\"\n\t},\n\t{\n\t\t\"prefix\": 13,\n\t\t\"network\": \"integritee\",\n\t\t\"displayName\": \"Integritee\",\n\t\t\"symbols\": [\n\t\t\t\"TEER\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://integritee.network\"\n\t},\n\t{\n\t\t\"prefix\": 14,\n\t\t\"network\": \"totem\",\n\t\t\"displayName\": \"Totem\",\n\t\t\"symbols\": [\n\t\t\t\"TOTEM\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t0\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://totemaccounting.com\"\n\t},\n\t{\n\t\t\"prefix\": 15,\n\t\t\"network\": \"synesthesia\",\n\t\t\"displayName\": \"Synesthesia\",\n\t\t\"symbols\": [\n\t\t\t\"SYN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://synesthesia.network/\"\n\t},\n\t{\n\t\t\"prefix\": 16,\n\t\t\"network\": \"kulupu\",\n\t\t\"displayName\": \"Kulupu\",\n\t\t\"symbols\": [\n\t\t\t\"KLP\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kulupu.network/\"\n\t},\n\t{\n\t\t\"prefix\": 17,\n\t\t\"network\": \"dark\",\n\t\t\"displayName\": \"Dark Mainnet\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 18,\n\t\t\"network\": \"darwinia\",\n\t\t\"displayName\": \"Darwinia Network\",\n\t\t\"symbols\": [\n\t\t\t\"RING\",\n\t\t\t\"KTON\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9,\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://darwinia.network/\"\n\t},\n\t{\n\t\t\"prefix\": 20,\n\t\t\"network\": \"stafi\",\n\t\t\"displayName\": \"Stafi\",\n\t\t\"symbols\": [\n\t\t\t\"FIS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://stafi.io\"\n\t},\n\t{\n\t\t\"prefix\": 21,\n\t\t\"network\": \"dock-testnet\",\n\t\t\"displayName\": \"Dock Testnet\",\n\t\t\"symbols\": [\n\t\t\t\"DCK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dock.io\"\n\t},\n\t{\n\t\t\"prefix\": 22,\n\t\t\"network\": \"dock-mainnet\",\n\t\t\"displayName\": \"Dock Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"DCK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dock.io\"\n\t},\n\t{\n\t\t\"prefix\": 23,\n\t\t\"network\": \"shift\",\n\t\t\"displayName\": \"ShiftNrg\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 24,\n\t\t\"network\": \"zero\",\n\t\t\"displayName\": \"ZERO\",\n\t\t\"symbols\": [\n\t\t\t\"ZERO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zero.io\"\n\t},\n\t{\n\t\t\"prefix\": 25,\n\t\t\"network\": \"zero-alphaville\",\n\t\t\"displayName\": \"ZERO Alphaville\",\n\t\t\"symbols\": [\n\t\t\t\"ZERO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zero.io\"\n\t},\n\t{\n\t\t\"prefix\": 26,\n\t\t\"network\": \"jupiter\",\n\t\t\"displayName\": \"Jupiter\",\n\t\t\"symbols\": [\n\t\t\t\"jDOT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://jupiter.patract.io\"\n\t},\n\t{\n\t\t\"prefix\": 27,\n\t\t\"network\": \"kabocha\",\n\t\t\"displayName\": \"Kabocha\",\n\t\t\"symbols\": [\n\t\t\t\"KAB\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kabocha.network\"\n\t},\n\t{\n\t\t\"prefix\": 28,\n\t\t\"network\": \"subsocial\",\n\t\t\"displayName\": \"Subsocial\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 29,\n\t\t\"network\": \"cord\",\n\t\t\"displayName\": \"CORD Network\",\n\t\t\"symbols\": [\n\t\t\t\"DHI\",\n\t\t\t\"WAY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cord.network/\"\n\t},\n\t{\n\t\t\"prefix\": 30,\n\t\t\"network\": \"phala\",\n\t\t\"displayName\": \"Phala Network\",\n\t\t\"symbols\": [\n\t\t\t\"PHA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://phala.network\"\n\t},\n\t{\n\t\t\"prefix\": 31,\n\t\t\"network\": \"litentry\",\n\t\t\"displayName\": \"Litentry Network\",\n\t\t\"symbols\": [\n\t\t\t\"LIT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://litentry.com/\"\n\t},\n\t{\n\t\t\"prefix\": 32,\n\t\t\"network\": \"robonomics\",\n\t\t\"displayName\": \"Robonomics\",\n\t\t\"symbols\": [\n\t\t\t\"XRT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://robonomics.network\"\n\t},\n\t{\n\t\t\"prefix\": 33,\n\t\t\"network\": \"datahighway\",\n\t\t\"displayName\": \"DataHighway\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 34,\n\t\t\"network\": \"ares\",\n\t\t\"displayName\": \"Ares Protocol\",\n\t\t\"symbols\": [\n\t\t\t\"ARES\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.aresprotocol.com/\"\n\t},\n\t{\n\t\t\"prefix\": 35,\n\t\t\"network\": \"vln\",\n\t\t\"displayName\": \"Valiu Liquidity Network\",\n\t\t\"symbols\": [\n\t\t\t\"USDv\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://valiu.com/\"\n\t},\n\t{\n\t\t\"prefix\": 36,\n\t\t\"network\": \"centrifuge\",\n\t\t\"displayName\": \"Centrifuge Chain\",\n\t\t\"symbols\": [\n\t\t\t\"CFG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://centrifuge.io/\"\n\t},\n\t{\n\t\t\"prefix\": 37,\n\t\t\"network\": \"nodle\",\n\t\t\"displayName\": \"Nodle Chain\",\n\t\t\"symbols\": [\n\t\t\t\"NODL\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://nodle.io/\"\n\t},\n\t{\n\t\t\"prefix\": 38,\n\t\t\"network\": \"kilt\",\n\t\t\"displayName\": \"KILT Chain\",\n\t\t\"symbols\": [\n\t\t\t\"KILT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kilt.io/\"\n\t},\n\t{\n\t\t\"prefix\": 39,\n\t\t\"network\": \"mathchain\",\n\t\t\"displayName\": \"MathChain mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"MATH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mathwallet.org\"\n\t},\n\t{\n\t\t\"prefix\": 40,\n\t\t\"network\": \"mathchain-testnet\",\n\t\t\"displayName\": \"MathChain testnet\",\n\t\t\"symbols\": [\n\t\t\t\"MATH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mathwallet.org\"\n\t},\n\t{\n\t\t\"prefix\": 41,\n\t\t\"network\": \"poli\",\n\t\t\"displayName\": \"Polimec Chain\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polimec.io/\"\n\t},\n\t{\n\t\t\"prefix\": 42,\n\t\t\"network\": \"substrate\",\n\t\t\"displayName\": \"Substrate\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://substrate.io/\"\n\t},\n\t{\n\t\t\"prefix\": 43,\n\t\t\"network\": \"BareSecp256k1\",\n\t\t\"displayName\": \"Bare 32-bit ECDSA SECP-256k1 public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 44,\n\t\t\"network\": \"chainx\",\n\t\t\"displayName\": \"ChainX\",\n\t\t\"symbols\": [\n\t\t\t\"PCX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t8\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://chainx.org/\"\n\t},\n\t{\n\t\t\"prefix\": 45,\n\t\t\"network\": \"uniarts\",\n\t\t\"displayName\": \"UniArts Network\",\n\t\t\"symbols\": [\n\t\t\t\"UART\",\n\t\t\t\"UINK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://uniarts.me\"\n\t},\n\t{\n\t\t\"prefix\": 46,\n\t\t\"network\": \"reserved46\",\n\t\t\"displayName\": \"This prefix is reserved.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": null,\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 47,\n\t\t\"network\": \"reserved47\",\n\t\t\"displayName\": \"This prefix is reserved.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": null,\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 48,\n\t\t\"network\": \"neatcoin\",\n\t\t\"displayName\": \"Neatcoin Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"NEAT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://neatcoin.org\"\n\t},\n\t{\n\t\t\"prefix\": 49,\n\t\t\"network\": \"picasso\",\n\t\t\"displayName\": \"Picasso\",\n\t\t\"symbols\": [\n\t\t\t\"PICA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://picasso.composable.finance\"\n\t},\n\t{\n\t\t\"prefix\": 50,\n\t\t\"network\": \"composable\",\n\t\t\"displayName\": \"Composable\",\n\t\t\"symbols\": [\n\t\t\t\"LAYR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://composable.finance\"\n\t},\n\t{\n\t\t\"prefix\": 51,\n\t\t\"network\": \"oak\",\n\t\t\"displayName\": \"OAK Network\",\n\t\t\"symbols\": [\n\t\t\t\"OAK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://oak.tech\"\n\t},\n\t{\n\t\t\"prefix\": 52,\n\t\t\"network\": \"KICO\",\n\t\t\"displayName\": \"KICO\",\n\t\t\"symbols\": [\n\t\t\t\"KICO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t14\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dico.io\"\n\t},\n\t{\n\t\t\"prefix\": 53,\n\t\t\"network\": \"DICO\",\n\t\t\"displayName\": \"DICO\",\n\t\t\"symbols\": [\n\t\t\t\"DICO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t14\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dico.io\"\n\t},\n\t{\n\t\t\"prefix\": 55,\n\t\t\"network\": \"xxnetwork\",\n\t\t\"displayName\": \"xx network\",\n\t\t\"symbols\": [\n\t\t\t\"XX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://xx.network\"\n\t},\n\t{\n\t\t\"prefix\": 63,\n\t\t\"network\": \"hydradx\",\n\t\t\"displayName\": \"HydraDX\",\n\t\t\"symbols\": [\n\t\t\t\"HDX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://hydradx.io\"\n\t},\n\t{\n\t\t\"prefix\": 65,\n\t\t\"network\": \"aventus\",\n\t\t\"displayName\": \"AvN Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"AVT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://aventus.io\"\n\t},\n\t{\n\t\t\"prefix\": 66,\n\t\t\"network\": \"crust\",\n\t\t\"displayName\": \"Crust Network\",\n\t\t\"symbols\": [\n\t\t\t\"CRU\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://crust.network\"\n\t},\n\t{\n\t\t\"prefix\": 67,\n\t\t\"network\": \"genshiro\",\n\t\t\"displayName\": \"Genshiro Network\",\n\t\t\"symbols\": [\n\t\t\t\"GENS\",\n\t\t\t\"EQD\",\n\t\t\t\"LPT0\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9,\n\t\t\t9,\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://genshiro.equilibrium.io\"\n\t},\n\t{\n\t\t\"prefix\": 68,\n\t\t\"network\": \"equilibrium\",\n\t\t\"displayName\": \"Equilibrium Network\",\n\t\t\"symbols\": [\n\t\t\t\"EQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://equilibrium.io\"\n\t},\n\t{\n\t\t\"prefix\": 69,\n\t\t\"network\": \"sora\",\n\t\t\"displayName\": \"SORA Network\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 73,\n\t\t\"network\": \"zeitgeist\",\n\t\t\"displayName\": \"Zeitgeist\",\n\t\t\"symbols\": [\n\t\t\t\"ZTG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zeitgeist.pm\"\n\t},\n\t{\n\t\t\"prefix\": 77,\n\t\t\"network\": \"manta\",\n\t\t\"displayName\": \"Manta network\",\n\t\t\"symbols\": [\n\t\t\t\"MANTA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://manta.network\"\n\t},\n\t{\n\t\t\"prefix\": 78,\n\t\t\"network\": \"calamari\",\n\t\t\"displayName\": \"Calamari: Manta Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"KMA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://manta.network\"\n\t},\n\t{\n\t\t\"prefix\": 88,\n\t\t\"network\": \"polkadex\",\n\t\t\"displayName\": \"Polkadex Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"PDEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadex.trade\"\n\t},\n\t{\n\t\t\"prefix\": 98,\n\t\t\"network\": \"polkasmith\",\n\t\t\"displayName\": \"PolkaSmith Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"PKS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkafoundry.com\"\n\t},\n\t{\n\t\t\"prefix\": 99,\n\t\t\"network\": \"polkafoundry\",\n\t\t\"displayName\": \"PolkaFoundry Network\",\n\t\t\"symbols\": [\n\t\t\t\"PKF\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkafoundry.com\"\n\t},\n\t{\n\t\t\"prefix\": 101,\n\t\t\"network\": \"origintrail-parachain\",\n\t\t\"displayName\": \"OriginTrail Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"TRAC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://origintrail.io\"\n\t},\n\t{\n\t\t\"prefix\": 105,\n\t\t\"network\": \"pontem-network\",\n\t\t\"displayName\": \"Pontem Network\",\n\t\t\"symbols\": [\n\t\t\t\"PONT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pontem.network\"\n\t},\n\t{\n\t\t\"prefix\": 110,\n\t\t\"network\": \"heiko\",\n\t\t\"displayName\": \"Heiko\",\n\t\t\"symbols\": [\n\t\t\t\"HKO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parallel.fi/\"\n\t},\n\t{\n\t\t\"prefix\": 113,\n\t\t\"network\": \"integritee-incognito\",\n\t\t\"displayName\": \"Integritee Incognito\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://integritee.network\"\n\t},\n\t{\n\t\t\"prefix\": 128,\n\t\t\"network\": \"clover\",\n\t\t\"displayName\": \"Clover Finance\",\n\t\t\"symbols\": [\n\t\t\t\"CLV\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://clover.finance\"\n\t},\n\t{\n\t\t\"prefix\": 131,\n\t\t\"network\": \"litmus\",\n\t\t\"displayName\": \"Litmus Network\",\n\t\t\"symbols\": [\n\t\t\t\"LIT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://litentry.com/\"\n\t},\n\t{\n\t\t\"prefix\": 136,\n\t\t\"network\": \"altair\",\n\t\t\"displayName\": \"Altair\",\n\t\t\"symbols\": [\n\t\t\t\"AIR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://centrifuge.io/\"\n\t},\n\t{\n\t\t\"prefix\": 172,\n\t\t\"network\": \"parallel\",\n\t\t\"displayName\": \"Parallel\",\n\t\t\"symbols\": [\n\t\t\t\"PARA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parallel.fi/\"\n\t},\n\t{\n\t\t\"prefix\": 252,\n\t\t\"network\": \"social-network\",\n\t\t\"displayName\": \"Social Network\",\n\t\t\"symbols\": [\n\t\t\t\"NET\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://social.network\"\n\t},\n\t{\n\t\t\"prefix\": 255,\n\t\t\"network\": \"quartz_mainnet\",\n\t\t\"displayName\": \"QUARTZ by UNIQUE\",\n\t\t\"symbols\": [\n\t\t\t\"QTZ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 268,\n\t\t\"network\": \"pioneer_network\",\n\t\t\"displayName\": \"Pioneer Network by Bit.Country\",\n\t\t\"symbols\": [\n\t\t\t\"NEER\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bit.country\"\n\t},\n\t{\n\t\t\"prefix\": 420,\n\t\t\"network\": \"sora_kusama_para\",\n\t\t\"displayName\": \"SORA Kusama Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 789,\n\t\t\"network\": \"geek\",\n\t\t\"displayName\": \"GEEK Network\",\n\t\t\"symbols\": [\n\t\t\t\"GEEK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://geek.gl\"\n\t},\n\t{\n\t\t\"prefix\": 1110,\n\t\t\"network\": \"efinity\",\n\t\t\"displayName\": \"Efinity\",\n\t\t\"symbols\": [\n\t\t\t\"EFI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://efinity.io/\"\n\t},\n\t{\n\t\t\"prefix\": 1284,\n\t\t\"network\": \"moonbeam\",\n\t\t\"displayName\": \"Moonbeam\",\n\t\t\"symbols\": [\n\t\t\t\"GLMR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonbeam.network\"\n\t},\n\t{\n\t\t\"prefix\": 1285,\n\t\t\"network\": \"moonriver\",\n\t\t\"displayName\": \"Moonriver\",\n\t\t\"symbols\": [\n\t\t\t\"MOVR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonbeam.network\"\n\t},\n\t{\n\t\t\"prefix\": 1337,\n\t\t\"network\": \"ajuna\",\n\t\t\"displayName\": \"Ajuna Network\",\n\t\t\"symbols\": [\n\t\t\t\"AJUN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://ajuna.io\"\n\t},\n\t{\n\t\t\"prefix\": 2007,\n\t\t\"network\": \"kapex\",\n\t\t\"displayName\": \"Kapex\",\n\t\t\"symbols\": [\n\t\t\t\"KAPEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://totemaccounting.com\"\n\t},\n\t{\n\t\t\"prefix\": 2032,\n\t\t\"network\": \"interlay\",\n\t\t\"displayName\": \"Interlay\",\n\t\t\"symbols\": [\n\t\t\t\"INTR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://interlay.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2092,\n\t\t\"network\": \"kintsugi\",\n\t\t\"displayName\": \"Kintsugi\",\n\t\t\"symbols\": [\n\t\t\t\"KINT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://interlay.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2254,\n\t\t\"network\": \"subspace_testnet\",\n\t\t\"displayName\": \"Subspace testnet\",\n\t\t\"symbols\": [\n\t\t\t\"tSSC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://subspace.network\"\n\t},\n\t{\n\t\t\"prefix\": 6094,\n\t\t\"network\": \"subspace\",\n\t\t\"displayName\": \"Subspace\",\n\t\t\"symbols\": [\n\t\t\t\"SSC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://subspace.network\"\n\t},\n\t{\n\t\t\"prefix\": 7391,\n\t\t\"network\": \"unique_mainnet\",\n\t\t\"displayName\": \"Unique Network\",\n\t\t\"symbols\": [\n\t\t\t\"UNQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 10041,\n\t\t\"network\": \"basilisk\",\n\t\t\"displayName\": \"Basilisk\",\n\t\t\"symbols\": [\n\t\t\t\"BSX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bsx.fi\"\n\t},\n\t{\n\t\t\"prefix\": 11330,\n\t\t\"network\": \"cess-testnet\",\n\t\t\"displayName\": \"CESS Testnet\",\n\t\t\"symbols\": [\n\t\t\t\"TCESS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cess.cloud\"\n\t},\n\t{\n\t\t\"prefix\": 11331,\n\t\t\"network\": \"cess\",\n\t\t\"displayName\": \"CESS\",\n\t\t\"symbols\": [\n\t\t\t\"CESS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cess.cloud\"\n\t},\n\t{\n\t\t\"prefix\": 11820,\n\t\t\"network\": \"contextfree\",\n\t\t\"displayName\": \"Automata ContextFree\",\n\t\t\"symbols\": [\n\t\t\t\"CTX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ata.network\"\n\t}\n];\n","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// These match up with the keys of the ledgerApps object in the @polkadot/hw-ledger/defaults.ts\n// and maps to the known slip44 (minus the `0x8` hard derivation flag)\n//\n// NOTE: Any network here needs to have a genesisHash attached in the ./genesis.ts config\nexport const knownLedger = {\n  bifrost: 0x00000314,\n  centrifuge: 0x000002eb,\n  'dock-mainnet': 0x00000252,\n  edgeware: 0x0000020b,\n  equilibrium: 0x05f5e0fd,\n  genshiro: 0x05f5e0fc,\n  kusama: 0x000001b2,\n  'nodle-chain': 0x000003eb,\n  polkadot: 0x00000162,\n  polymesh: 0x00000253,\n  sora: 0x00000269,\n  statemine: 0x000001b2,\n  // common-good on Kusama, shares derivation\n  statemint: 0x00000162,\n  // common-good on Polkadot, shares derivation\n  xxnetwork: 0x000007a3\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// NOTE: In the case where the network was hard-spooned and multiple genesisHashes\n// are provided, it needs to be in reverse order, i.e. most-recent first, oldest\n// last. This make lookups for the current a simple genesisHash[0]\n// (See Kusama as an example)\nexport const knownGenesis = {\n  acala: ['0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c'],\n  astar: ['0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6'],\n  basilisk: ['0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755'],\n  bifrost: ['0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed'],\n  centrifuge: ['0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5'],\n  'dock-mainnet': ['0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae', '0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9'],\n  edgeware: ['0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b'],\n  equilibrium: ['0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925'],\n  genshiro: ['0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243'],\n  hydradx: ['0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc', // Snakenet Gen3-1\n  '0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9', // Snakenet Gen3\n  '0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047', // Snakenet Gen2\n  '0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2' // Snakenet Gen1\n  ],\n  karura: ['0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b'],\n  kulupu: ['0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba'],\n  kusama: ['0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe', // Kusama CC3,\n  '0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636', // Kusama CC2\n  '0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf' // Kusama CC1\n  ],\n  'nodle-chain': ['0xa3d114c2b8d0627c1aa9b134eafcf7d05ca561fdc19fb388bb9457f81809fb23'],\n  picasso: ['0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c'],\n  polkadot: ['0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3'],\n  polymesh: ['0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063'],\n  rococo: ['0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e', '0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897', '0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770', '0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff', '0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a', '0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9', '0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779', '0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215', '0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9', '0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147', '0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd', '0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299'],\n  sora: ['0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5'],\n  stafi: ['0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80'],\n  statemine: ['0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a'],\n  statemint: ['0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f'],\n  subsocial: ['0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8'],\n  westend: ['0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e'],\n  xxnetwork: ['0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa']\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// these are icon overrides\nexport const knownIcon = {\n  centrifuge: 'polkadot',\n  kusama: 'polkadot',\n  polkadot: 'polkadot',\n  sora: 'polkadot',\n  statemine: 'polkadot',\n  statemint: 'polkadot',\n  westmint: 'polkadot'\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// testnets should not allow selection\nexport const knownTestnet = {\n  '': true,\n  // this is the default non-network entry\n  'cess-testnet': true,\n  'dock-testnet': true,\n  jupiter: true,\n  'mathchain-testnet': true,\n  subspace_testnet: true,\n  'zero-alphaville': true\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport knownSubstrate from '@substrate/ss58-registry';\nimport { knownGenesis, knownIcon, knownLedger, knownTestnet } from \"./defaults/index.js\"; // These are known prefixes that are not sorted\n\nconst UNSORTED = [0, 2, 42];\nconst TESTNETS = ['testnet'];\n\nfunction toExpanded(o) {\n  const network = o.network || '';\n  const nameParts = network.replace(/_/g, '-').split('-');\n  const n = o; // ledger additions\n\n  n.slip44 = knownLedger[network];\n  n.hasLedgerSupport = !!n.slip44; // general items\n\n  n.genesisHash = knownGenesis[network] || [];\n  n.icon = knownIcon[network] || 'substrate'; // filtering\n\n  n.isTestnet = !!knownTestnet[network] || TESTNETS.includes(nameParts[nameParts.length - 1]);\n  n.isIgnored = n.isTestnet || !(o.standardAccount && o.decimals && o.decimals.length && o.symbols && o.symbols.length) && o.prefix !== 42;\n  return n;\n}\n\nfunction filterSelectable({\n  genesisHash,\n  prefix\n}) {\n  return !!genesisHash.length || prefix === 42;\n}\n\nfunction filterAvailable(n) {\n  return !n.isIgnored && !!n.network;\n}\n\nfunction sortNetworks(a, b) {\n  const isUnSortedA = UNSORTED.includes(a.prefix);\n  const isUnSortedB = UNSORTED.includes(b.prefix);\n  return isUnSortedA === isUnSortedB ? isUnSortedA ? 0 : a.displayName.localeCompare(b.displayName) : isUnSortedA ? -1 : 1;\n} // This is all the Substrate networks with our additional information\n\n\nexport const allNetworks = knownSubstrate.map(toExpanded); // The list of available/claimed prefixes\n//   - no testnets\n//   - we only include those where we have a standardAccount\n//   - sort by name, however we keep 0, 2, 42 first in the list\n\nexport const availableNetworks = allNetworks.filter(filterAvailable).sort(sortNetworks); // A filtered list of those chains we have details about (genesisHashes)\n\nexport const selectableNetworks = availableNetworks.filter(filterSelectable);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNumber } from \"../is/number.js\";\nimport { objectSpread } from \"../object/spread.js\";\nimport { u8aToHex } from \"../u8a/index.js\";\nimport { bnToU8a } from \"./toU8a.js\";\nconst ZERO_STR = '0x00';\nconst DEFAULT_OPTS = {\n  bitLength: -1,\n  isLe: false,\n  isNegative: false\n};\n/**\n * @name bnToHex\n * @summary Creates a hex value from a BN.js bignumber object.\n * @description\n * `null` inputs returns a `0x` result, BN values return the actual value as a `0x` prefixed hex value. Anything that is not a BN object throws an error. With `bitLength` set, it fixes the number to the specified length.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnToHex } from '@polkadot/util';\n *\n * bnToHex(new BN(0x123456)); // => '0x123456'\n * ```\n */\n\nfunction bnToHex(value, arg1 = DEFAULT_OPTS, arg2) {\n  return !value ? ZERO_STR : u8aToHex(bnToU8a(value, objectSpread( // We spread here, the default for hex values is BE (JSONRPC via substrate)\n  {\n    isLe: false,\n    isNegative: false\n  }, isNumber(arg1) ? {\n    bitLength: arg1,\n    isLe: arg2\n  } : arg1)));\n}\n\nexport { bnToHex };","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, BN, BN_BILLION, BN_HUNDRED, BN_MILLION, BN_QUINTILL, BN_ZERO, bnToBn, bnToHex, bnToU8a, formatBalance, formatNumber, hexToBn, isBn, isHex, isNumber, isString, isU8a, u8aToBn } from '@polkadot/util';\nexport const DEFAULT_UINT_BITS = 64; // Maximum allowed integer for JS is 2^53 - 1, set limit at 52\n// In this case however, we always print any >32 as hex\n\nconst MAX_NUMBER_BITS = 52;\nconst MUL_P = new BN(10000);\nconst FORMATTERS = [['Perquintill', BN_QUINTILL], ['Perbill', BN_BILLION], ['Permill', BN_MILLION], ['Percent', BN_HUNDRED]];\n\nfunction toPercentage(value, divisor) {\n  return `${(value.mul(MUL_P).div(divisor).toNumber() / 100).toFixed(2)}%`;\n}\n/** @internal */\n\n\nfunction decodeAbstractInt(value, bitLength, isNegative) {\n  if (isU8a(value)) {\n    return u8aToBn(value.subarray(0, bitLength / 8), {\n      isLe: true,\n      isNegative\n    }).toString();\n  } else if (isBn(value)) {\n    return value.toString();\n  } else if (isHex(value, -1, true)) {\n    return hexToBn(value, {\n      isLe: false,\n      isNegative\n    }).toString();\n  } else if (isNumber(value)) {\n    assert(value <= Number.MAX_SAFE_INTEGER && value >= Number.MIN_SAFE_INTEGER && Math.floor(value) === value, 'Number needs to be an integer <= Number.MAX_SAFE_INTEGER, i.e. 2 ^ 53 - 1');\n  } else if (isString(value)) {\n    assert(!(value.includes('.') || value.includes(',') || value.includes('e')), 'String should not contain decimal points or scientific notation');\n  }\n\n  return bnToBn(value).toString();\n}\n/**\n * @name AbstractInt\n * @ignore\n * @noInheritDoc\n */\n\n\nexport class AbstractInt extends BN {\n  #bitLength;\n  #isSigned;\n\n  constructor(registry, value = 0, bitLength = DEFAULT_UINT_BITS, isSigned = false) {\n    // Construct via a string, which will be passed in the BN constructor.\n    // It would be ideal to actually return a BN, but there is an issue:\n    // https://github.com/indutny/bn.js/issues/206\n    super( // shortcut isU8a as used in SCALE decoding\n    isU8a(value) ? u8aToBn(value.subarray(0, bitLength / 8), {\n      isLe: true,\n      isNegative: isSigned\n    }).toString() : decodeAbstractInt(value, bitLength, isSigned));\n    this.registry = registry;\n    this.#bitLength = bitLength;\n    this.encodedLength = this.#bitLength / 8;\n    this.#isSigned = isSigned;\n    const isPositive = this.gte(BN_ZERO);\n    const maxBits = bitLength - (isSigned && isPositive ? 1 : 0);\n    assert(isSigned || isPositive, () => `${this.toRawType()}: Negative number passed to unsigned type`);\n    assert(super.bitLength() <= maxBits, () => `${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${maxBits}`);\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is a zero value (align elsewhere)\n   */\n\n\n  get isEmpty() {\n    return this.isZero();\n  }\n  /**\n   * @description Checks if the value is an unsigned type\n   */\n\n\n  get isUnsigned() {\n    return !this.#isSigned;\n  }\n  /**\n   * @description Returns the number of bits in the value\n   */\n\n\n  bitLength() {\n    return this.#bitLength;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  eq(other) {\n    // Here we are actually overriding the built-in .eq to take care of both\n    // number and BN inputs (no `.eqn` needed) - numbers will be converted\n    return super.eq(isHex(other) ? hexToBn(other.toString(), {\n      isLe: false,\n      isNegative: this.#isSigned\n    }) : bnToBn(other));\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description True if this value is the max of the type\n   */\n\n\n  isMax() {\n    const u8a = this.toU8a().filter(b => b === 0xff);\n    return u8a.length === this.#bitLength / 8;\n  }\n  /**\n   * @description Returns a BigInt representation of the number\n   */\n\n\n  toBigInt() {\n    return BigInt(this.toString());\n  }\n  /**\n   * @description Returns the BN representation of the number. (Compatibility)\n   */\n\n\n  toBn() {\n    return this;\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex(isLe = false) {\n    // For display/JSON, this is BE, for compare, use isLe\n    return bnToHex(this, {\n      bitLength: this.bitLength(),\n      isLe,\n      isNegative: !this.isUnsigned\n    });\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toHuman(isExpanded) {\n    const rawType = this.toRawType();\n\n    if (rawType === 'Balance') {\n      return this.isMax() ? 'everything' // FIXME In the case of multiples we need some way of detecting which instance this belongs\n      // to. as it stands we will always format (incorrectly) against the first token defined\n      : formatBalance(this, {\n        decimals: this.registry.chainDecimals[0],\n        withSi: true,\n        withUnit: this.registry.chainTokens[0]\n      });\n    }\n\n    const [, divisor] = FORMATTERS.find(([type]) => type === rawType) || [];\n    return divisor ? toPercentage(this, divisor) : formatNumber(this);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON(onlyHex = false) {\n    // FIXME this return type should by string | number, however BN returns string\n    // Options here are\n    //   - super.bitLength() - the actual used bits\n    //   - this.#bitLength - the type bits (this should be used, however contracts RPC is problematic)\n    return onlyHex || super.bitLength() > MAX_NUMBER_BITS ? this.toHex() : this.toNumber();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    // NOTE In the case of balances, which have a special meaning on the UI\n    // and can be interpreted differently, return a specific value for it so\n    // underlying it always matches (no matter which length it actually is)\n    return this instanceof this.registry.createClassUnsafe('Balance') ? 'Balance' : `${this.isUnsigned ? 'u' : 'i'}${this.bitLength()}`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   * @param base The base to use for the conversion\n   */\n\n\n  toString(base) {\n    // only included here since we do not inherit docs\n    return super.toString(base);\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return bnToU8a(this, {\n      bitLength: this.bitLength(),\n      isLe: true,\n      isNegative: !this.isUnsigned\n    });\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractInt } from \"../abstract/AbstractInt.js\";\n/**\n * @name UInt\n * @description\n * A generic unsigned integer codec. For Substrate all numbers are Little Endian encoded,\n * this handles the encoding and decoding of those numbers. Upon construction\n * the bitLength is provided and any additional use keeps the number to this\n * length. This extends `BN`, so all methods available on a normal `BN` object\n * is available here.\n * @noInheritDoc\n */\n\nexport class UInt extends AbstractInt {\n  static with(bitLength, typeName) {\n    return class extends UInt {\n      constructor(registry, value) {\n        super(registry, value, bitLength);\n      }\n\n      toRawType() {\n        return typeName || super.toRawType();\n      }\n\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, compactAddLength, compactFromU8a, compactToU8a, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from \"../native/Raw.js\"; // Bytes are used for things like on-chain code, so it has a healthy limit\n\nconst MAX_LENGTH = 10 * 1024 * 1024;\n/** @internal */\n\nfunction decodeBytesU8a(value) {\n  if (!value.length) {\n    return [new Uint8Array(), 0];\n  } // handle all other Uint8Array inputs, these do have a length prefix\n\n\n  const [offset, length] = compactFromU8a(value);\n  const total = offset + length.toNumber();\n  assert(length.lten(MAX_LENGTH), () => `Bytes length ${length.toString()} exceeds ${MAX_LENGTH}`);\n  assert(total <= value.length, () => `Bytes: required length less than remainder, expected at least ${total}, found ${value.length}`);\n  return [value.subarray(offset, total), total];\n}\n/** @internal */\n\n\nfunction decodeBytes(value) {\n  if (Array.isArray(value) || isString(value)) {\n    return [u8aToU8a(value), 0];\n  } else if (!(value instanceof Raw) && isU8a(value)) {\n    // We are ensuring we are not a Raw instance. In the case of a Raw we already have gotten\n    // rid of the length, i.e. new Bytes(new Bytes(...)) will work as expected\n    return decodeBytesU8a(value);\n  }\n\n  return [value, 0];\n}\n/**\n * @name Bytes\n * @description\n * A Bytes wrapper for Vec<u8>. The significant difference between this and a normal Uint8Array\n * is that this version allows for length-encoding. (i.e. it is a variable-item codec, the same\n * as what is found in [[Text]] and [[Vec]])\n */\n\n\nexport class Bytes extends Raw {\n  constructor(registry, value) {\n    const [u8a, decodedLength] = decodeBytes(value);\n    super(registry, u8a, decodedLength);\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.length + compactToU8a(this.length).length;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const clength = compactToU8a(this.length);\n    return {\n      outer: this.length ? [clength, super.toU8a()] : [clength]\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Bytes';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return isBare ? super.toU8a(isBare) : compactAddLength(this);\n  }\n\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from \"../u8a/toU8a.js\";\nimport { isHex } from \"./hex.js\";\nimport { isString } from \"./string.js\";\nconst FORMAT = [9, 10, 13];\n/** @internal */\n\nfunction isAsciiByte(b) {\n  return b < 127 && (b >= 32 || FORMAT.includes(b));\n}\n\nfunction isAsciiChar(s) {\n  return isAsciiByte(s.charCodeAt(0));\n}\n/**\n * @name isAscii\n * @summary Tests if the input is printable ASCII\n * @description\n * Checks to see if the input string or Uint8Array is printable ASCII, 32-127 + formatters\n */\n\n\nexport function isAscii(value) {\n  const isStringIn = isString(value);\n\n  if (value) {\n    return isStringIn && !isHex(value) ? value.toString().split('').every(isAsciiChar) : u8aToU8a(value).every(isAsciiByte);\n  }\n\n  return isStringIn;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isAscii, isUndefined, isUtf8, u8aToHex, u8aToString, u8aToU8a } from '@polkadot/util';\n/**\n * @name Raw\n * @description\n * A basic wrapper around Uint8Array, with no frills and no fuss. It does differ\n * from other implementations where it will consume the full Uint8Array as passed to it.\n * As such it is meant to be subclassed where the wrapper takes care of the\n * actual lengths instead of used directly.\n * @noInheritDoc\n */\n\nexport class Raw extends Uint8Array {\n  constructor(registry, value, initialU8aLength) {\n    super(u8aToU8a(value));\n    this.registry = registry;\n    this.initialU8aLength = initialU8aLength;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.length;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Returns true if the wrapped value contains only ASCII printable characters\n   */\n\n\n  get isAscii() {\n    return isAscii(this);\n  }\n  /**\n   * @description Returns true if the type wraps an empty/default all-0 value\n   */\n\n\n  get isEmpty() {\n    return !this.length || isUndefined(this.find(b => !!b));\n  }\n  /**\n   * @description Returns true if the wrapped value contains only utf8 characters\n   */\n\n\n  get isUtf8() {\n    return isUtf8(this);\n  }\n  /**\n   * @description The length of the value\n   */\n\n\n  get length() {\n    // only included here since we ignore inherited docs\n    return super.length;\n  }\n  /**\n   * @description Returns the number of bits in the value\n   */\n\n\n  bitLength() {\n    return this.length * 8;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    if (other instanceof Uint8Array) {\n      return this.length === other.length && !this.some((b, index) => b !== other[index]);\n    }\n\n    return this.eq(u8aToU8a(other));\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description Create a new slice from the actual buffer. (compat)\n   * @param start The position to start at\n   * @param end The position to end at\n   */\n\n\n  slice(start, end) {\n    // Like subarray below, we have to follow this approach since we are extending the TypeArray.\n    // This happens especially when it comes to further extensions, the length may be an override\n    return Uint8Array.from(this).slice(start, end);\n  }\n  /**\n   * @description Create a new subarray from the actual buffer. (compat)\n   * @param begin The position to start at\n   * @param end The position to end at\n   */\n\n\n  subarray(begin, end) {\n    return Uint8Array.from(this).subarray(begin, end);\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this);\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    if (this.isAscii) {\n      const text = this.toUtf8(); // ensure we didn't end up with multibyte codepoints\n\n      if (isAscii(text)) {\n        return text;\n      }\n    }\n\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toHex();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Raw';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.toHex();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return Uint8Array.from(this);\n  }\n  /**\n   * @description Returns the wrapped data as a UTF-8 string\n   */\n\n\n  toUtf8() {\n    assert(this.isUtf8, 'The character sequence is not a valid Utf8 string');\n    return u8aToString(this);\n  }\n\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Adapted from https://github.com/JulienPalard/is_utf8/blob/master/is_utf8.c\nimport { u8aToU8a } from \"../u8a/toU8a.js\";\nimport { isString } from \"./string.js\";\n/**\n * @name isUtf8\n * @summary Tests if the input is valid Utf8\n * @description\n * Checks to see if the input string or Uint8Array is valid Utf8\n */\n\nexport function isUtf8(value) {\n  if (!value) {\n    return isString(value);\n  }\n\n  const u8a = u8aToU8a(value);\n  const len = u8a.length;\n  let i = 0;\n\n  while (i < len) {\n    if (u8a[i] <= 0x7F)\n      /* 00..7F */\n      {\n        i += 1;\n      } else if (u8a[i] >= 0xC2 && u8a[i] <= 0xDF)\n      /* C2..DF 80..BF */\n      {\n        if (i + 1 < len)\n          /* Expect a 2nd byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte between C2 and DF, expecting a 2nd byte between 80 and BF\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte between C2 and DF, expecting a 2nd byte.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 2;\n      } else if (u8a[i] === 0xE0)\n      /* E0 A0..BF 80..BF */\n      {\n        if (i + 2 < len)\n          /* Expect a 2nd and 3rd byte */\n          {\n            if (u8a[i + 1] < 0xA0 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte of E0, expecting a 2nd byte between A0 and BF.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte of E0, expecting a 3nd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte of E0, expecting two following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 3;\n      } else if (u8a[i] >= 0xE1 && u8a[i] <= 0xEC)\n      /* E1..EC 80..BF 80..BF */\n      {\n        if (i + 2 < len)\n          /* Expect a 2nd and 3rd byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte between E1 and EC, expecting the 2nd byte between 80 and BF.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte between E1 and EC, expecting the 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte between E1 and EC, expecting two following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 3;\n      } else if (u8a[i] === 0xED)\n      /* ED 80..9F 80..BF */\n      {\n        if (i + 2 < len)\n          /* Expect a 2nd and 3rd byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x9F) {\n              // *message = \"After a first byte of ED, expecting 2nd byte between 80 and 9F.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte of ED, expecting 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte of ED, expecting two following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 3;\n      } else if (u8a[i] >= 0xEE && u8a[i] <= 0xEF)\n      /* EE..EF 80..BF 80..BF */\n      {\n        if (i + 2 < len)\n          /* Expect a 2nd and 3rd byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte between EE and EF, expecting 2nd byte between 80 and BF.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte between EE and EF, expecting 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte between EE and EF, two following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 3;\n      } else if (u8a[i] === 0xF0)\n      /* F0 90..BF 80..BF 80..BF */\n      {\n        if (i + 3 < len)\n          /* Expect a 2nd, 3rd 3th byte */\n          {\n            if (u8a[i + 1] < 0x90 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte of F0, expecting 2nd byte between 90 and BF.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte of F0, expecting 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n\n            if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {\n              // *message = \"After a first byte of F0, expecting 4th byte between 80 and BF.\";\n              // *faulty_bytes = 4;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte of F0, expecting three following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 4;\n      } else if (u8a[i] >= 0xF1 && u8a[i] <= 0xF3)\n      /* F1..F3 80..BF 80..BF 80..BF */\n      {\n        if (i + 3 < len)\n          /* Expect a 2nd, 3rd 3th byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte of F1, F2, or F3, expecting a 2nd byte between 80 and BF.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte of F1, F2, or F3, expecting a 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n\n            if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {\n              // *message = \"After a first byte of F1, F2, or F3, expecting a 4th byte between 80 and BF.\";\n              // *faulty_bytes = 4;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte of F1, F2, or F3, expecting three following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 4;\n      } else if (u8a[i] === 0xF4)\n      /* F4 80..8F 80..BF 80..BF */\n      {\n        if (i + 3 < len)\n          /* Expect a 2nd, 3rd 3th byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x8F) {\n              // *message = \"After a first byte of F4, expecting 2nd byte between 80 and 8F.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte of F4, expecting 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n\n            if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {\n              // *message = \"After a first byte of F4, expecting 4th byte between 80 and BF.\";\n              // *faulty_bytes = 4;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte of F4, expecting three following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 4;\n      } else {\n      // *message = \"Expecting bytes in the following ranges: 00..7F C2..F4.\";\n      // *faulty_bytes = 1;\n      return false;\n    }\n  }\n\n  return true;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isBoolean, isFunction, isHex, isObject, isU8a, isUndefined, objectProperties, stringCamelCase, stringify, u8aConcat, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { compareMap, decodeU8a, mapToTypeMap, typesToMap } from \"../utils/index.js\";\n\n/** @internal */\nfunction decodeStructFromObject(registry, Types, value, jsonMap) {\n  let jsonObj;\n  const inputKeys = Object.keys(Types);\n  const typeofArray = Array.isArray(value);\n  const typeofMap = value instanceof Map;\n  assert(typeofArray || typeofMap || isObject(value), () => `Struct: Cannot decode value ${stringify(value)} (typeof ${typeof value}), expected an input object, map or array`);\n  assert(!typeofArray || value.length === inputKeys.length, () => `Struct: Unable to map ${stringify(value)} array to object with known keys ${inputKeys.join(', ')}`);\n  const raw = new Array(inputKeys.length);\n\n  for (let i = 0; i < inputKeys.length; i++) {\n    const key = inputKeys[i];\n    const jsonKey = jsonMap.get(key) || key;\n    const Type = Types[key];\n    let assign;\n\n    try {\n      if (typeofArray) {\n        assign = value[i];\n      } else if (typeofMap) {\n        assign = jsonKey && value.get(jsonKey);\n      } else {\n        assign = jsonKey && value[jsonKey];\n\n        if (isUndefined(assign)) {\n          if (isUndefined(jsonObj)) {\n            const entries = Object.entries(value);\n            jsonObj = {};\n\n            for (let e = 0; e < entries.length; e++) {\n              jsonObj[stringCamelCase(entries[e][0])] = entries[e][1];\n            }\n          }\n\n          assign = jsonKey && jsonObj[jsonKey];\n        }\n      }\n\n      raw[i] = [key, assign instanceof Type ? assign : new Type(registry, assign)];\n    } catch (error) {\n      let type = Type.name;\n\n      try {\n        type = new Type(registry).toRawType();\n      } catch (error) {// ignore\n      }\n\n      throw new Error(`Struct: failed on ${jsonKey}: ${type}:: ${error.message}`);\n    }\n  }\n\n  return [raw, 0];\n}\n/**\n * @name Struct\n * @description\n * A Struct defines an Object with key-value pairs - where the values are Codec values. It removes\n * a lot of repetition from the actual coding, define a structure type, pass it the key/Codec\n * values in the constructor and it manages the decoding. It is important that the constructor\n * values matches 100% to the order in th Rust code, i.e. don't go crazy and make it alphabetical,\n * it needs to decoded in the specific defined order.\n * @noInheritDoc\n */\n\n\nexport class Struct extends Map {\n  #registry;\n  #jsonMap;\n  #Types;\n\n  constructor(registry, Types, value, jsonMap = new Map()) {\n    const typeMap = mapToTypeMap(registry, Types);\n    const [decoded, decodedLength] = isU8a(value) ? decodeU8a(registry, value, typeMap, true) : isHex(value) ? decodeU8a(registry, u8aToU8a(value), typeMap, true) : value instanceof Struct ? [value, 0] : decodeStructFromObject(registry, typeMap, value || {}, jsonMap);\n    super(decoded);\n    this.#registry = registry;\n    this.initialU8aLength = decodedLength;\n    this.#jsonMap = jsonMap;\n    this.#Types = typeMap;\n  }\n\n  static with(Types, jsonMap) {\n    const keys = Object.keys(Types);\n    return class extends Struct {\n      constructor(registry, value) {\n        super(registry, Types, value, jsonMap);\n        objectProperties(this, keys, k => this.get(k));\n      }\n\n    };\n  }\n  /**\n   * @description The available keys for this struct\n   */\n\n\n  get defKeys() {\n    return Object.keys(this.#Types);\n  }\n\n  getT(key) {\n    return this.get(key);\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    for (const v of this.values()) {\n      if (!v.isEmpty) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * @description Returns the Type description of the structure\n   */\n\n\n  get Type() {\n    const result = {};\n    const defs = Object.entries(this.#Types);\n\n    for (let i = 0; i < defs.length; i++) {\n      const [key, Type] = defs[i];\n      result[key] = new Type(this.registry).toRawType();\n    }\n\n    return result;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    let total = 0;\n\n    for (const v of this.values()) {\n      total += v.encodedLength;\n    }\n\n    return total;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n\n  get registry() {\n    return this.#registry;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return compareMap(this, other);\n  }\n  /**\n   * @description Returns a specific names entry in the structure\n   * @param name The name of the entry to retrieve\n   */\n\n\n  get(name) {\n    return super.get(name);\n  }\n  /**\n   * @description Returns the values of a member at a specific index (Rather use get(name) for performance)\n   */\n\n\n  getAtIndex(index) {\n    return this.toArray()[index];\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const inner = new Array();\n\n    for (const [k, v] of this.entries()) {\n      inner.push({ ...v.inspect(),\n        name: stringCamelCase(k)\n      });\n    }\n\n    return {\n      inner\n    };\n  }\n  /**\n   * @description Converts the Object to an standard JavaScript Array\n   */\n\n\n  toArray() {\n    return [...this.values()];\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    const json = {};\n\n    for (const [k, v] of this.entries()) {\n      json[k] = v && v.toHuman(isExtended);\n    }\n\n    return json;\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    const json = {};\n\n    for (const [k, v] of this.entries()) {\n      const jsonKey = this.#jsonMap.get(k) || k;\n      json[jsonKey] = v && v.toJSON();\n    }\n\n    return json;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return stringify(typesToMap(this.registry, this.#Types));\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = [];\n\n    for (const [k, v] of this.entries()) {\n      if (v && isFunction(v.toU8a)) {\n        encoded.push(v.toU8a(!isBare || isBoolean(isBare) ? isBare : isBare[k]));\n      }\n    }\n\n    return u8aConcat(...encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u32\n * @description\n * A 32-bit unsigned integer\n */\n\nexport class u32 extends UInt.with(32) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u32';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isObject, isUndefined } from '@polkadot/util';\nimport { hasEq } from \"./util.js\";\n\nfunction hasMismatch(a, b) {\n  return isUndefined(a) || (hasEq(a) ? !a.eq(b) : a !== b);\n}\n\nfunction notEntry(value) {\n  return !Array.isArray(value) || value.length !== 2;\n}\n\nfunction compareMapArray(a, b) {\n  // equal number of entries and each entry in the array should match\n  return a.size === b.length && !b.some(e => notEntry(e) || hasMismatch(a.get(e[0]), e[1]));\n} // NOTE These are used internally and when comparing objects, expects that\n// when the second is an Map<string, Codec> that the first has to be as well\n\n\nexport function compareMap(a, b) {\n  if (Array.isArray(b)) {\n    return compareMapArray(a, b);\n  } else if (b instanceof Map) {\n    return compareMapArray(a, [...b.entries()]);\n  } else if (isObject(b)) {\n    return compareMapArray(a, Object.entries(b));\n  }\n\n  return false;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToHex } from '@polkadot/util';\n\nfunction formatFailure(error, type, u8a, key) {\n  return `decodeU8a: failed at ${u8aToHex(u8a)}…${key ? ` on ${key}` : ''}${type ? `: ${type}` : ''}:: ${error.message}`;\n}\n\nfunction getRawType(registry, Type) {\n  try {\n    return new Type(registry).toRawType();\n  } catch {\n    return null;\n  }\n}\n/**\n * Given an u8a, and an array of Type constructors, decode the u8a against the\n * types, and return an array of decoded values.\n *\n * @param u8a - The u8a to decode.\n * @param result - The result array (will be returned with values pushed)\n * @param types - The array of CodecClass to decode the U8a against.\n */\n\n\nexport function decodeU8a(registry, u8a, types, withZip) {\n  const [Types, keys] = Array.isArray(types) ? [types, []] : [Object.values(types), Object.keys(types)];\n  const result = new Array(Types.length);\n  let offset = 0;\n\n  for (let i = 0; i < Types.length; i++) {\n    try {\n      const value = new Types[i](registry, u8a.subarray(offset));\n      offset += value.initialU8aLength || value.encodedLength;\n      result[i] = withZip ? [keys[i], value] : value;\n    } catch (error) {\n      throw new Error(formatFailure(error, getRawType(registry, Types[i]), u8a.subarray(offset, offset + 16), keys[i]));\n    }\n  }\n\n  return [result, offset];\n} // Split from decodeU8a since this is specialized to 1 instance ... yes duplication, but\n// since we have to do less checks (and these are intensive anyway), much faster\n\nexport function decodeU8aVec(registry, u8a, start, Type, count) {\n  const result = new Array(count);\n  let offset = start;\n\n  for (let i = 0; i < count; i++) {\n    try {\n      const value = new Type(registry, u8a.subarray(offset));\n      offset += value.initialU8aLength || value.encodedLength;\n      result[i] = value;\n    } catch (error) {\n      throw new Error(formatFailure(error, getRawType(registry, Type), u8a.subarray(offset, offset + 16)));\n    }\n  }\n\n  return [result, offset, offset - start];\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { typeToConstructor } from \"./typeToConstructor.js\";\n/**\n * @description takes an input map of the form `{ [string]: string | CodecClass }` and returns a map of `{ [string]: CodecClass }`\n */\n\nexport function mapToTypeMap(registry, input) {\n  const entries = Object.entries(input);\n  const output = {};\n\n  for (let i = 0; i < entries.length; i++) {\n    output[entries[i][0]] = typeToConstructor(registry, entries[i][1]);\n  }\n\n  return output;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst BOUNDED = ['BTreeMap', 'BTreeSet', 'HashMap', 'Vec'];\nconst ALLOWED_BOXES = BOUNDED.concat(['Compact', 'DoNotConstruct', 'Int', 'Linkage', 'Range', 'RangeInclusive', 'Result', 'Option', 'UInt', 'WrapperKeepOpaque', 'WrapperOpaque']);\nconst BOX_PRECEDING = ['<', '(', '[', '\"', ',', ' ']; // start of vec, tuple, fixed array, part of struct def or in tuple\n\nconst mappings = [// alias <T::InherentOfflineReport as InherentOfflineReport>::Inherent -> InherentOfflineReport\nalias('<T::InherentOfflineReport as InherentOfflineReport>::Inherent', 'InherentOfflineReport', false), alias('VecDeque<', 'Vec<', false), // <T::Balance as HasCompact>\ncleanupCompact(), // Change BoundedVec<Type, Size> to Vec<Type>\nremoveExtensions('Bounded', true), // Change WeakVec<Type> to Vec<Type>\nremoveExtensions('Weak', false), // Remove all the trait prefixes\nremoveTraits(), // remove PairOf<T> -> (T, T)\nremovePairOf(), // remove boxing, `Box<Proposal>` -> `Proposal`\nremoveWrap('Box<'), // remove generics, `MisbehaviorReport<Hash, BlockNumber>` -> `MisbehaviorReport`\nremoveGenerics(), // alias String -> Text (compat with jsonrpc methods)\nalias('String', 'Text'), // alias Vec<u8> -> Bytes\nalias('Vec<u8>', 'Bytes'), alias('&\\\\[u8\\\\]', 'Bytes'), alias(\"&'static\\\\[u8\\\\]\", 'Bytes'), // alias RawAddress -> Address\nalias('RawAddress', 'Address'), // lookups, mapped to Address/AccountId as appropriate in runtime\nalias('Lookup::Source', 'LookupSource'), alias('Lookup::Target', 'LookupTarget'), // HACK duplication between contracts & primitives, however contracts prefixed with exec\nalias('exec::StorageKey', 'ContractStorageKey'), // flattens tuples with one value, `(AccountId)` -> `AccountId`\nflattenSingleTuple(), // converts ::Type to Type, <T as Trait<I>>::Proposal -> Proposal\nremoveColons()]; // given a starting index, find the closing >\n\nexport function findClosing(value, start) {\n  let depth = 0;\n\n  for (let index = start; index < value.length; index++) {\n    if (value[index] === '>') {\n      if (!depth) {\n        return index;\n      }\n\n      depth--;\n    } else if (value[index] === '<') {\n      depth++;\n    }\n  }\n\n  throw new Error(`Unable to find closing matching <> on '${value}' (start ${start})`);\n}\nexport function alias(src, dest, withChecks = true) {\n  const from = new RegExp(`(^${src}|${BOX_PRECEDING.map(box => `\\\\${box}${src}`).join('|')})`, 'g');\n\n  const to = src => {\n    from.lastIndex = 0;\n    return withChecks && BOX_PRECEDING.includes(src[0]) ? `${src[0]}${dest}` : dest;\n  };\n\n  return value => value.replace(from, to);\n}\nexport function cleanupCompact() {\n  return value => {\n    for (let index = 0; index < value.length; index++) {\n      if (value[index] === '<') {\n        const end = findClosing(value, index + 1) - 14;\n\n        if (value.substr(end, 14) === ' as HasCompact') {\n          value = `Compact<${value.substr(index + 1, end - index - 1)}>`;\n        }\n      }\n    }\n\n    return value;\n  };\n}\nexport function flattenSingleTuple() {\n  const from1 = /,\\)/g;\n  const from2 = /\\(([^,]+)\\)/;\n  return value => {\n    from1.lastIndex = 0;\n    return value // tuples may have trailing commas, e.g. (u32, BlockNumber, )\n    .replace(from1, ')') // change (u32) -> u32\n    .replace(from2, '$1');\n  };\n}\n\nfunction replaceTagWith(value, matcher, replacer) {\n  let index = -1;\n\n  while (true) {\n    index = value.indexOf(matcher, index + 1);\n\n    if (index === -1) {\n      return value;\n    }\n\n    const start = index + matcher.length;\n    const end = findClosing(value, start);\n    value = `${value.substr(0, index)}${replacer(value.substr(start, end - start))}${value.substr(end + 1)}`;\n  }\n} // remove the Bounded* or Weak* wrappers\n\n\nexport function removeExtensions(type, isSized) {\n  return value => BOUNDED.reduce((value, tag) => replaceTagWith(value, `${type}${tag}<`, inner => {\n    const parts = inner.split(',').map(s => s.trim()).filter(s => s);\n\n    if (isSized) {\n      parts.pop();\n    }\n\n    return `${tag}<${parts.join(',')}>`;\n  }), value);\n}\nexport function removeColons() {\n  return (value, {\n    allowNamespaces\n  } = {}) => {\n    let index = 0;\n\n    while (index !== -1) {\n      index = value.indexOf('::');\n\n      if (index === 0) {\n        value = value.substr(2);\n      } else if (index !== -1) {\n        if (allowNamespaces) {\n          return value;\n        }\n\n        let start = index;\n\n        while (start !== -1 && !BOX_PRECEDING.includes(value[start])) {\n          start--;\n        }\n\n        value = `${value.substr(0, start + 1)}${value.substr(index + 2)}`;\n      }\n    }\n\n    return value;\n  };\n}\nexport function removeGenerics() {\n  return value => {\n    for (let index = 0; index < value.length; index++) {\n      if (value[index] === '<') {\n        // check against the allowed wrappers, be it Vec<..>, Option<...> ...\n        const box = ALLOWED_BOXES.find(box => {\n          const start = index - box.length;\n          return start >= 0 && value.substr(start, box.length) === box && ( // make sure it is stand-alone, i.e. don't catch ElectionResult<...> as Result<...>\n          start === 0 || BOX_PRECEDING.includes(value[start - 1]));\n        }); // we have not found anything, unwrap generic innards\n\n        if (!box) {\n          const end = findClosing(value, index + 1);\n          value = `${value.substr(0, index)}${value.substr(end + 1)}`;\n        }\n      }\n    }\n\n    return value;\n  };\n} // remove the PairOf wrappers\n\nexport function removePairOf() {\n  const replacer = inner => `(${inner},${inner})`;\n\n  return value => replaceTagWith(value, 'PairOf<', replacer);\n} // remove the type traits\n\nexport function removeTraits() {\n  const from1 = /\\s/g;\n  const from2 = /(T|Self)::/g;\n  const from3 = /<(T|Self)asTrait>::/g;\n  const from4 = /<Tas[a-z]+::Trait>::/g;\n  const from5 = /<LookupasStaticLookup>/g;\n  const from6 = /::Type/g;\n  return value => {\n    from1.lastIndex = 0;\n    from2.lastIndex = 0;\n    from3.lastIndex = 0;\n    from4.lastIndex = 0;\n    from5.lastIndex = 0;\n    from6.lastIndex = 0;\n    return value // remove all whitespaces\n    .replace(from1, '') // anything `T::<type>` to end up as `<type>`\n    .replace(from2, '') // replace `<T as Trait>::` (whitespaces were removed above)\n    .replace(from3, '') // replace `<T as something::Trait>::` (whitespaces were removed above)\n    .replace(from4, '') // replace <Lookup as StaticLookup>\n    .replace(from5, 'Lookup') // replace `<...>::Type`\n    .replace(from6, '');\n  };\n} // remove wrapping values, i.e. Box<Proposal> -> Proposal\n\nexport function removeWrap(check) {\n  const replacer = inner => inner;\n\n  return value => replaceTagWith(value, check, replacer);\n}\nconst sanitizeMap = new Map(); // eslint-disable-next-line @typescript-eslint/ban-types\n\nexport function sanitize(value, options) {\n  let result = value.toString();\n\n  if (!options) {\n    const memoized = sanitizeMap.get(result);\n\n    if (memoized) {\n      return memoized;\n    }\n  }\n\n  for (let i = 0; i < mappings.length; i++) {\n    result = mappings[i](result, options);\n  }\n\n  result = result.trim();\n\n  if (!options) {\n    sanitizeMap.set(value.toString(), result);\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isString } from '@polkadot/util';\nexport function typeToConstructor(registry, type) {\n  return isString(type) ? registry.createClassUnsafe(type) : type;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport function typesToMap(registry, Types) {\n  const entries = Object.entries(Types);\n  const result = {};\n\n  for (let i = 0; i < entries.length; i++) {\n    const [key, Type] = entries[i];\n    result[key] = registry.getClassName(Type) || new Type(registry).toRawType();\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from '@polkadot/util';\nexport function hasEq(o) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return isFunction(o.eq);\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport let TypeDefInfo;\n\n(function (TypeDefInfo) {\n  TypeDefInfo[TypeDefInfo[\"BTreeMap\"] = 0] = \"BTreeMap\";\n  TypeDefInfo[TypeDefInfo[\"BTreeSet\"] = 1] = \"BTreeSet\";\n  TypeDefInfo[TypeDefInfo[\"Compact\"] = 2] = \"Compact\";\n  TypeDefInfo[TypeDefInfo[\"DoNotConstruct\"] = 3] = \"DoNotConstruct\";\n  TypeDefInfo[TypeDefInfo[\"Enum\"] = 4] = \"Enum\";\n  TypeDefInfo[TypeDefInfo[\"HashMap\"] = 5] = \"HashMap\";\n  TypeDefInfo[TypeDefInfo[\"Int\"] = 6] = \"Int\";\n  TypeDefInfo[TypeDefInfo[\"Linkage\"] = 7] = \"Linkage\";\n  TypeDefInfo[TypeDefInfo[\"Null\"] = 8] = \"Null\";\n  TypeDefInfo[TypeDefInfo[\"Option\"] = 9] = \"Option\";\n  TypeDefInfo[TypeDefInfo[\"Plain\"] = 10] = \"Plain\";\n  TypeDefInfo[TypeDefInfo[\"Range\"] = 11] = \"Range\";\n  TypeDefInfo[TypeDefInfo[\"RangeInclusive\"] = 12] = \"RangeInclusive\";\n  TypeDefInfo[TypeDefInfo[\"Result\"] = 13] = \"Result\";\n  TypeDefInfo[TypeDefInfo[\"Set\"] = 14] = \"Set\";\n  TypeDefInfo[TypeDefInfo[\"Si\"] = 15] = \"Si\";\n  TypeDefInfo[TypeDefInfo[\"Struct\"] = 16] = \"Struct\";\n  TypeDefInfo[TypeDefInfo[\"Tuple\"] = 17] = \"Tuple\";\n  TypeDefInfo[TypeDefInfo[\"UInt\"] = 18] = \"UInt\";\n  TypeDefInfo[TypeDefInfo[\"Vec\"] = 19] = \"Vec\";\n  TypeDefInfo[TypeDefInfo[\"VecFixed\"] = 20] = \"VecFixed\";\n  TypeDefInfo[TypeDefInfo[\"WrapperKeepOpaque\"] = 21] = \"WrapperKeepOpaque\";\n  TypeDefInfo[TypeDefInfo[\"WrapperOpaque\"] = 22] = \"WrapperOpaque\";\n})(TypeDefInfo || (TypeDefInfo = {}));","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\n\nfunction isNotNested(...counters) {\n  return !counters.some(counter => counter !== 0);\n} // safely split a string on ', ' while taking care of any nested occurences\n\n\nexport function typeSplit(type) {\n  let [cDepth, fDepth, sDepth, tDepth, start] = [0, 0, 0, 0, 0];\n  const result = [];\n\n  const extract = index => {\n    if (isNotNested(cDepth, fDepth, sDepth, tDepth)) {\n      result.push(type.substr(start, index - start).trim());\n      start = index + 1;\n    }\n  };\n\n  for (let index = 0; index < type.length; index++) {\n    switch (type[index]) {\n      // if we are not nested, add the type\n      case ',':\n        extract(index);\n        break;\n      // adjust compact/vec (and friends) depth\n\n      case '<':\n        cDepth++;\n        break;\n\n      case '>':\n        cDepth--;\n        break;\n      // adjust fixed vec depths\n\n      case '[':\n        fDepth++;\n        break;\n\n      case ']':\n        fDepth--;\n        break;\n      // adjust struct depth\n\n      case '{':\n        sDepth++;\n        break;\n\n      case '}':\n        sDepth--;\n        break;\n      // adjust tuple depth\n\n      case '(':\n        tDepth++;\n        break;\n\n      case ')':\n        tDepth--;\n        break;\n    }\n  }\n\n  assert(isNotNested(cDepth, fDepth, sDepth, tDepth), () => `Invalid definition (missing terminators) found in ${type}`); // the final leg of the journey\n\n  result.push(type.substr(start, type.length - start).trim());\n  return result;\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sanitize } from '@polkadot/types-codec';\nimport { assert, isNumber, isString, objectSpread } from '@polkadot/util';\nimport { TypeDefInfo } from \"../types/index.js\";\nimport { typeSplit } from \"./typeSplit.js\";\nconst MAX_NESTED = 64;\nconst KNOWN_INTERNALS = ['_alias', '_fallback'];\n\nfunction getTypeString(typeOrObj) {\n  return isString(typeOrObj) ? typeOrObj.toString() : JSON.stringify(typeOrObj);\n}\n\nfunction isRustEnum(details) {\n  const values = Object.values(details);\n\n  if (values.some(v => isNumber(v))) {\n    assert(values.every(v => isNumber(v) && v >= 0 && v <= 255), 'Invalid number-indexed enum definition');\n    return false;\n  }\n\n  return true;\n} // decode an enum of either of the following forms\n//  { _enum: ['A', 'B', 'C'] }\n//  { _enum: { A: AccountId, B: Balance, C: u32 } }\n//  { _enum: { A: 1, B: 2 } }\n\n\nfunction _decodeEnum(value, details, count, fallbackType) {\n  value.info = TypeDefInfo.Enum;\n  value.fallbackType = fallbackType; // not as pretty, but remain compatible with oo7 for both struct and Array types\n\n  if (Array.isArray(details)) {\n    value.sub = details.map((name, index) => ({\n      index,\n      info: TypeDefInfo.Plain,\n      name,\n      type: 'Null'\n    }));\n  } else if (isRustEnum(details)) {\n    value.sub = Object.entries(details).map(([name, typeOrObj], index) => objectSpread({}, getTypeDef(getTypeString(typeOrObj || 'Null'), {\n      name\n    }, count), {\n      index\n    }));\n  } else {\n    value.sub = Object.entries(details).map(([name, index]) => ({\n      index,\n      info: TypeDefInfo.Plain,\n      name,\n      type: 'Null'\n    }));\n  }\n\n  return value;\n} // decode a set of the form\n//   { _set: { A: 0b0001, B: 0b0010, C: 0b0100 } }\n\n\nfunction _decodeSet(value, details, fallbackType) {\n  value.info = TypeDefInfo.Set;\n  value.fallbackType = fallbackType;\n  value.length = details._bitLength;\n  value.sub = Object.entries(details).filter(([name]) => !name.startsWith('_')).map(([name, index]) => ({\n    index,\n    info: TypeDefInfo.Plain,\n    name,\n    type: 'Null'\n  }));\n  return value;\n} // decode a struct, set or enum\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction _decodeStruct(value, type, _, count) {\n  const parsed = JSON.parse(type);\n  const keys = Object.keys(parsed);\n\n  if (keys.includes('_enum')) {\n    return _decodeEnum(value, parsed._enum, count, parsed._fallback);\n  } else if (keys.includes('_set')) {\n    return _decodeSet(value, parsed._set, parsed._fallback);\n  }\n\n  value.alias = parsed._alias ? new Map(Object.entries(parsed._alias)) : undefined;\n  value.fallbackType = parsed._fallback;\n  value.sub = keys.filter(name => !KNOWN_INTERNALS.includes(name)).map(name => getTypeDef(getTypeString(parsed[name]), {\n    name\n  }, count));\n  return value;\n} // decode a fixed vector, e.g. [u8;32]\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction _decodeFixedVec(value, type, _, count) {\n  const max = type.length - 1;\n  let index = -1;\n  let inner = 0;\n\n  for (let i = 1; i < max && index === -1; i++) {\n    if (type[i] === ';' && inner === 0) {\n      index = i;\n    } else if (['[', '(', '<'].includes(type[i])) {\n      inner++;\n    } else if ([']', ')', '>'].includes(type[i])) {\n      inner--;\n    }\n  }\n\n  assert(index !== -1, () => `${type}: Unable to extract location of ';'`);\n  const vecType = type.substr(1, index - 1);\n  const [strLength, displayName] = type.substr(index + 1, max - index - 1).split(';');\n  const length = parseInt(strLength.trim(), 10); // as a first round, only u8 via u8aFixed, we can add more support\n\n  assert(length <= 256, () => `${type}: Only support for [Type; <length>], where length <= 256`);\n  value.displayName = displayName;\n  value.length = length;\n  value.sub = getTypeDef(vecType, {}, count);\n  return value;\n} // decode a tuple\n\n\nfunction _decodeTuple(value, _, subType, count) {\n  value.sub = subType.length === 0 ? [] : typeSplit(subType).map(inner => getTypeDef(inner, {}, count));\n  return value;\n} // decode a Int/UInt<bitLength[, name]>\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction _decodeAnyInt(value, type, _, clazz) {\n  const [strLength, displayName] = type.substr(clazz.length + 1, type.length - clazz.length - 1 - 1).split(',');\n  const length = parseInt(strLength.trim(), 10); // as a first round, only u8 via u8aFixed, we can add more support\n\n  assert(length <= 8192 && length % 8 === 0, () => `${type}: Only support for ${clazz}<bitLength>, where length <= 8192 and a power of 8, found ${length}`);\n  value.displayName = displayName;\n  value.length = length;\n  return value;\n}\n\nfunction _decodeInt(value, type, subType) {\n  return _decodeAnyInt(value, type, subType, 'Int');\n}\n\nfunction _decodeUInt(value, type, subType) {\n  return _decodeAnyInt(value, type, subType, 'UInt');\n} // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction _decodeDoNotConstruct(value, type, _) {\n  const NAME_LENGTH = 'DoNotConstruct'.length;\n  value.displayName = type.substr(NAME_LENGTH + 1, type.length - NAME_LENGTH - 1 - 1);\n  return value;\n}\n\nfunction hasWrapper(type, [start, end]) {\n  return type.substr(0, start.length) === start && type.substr(-1 * end.length) === end;\n}\n\nconst nestedExtraction = [['[', ']', TypeDefInfo.VecFixed, _decodeFixedVec], ['{', '}', TypeDefInfo.Struct, _decodeStruct], ['(', ')', TypeDefInfo.Tuple, _decodeTuple], // the inner for these are the same as tuple, multiple values\n['BTreeMap<', '>', TypeDefInfo.BTreeMap, _decodeTuple], ['HashMap<', '>', TypeDefInfo.HashMap, _decodeTuple], ['Int<', '>', TypeDefInfo.Int, _decodeInt], ['Result<', '>', TypeDefInfo.Result, _decodeTuple], ['UInt<', '>', TypeDefInfo.UInt, _decodeUInt], ['DoNotConstruct<', '>', TypeDefInfo.DoNotConstruct, _decodeDoNotConstruct]];\nconst wrappedExtraction = [['BTreeSet<', '>', TypeDefInfo.BTreeSet], ['Compact<', '>', TypeDefInfo.Compact], ['Linkage<', '>', TypeDefInfo.Linkage], ['Option<', '>', TypeDefInfo.Option], ['Range<', '>', TypeDefInfo.Range], ['RangeInclusive<', '>', TypeDefInfo.RangeInclusive], ['Vec<', '>', TypeDefInfo.Vec], ['WrapperKeepOpaque<', '>', TypeDefInfo.WrapperKeepOpaque], ['WrapperOpaque<', '>', TypeDefInfo.WrapperOpaque]];\n\nfunction extractSubType(type, [start, end]) {\n  return type.substr(start.length, type.length - start.length - end.length);\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\n\nexport function getTypeDef(_type, {\n  displayName,\n  name\n} = {}, count = 0) {\n  // create the type via Type, allowing types to be sanitized\n  const type = sanitize(_type);\n  const value = {\n    displayName,\n    info: TypeDefInfo.Plain,\n    name,\n    type\n  };\n  assert(++count !== MAX_NESTED, 'getTypeDef: Maximum nested limit reached');\n  const nested = nestedExtraction.find(nested => hasWrapper(type, nested));\n\n  if (nested) {\n    value.info = nested[2];\n    return nested[3](value, type, extractSubType(type, nested), count);\n  }\n\n  const wrapped = wrappedExtraction.find(wrapped => hasWrapper(type, wrapped));\n\n  if (wrapped) {\n    value.info = wrapped[2];\n    value.sub = getTypeDef(extractSubType(type, wrapped), {}, count);\n  }\n\n  return value;\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util';\nexport const XCM_MAPPINGS = ['AssetInstance', 'Fungibility', 'Junction', 'Junctions', 'MultiAsset', 'MultiAssetFilter', 'MultiLocation', 'Response', 'WildFungibility', 'WildMultiAsset', 'Xcm', 'XcmError', 'XcmOrder'];\nexport function mapXcmTypes(version) {\n  return XCM_MAPPINGS.reduce((all, key) => objectSpread(all, {\n    [key]: `${key}${version}`\n  }), {});\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { lazyMethod } from '@polkadot/util';\nexport function lazyVariants(lookup, {\n  type\n}, getName, creator) {\n  const result = {};\n  const variants = lookup.getSiType(type).def.asVariant.variants;\n\n  for (let i = 0; i < variants.length; i++) {\n    lazyMethod(result, variants[i], creator, getName);\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction, objectProperties, stringify } from '@polkadot/util';\nimport { compareMap } from \"../utils/index.js\";\n/** @internal */\n\nfunction decodeJson(value) {\n  return Object.entries(value || {});\n}\n/**\n * @name Json\n * @description\n * Wraps the a JSON structure retrieve via RPC. It extends the standard JS Map with. While it\n * implements a Codec, it is limited in that it can only be used with input objects via RPC,\n * i.e. no hex decoding. Unlike a struct, this waps a JSON object with unknown keys\n * @noInheritDoc\n */\n\n\nexport class Json extends Map {\n  constructor(registry, value) {\n    const decoded = decodeJson(value);\n    super(decoded);\n    this.registry = registry;\n    objectProperties(this, decoded.map(([k]) => k), k => this.get(k));\n  }\n  /**\n   * @description Always 0, never encodes as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 0;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return [...this.keys()].length === 0;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return compareMap(this, other);\n  }\n\n  getT(key) {\n    return this.get(key);\n  }\n  /**\n   * @description Unimplemented, will throw\n   */\n\n\n  inspect() {\n    throw new Error('Unimplemented');\n  }\n  /**\n   * @description Unimplemented, will throw\n   */\n\n\n  toHex() {\n    throw new Error('Unimplemented');\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return [...this.entries()].reduce((json, [key, value]) => {\n      json[key] = isFunction(value.toHuman) ? value.toHuman() : value;\n      return json;\n    }, {});\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return [...this.entries()].reduce((json, [key, value]) => {\n      json[key] = value;\n      return json;\n    }, {});\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Json';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return stringify(this.toJSON());\n  }\n  /**\n   * @description Unimplemented, will throw\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    throw new Error('Unimplemented');\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name DoNotConstruct\n * @description\n * An unknown type that fails on construction with the type info\n */\nexport class DoNotConstruct {\n  #neverError;\n\n  constructor(registry, typeName = 'DoNotConstruct') {\n    this.registry = registry;\n    this.#neverError = new Error(`DoNotConstruct: Cannot construct unknown type ${typeName}`);\n    throw this.#neverError;\n  }\n\n  static with(typeName) {\n    return class extends DoNotConstruct {\n      constructor(registry) {\n        super(registry, typeName);\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    throw this.#neverError;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    throw this.#neverError;\n  }\n  /**\n   * @description Checks if the value is an empty value (always true)\n   */\n\n\n  get isEmpty() {\n    throw this.#neverError;\n  }\n\n  eq() {\n    throw this.#neverError;\n  }\n\n  inspect() {\n    throw this.#neverError;\n  }\n\n  toHex() {\n    throw this.#neverError;\n  }\n\n  toHuman() {\n    throw this.#neverError;\n  }\n\n  toJSON() {\n    throw this.#neverError;\n  }\n\n  toRawType() {\n    throw this.#neverError;\n  }\n\n  toString() {\n    throw this.#neverError;\n  }\n\n  toU8a() {\n    throw this.#neverError;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isUndefined } from '@polkadot/util';\nimport { hasEq } from \"./util.js\"; // NOTE These are used internally and when comparing objects, expects that\n// when the second is an Codec[] that the first has to be as well\n\nexport function compareArray(a, b) {\n  if (Array.isArray(b)) {\n    return a.length === b.length && isUndefined(a.find((v, index) => hasEq(v) ? !v.eq(b[index]) : v !== b[index]));\n  }\n\n  return false;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactToU8a, u8aConcat, u8aToHex } from '@polkadot/util';\nimport { compareArray } from \"../utils/compareArray.js\";\n/**\n * @name AbstractArray\n * @description\n * This manages codec arrays. It is an extension to Array, providing\n * specific encoding/decoding on top of the base type.\n * @noInheritDoc\n */\n\nexport class AbstractArray extends Array {\n  constructor(registry, values, initialU8aLength) {\n    super(values.length); // explicitly set the values here - this removes the need for any extra allocations\n\n    for (let i = 0; i < values.length; i++) {\n      this[i] = values[i];\n    }\n\n    this.registry = registry;\n    this.initialU8aLength = initialU8aLength;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    // We need to loop through all entries since they may have a variable length themselves,\n    // e.g. when a Vec or Compact is contained withing, it has a variable length based on data\n    let total = compactToU8a(this.length).length;\n\n    for (let i = 0; i < this.length; i++) {\n      total += this[i].encodedLength;\n    }\n\n    return total;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.length === 0;\n  }\n  /**\n   * @description The length of the value\n   */\n\n\n  get length() {\n    // only included here since we ignore inherited docs\n    return super.length;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return compareArray(this, other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      inner: this.inspectInner(),\n      outer: [compactToU8a(this.length)]\n    };\n  }\n\n  inspectInner() {\n    const inner = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++) {\n      inner[i] = this[i].inspect();\n    }\n\n    return inner;\n  }\n  /**\n   * @description Converts the Object to an standard JavaScript Array\n   */\n\n\n  toArray() {\n    return Array.from(this);\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    const result = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++) {\n      result[i] = this[i].toHuman(isExtended);\n    }\n\n    return result;\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    const result = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++) {\n      result[i] = this[i].toJSON();\n    }\n\n    return result;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  /**\n   * @description Returns the string representation of the value\n   */\n  toString() {\n    const result = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++) {\n      result[i] = this[i].toString();\n    }\n\n    return `[${result.join(', ')}]`;\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = this.toU8aInner();\n    return isBare ? u8aConcat(...encoded) : u8aConcat(compactToU8a(this.length), ...encoded);\n  }\n\n  toU8aInner(isBare) {\n    const encoded = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++) {\n      encoded[i] = this[i].toU8a(isBare);\n    }\n\n    return encoded;\n  } // Below are methods that we override. When we do a `new Vec(...).map()`,\n  // we want it to return an Array. We only override the methods that return a\n  // new instance.\n\n  /**\n   * @description Concatenates two arrays\n   */\n\n\n  concat(other) {\n    return this.toArray().concat(other instanceof AbstractArray ? other.toArray() : other);\n  }\n  /**\n   * @description Filters the array with the callback\n   */\n\n\n  filter(callbackfn, thisArg) {\n    return this.toArray().filter(callbackfn, thisArg);\n  }\n  /**\n   * @description Maps the array with the callback\n   */\n\n\n  map(callbackfn, thisArg) {\n    return this.toArray().map(callbackfn, thisArg);\n  }\n  /**\n   * @description Checks if the array includes a specific value\n   */\n\n\n  includes(check) {\n    return this.some(value => value.eq(check));\n  }\n  /**\n   * @description Returns a slice of an array\n   */\n\n\n  slice(start, end) {\n    return this.toArray().slice(start, end);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNull } from '@polkadot/util';\n/**\n * @name Null\n * @description\n * Implements a type that does not contain anything (apart from `null`)\n */\n\nexport class Null {\n  // Added for compatibility reasons, e.g. see Option\n  initialU8aLength = 0;\n\n  constructor(registry) {\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 0;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    throw new Error('.hash is not implemented on Null');\n  }\n  /**\n   * @description Checks if the value is an empty value (always true)\n   */\n\n\n  get isEmpty() {\n    return true;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return other instanceof Null || isNull(other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {};\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return '0x';\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return null;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Null';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return '';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return new Uint8Array();\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isHex, isNumber, isObject, isString, isU8a, isUndefined, objectProperties, stringCamelCase, stringify, stringPascalCase, u8aConcat, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { mapToTypeMap, typesToMap } from \"../utils/index.js\";\nimport { Null } from \"./Null.js\"; // export interface, this is used in Enum.with, so required as public by TS\n\nfunction isRustEnum(def) {\n  const defValues = Object.values(def);\n\n  if (defValues.some(v => isNumber(v))) {\n    assert(defValues.every(v => isNumber(v) && v >= 0 && v <= 255), 'Invalid number-indexed enum definition');\n    return false;\n  }\n\n  return true;\n}\n\nfunction extractDef(registry, _def) {\n  const def = {};\n  let isBasic;\n  let isIndexed;\n\n  if (Array.isArray(_def)) {\n    for (let i = 0; i < _def.length; i++) {\n      def[_def[i]] = {\n        Type: Null,\n        index: i\n      };\n    }\n\n    isBasic = true;\n    isIndexed = false;\n  } else if (isRustEnum(_def)) {\n    const entries = Object.entries(mapToTypeMap(registry, _def));\n\n    for (let i = 0; i < entries.length; i++) {\n      const [key, Type] = entries[i];\n      def[key] = {\n        Type,\n        index: i\n      };\n    }\n\n    isBasic = !Object.values(def).some(({\n      Type\n    }) => Type !== Null);\n    isIndexed = false;\n  } else {\n    const entries = Object.entries(_def);\n\n    for (let i = 0; i < entries.length; i++) {\n      const [key, index] = entries[i];\n      def[key] = {\n        Type: Null,\n        index\n      };\n    }\n\n    isBasic = true;\n    isIndexed = true;\n  }\n\n  return {\n    def,\n    isBasic,\n    isIndexed\n  };\n}\n\nfunction createFromValue(registry, def, index = 0, value) {\n  const entry = Object.values(def).find(e => e.index === index);\n  assert(!isUndefined(entry), () => `Unable to create Enum via index ${index}, in ${Object.keys(def).join(', ')}`);\n  return {\n    index,\n    value: value instanceof entry.Type ? value : new entry.Type(registry, value)\n  };\n}\n\nfunction decodeFromJSON(registry, def, key, value) {\n  // JSON comes in the form of { \"<type (camelCase)>\": \"<value for type>\" }, here we\n  // additionally force to lower to ensure forward compat\n  const keys = Object.keys(def).map(k => k.toLowerCase());\n  const keyLower = key.toLowerCase();\n  const index = keys.indexOf(keyLower);\n  assert(index !== -1, () => `Cannot map Enum JSON, unable to find '${key}' in ${keys.join(', ')}`);\n\n  try {\n    return createFromValue(registry, def, Object.values(def)[index].index, value);\n  } catch (error) {\n    throw new Error(`Enum(${key}):: ${error.message}`);\n  }\n}\n\nfunction decodeEnum(registry, def, value, index) {\n  // NOTE We check the index path first, before looking at values - this allows treating\n  // the optional indexes before anything else, more-specific > less-specific\n  if (isNumber(index)) {\n    return createFromValue(registry, def, index, value);\n  } else if (isU8a(value) || isHex(value)) {\n    const u8a = u8aToU8a(value); // nested, we don't want to match isObject below\n\n    if (u8a.length) {\n      return createFromValue(registry, def, u8a[0], u8a.subarray(1));\n    }\n  } else if (value instanceof Enum) {\n    return createFromValue(registry, def, value.index, value.value);\n  } else if (isNumber(value)) {\n    return createFromValue(registry, def, value);\n  } else if (isString(value)) {\n    return decodeFromJSON(registry, def, value.toString());\n  } else if (isObject(value)) {\n    const key = Object.keys(value)[0];\n    return decodeFromJSON(registry, def, key, value[key]);\n  } // Worst-case scenario, return the first with default\n\n\n  return createFromValue(registry, def, Object.values(def)[0].index);\n}\n/**\n * @name Enum\n * @description\n * This implements an enum, that based on the value wraps a different type. It is effectively\n * an extension to enum where the value type is determined by the actual index.\n */\n\n\nexport class Enum {\n  #def;\n  #entryIndex;\n  #indexes;\n  #isBasic;\n  #isIndexed;\n  #raw;\n\n  constructor(registry, Types, value, index) {\n    const {\n      def,\n      isBasic,\n      isIndexed\n    } = extractDef(registry, Types); // shortcut isU8a as used in SCALE decoding\n\n    const decoded = isU8a(value) && value.length && !isNumber(index) ? createFromValue(registry, def, value[0], value.subarray(1)) : decodeEnum(registry, def, value, index);\n    this.registry = registry;\n    this.#def = def;\n    this.#isBasic = isBasic;\n    this.#isIndexed = isIndexed;\n    this.#indexes = Object.values(def).map(({\n      index\n    }) => index);\n    this.#entryIndex = this.#indexes.indexOf(decoded.index) || 0;\n    this.#raw = decoded.value;\n\n    if (this.#raw.initialU8aLength) {\n      this.initialU8aLength = 1 + this.#raw.initialU8aLength;\n    }\n  }\n\n  static with(Types) {\n    const keys = Array.isArray(Types) ? Types : Object.keys(Types);\n    const asKeys = new Array(keys.length);\n    const isKeys = new Array(keys.length);\n\n    for (let i = 0; i < keys.length; i++) {\n      const name = stringPascalCase(keys[i].replace(' ', '_'));\n      asKeys[i] = `as${name}`;\n      isKeys[i] = `is${name}`;\n    }\n\n    return class extends Enum {\n      constructor(registry, value, index) {\n        super(registry, Types, value, index);\n        objectProperties(this, isKeys, (_, i) => this.type === keys[i]);\n        objectProperties(this, asKeys, (k, i) => {\n          assert(this[isKeys[i]], () => `Cannot convert '${this.type}' via ${k}`);\n          return this.value;\n        });\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 1 + this.#raw.encodedLength;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description The index of the enum value\n   */\n\n\n  get index() {\n    return this.#indexes[this.#entryIndex];\n  }\n  /**\n   * @description The value of the enum\n   */\n\n\n  get inner() {\n    return this.#raw;\n  }\n  /**\n   * @description true if this is a basic enum (no values)\n   */\n\n\n  get isBasic() {\n    return this.#isBasic;\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.#raw.isEmpty;\n  }\n  /**\n   * @description Checks if the Enum points to a [[Null]] type\n   */\n\n\n  get isNone() {\n    return this.#raw instanceof Null;\n  }\n  /**\n   * @description Checks if the Enum points to a [[Null]] type\n   * @deprecated use isNone\n   */\n\n\n  get isNull() {\n    return this.#raw instanceof Null;\n  }\n  /**\n   * @description The available keys for this enum\n   */\n\n\n  get defIndexes() {\n    return this.#indexes;\n  }\n  /**\n   * @description The available keys for this enum\n   */\n\n\n  get defKeys() {\n    return Object.keys(this.#def);\n  }\n  /**\n   * @description The name of the type this enum value represents\n   */\n\n\n  get type() {\n    return this.defKeys[this.#entryIndex];\n  }\n  /**\n   * @description The value of the enum\n   */\n\n\n  get value() {\n    return this.#raw;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    // cater for the case where we only pass the enum index\n    if (isU8a(other)) {\n      return !this.toU8a().some((entry, index) => entry !== other[index]);\n    } else if (isNumber(other)) {\n      return this.toNumber() === other;\n    } else if (this.#isBasic && isString(other)) {\n      return this.type === other;\n    } else if (isHex(other)) {\n      return this.toHex() === other;\n    } else if (other instanceof Enum) {\n      return this.index === other.index && this.value.eq(other.value);\n    } else if (isObject(other)) {\n      return this.value.eq(other[this.type]);\n    } // compare the actual wrapper value\n\n\n    return this.value.eq(other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    if (this.isBasic) {\n      return {\n        outer: [new Uint8Array([this.index])]\n      };\n    }\n\n    const {\n      inner,\n      outer = []\n    } = this.#raw.inspect();\n    return {\n      inner,\n      outer: [new Uint8Array([this.index]), ...outer]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.#isBasic || this.isNone ? this.type : {\n      [this.type]: this.#raw.toHuman(isExtended)\n    };\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.#isBasic ? this.type : {\n      [stringCamelCase(this.type)]: this.#raw.toJSON()\n    };\n  }\n  /**\n   * @description Returns the number representation for the value\n   */\n\n\n  toNumber() {\n    return this.index;\n  }\n  /**\n   * @description Returns a raw struct representation of the enum types\n   */\n\n\n  _toRawStruct() {\n    if (this.#isBasic) {\n      return this.#isIndexed ? this.defKeys.reduce((out, key, index) => {\n        out[key] = this.#indexes[index];\n        return out;\n      }, {}) : this.defKeys;\n    }\n\n    const typeMap = Object.entries(this.#def).reduce((out, [key, {\n      Type\n    }]) => {\n      out[key] = Type;\n      return out;\n    }, {});\n    return typesToMap(this.registry, typeMap);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return stringify({\n      _enum: this._toRawStruct()\n    });\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.isNull ? this.type : stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return u8aConcat(new Uint8Array(isBare ? [] : [this.index]), this.#raw.toU8a(isBare));\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToBn, isBigInt, isBn, isFunction, isNumber, stringify } from '@polkadot/util';\n\n/** @internal **/\nfunction isArrayLike(arg) {\n  return arg instanceof Uint8Array || Array.isArray(arg);\n}\n/** @internal **/\n\n\nfunction isCodec(arg) {\n  return isFunction(arg && arg.toU8a);\n}\n/** @internal **/\n\n\nfunction isEnum(arg) {\n  return isCodec(arg) && isNumber(arg.index) && isCodec(arg.value);\n}\n/** @internal */\n\n\nfunction isNumberLike(arg) {\n  return isNumber(arg) || isBn(arg) || isBigInt(arg);\n}\n/** @internal */\n\n\nfunction sortArray(a, b) {\n  // Vec, Tuple, Bytes etc.\n  let sortRes = 0;\n  const minLen = Math.min(a.length, b.length);\n\n  for (let i = 0; i < minLen; ++i) {\n    sortRes = sortAsc(a[i], b[i]);\n\n    if (sortRes !== 0) {\n      return sortRes;\n    }\n  }\n\n  return a.length - b.length;\n}\n/**\n* Sort keys/values of BTreeSet/BTreeMap in ascending order for encoding compatibility with Rust's BTreeSet/BTreeMap\n* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeSet.html)\n* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeMap.html)\n*/\n\n\nexport function sortAsc(a, b) {\n  if (isNumberLike(a) && isNumberLike(b)) {\n    return bnToBn(a).cmp(bnToBn(b));\n  } else if (a instanceof Map && b instanceof Map) {\n    return sortAsc(Array.from(a.values()), Array.from(b.values()));\n  } else if (isEnum(a) && isEnum(b)) {\n    return sortAsc(a.index, b.index) || sortAsc(a.value, b.value);\n  } else if (isArrayLike(a) && isArrayLike(b)) {\n    return sortArray(a, b);\n  } else if (isCodec(a) && isCodec(b)) {\n    // Text, Bool etc.\n    return sortAsc(a.toU8a(true), b.toU8a(true));\n  }\n\n  throw new Error(`Attempting to sort unrecognized values: ${stringify(a)} (typeof ${typeof a}) <-> ${stringify(b)} (typeof ${typeof b})`);\n}\nexport function sortSet(set) {\n  return new Set(Array.from(set).sort(sortAsc));\n}\nexport function sortMap(map) {\n  return new Map(Array.from(map.entries()).sort(([keyA], [keyB]) => sortAsc(keyA, keyB)));\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8a, compactToU8a, isHex, isObject, isU8a, logger, stringify, u8aConcat, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from \"../abstract/AbstractArray.js\";\nimport { Enum } from \"../base/Enum.js\";\nimport { Struct } from \"../native/Struct.js\";\nimport { compareMap, decodeU8a, sortMap, typeToConstructor } from \"../utils/index.js\";\nconst l = logger('Map');\n/** @internal */\n\nfunction decodeMapFromU8a(registry, KeyClass, ValClass, u8a) {\n  const output = new Map();\n  const [offset, length] = compactFromU8a(u8a);\n  const count = length.toNumber();\n  const types = [];\n\n  for (let i = 0; i < count; i++) {\n    types.push(KeyClass, ValClass);\n  }\n\n  const [values, decodedLength] = decodeU8a(registry, u8a.subarray(offset), types);\n\n  for (let i = 0; i < values.length; i += 2) {\n    output.set(values[i], values[i + 1]);\n  }\n\n  return [output, offset + decodedLength];\n}\n/** @internal */\n\n\nfunction decodeMapFromMap(registry, KeyClass, ValClass, value) {\n  const output = new Map();\n\n  for (const [key, val] of value.entries()) {\n    const isComplex = KeyClass.prototype instanceof AbstractArray || KeyClass.prototype instanceof Struct || KeyClass.prototype instanceof Enum;\n\n    try {\n      output.set(key instanceof KeyClass ? key : new KeyClass(registry, isComplex ? JSON.parse(key) : key), val instanceof ValClass ? val : new ValClass(registry, val));\n    } catch (error) {\n      l.error('Failed to decode key or value:', error.message);\n      throw error;\n    }\n  }\n\n  return [output, 0];\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param KeyClass - Type of the map key\n * @param ValClass - Type of the map value\n * @param value - Value to decode, one of:\n * - null\n * - undefined\n * - hex\n * - Uint8Array\n * - Map<any, any>, where both key and value types are either\n *   constructors or decodeable values for their types.\n * @param jsonMap\n * @internal\n */\n\n\nfunction decodeMap(registry, keyType, valType, value) {\n  const KeyClass = typeToConstructor(registry, keyType);\n  const ValClass = typeToConstructor(registry, valType);\n\n  if (!value) {\n    return [new Map(), 0];\n  } else if (isU8a(value) || isHex(value)) {\n    return decodeMapFromU8a(registry, KeyClass, ValClass, u8aToU8a(value));\n  } else if (value instanceof Map) {\n    return decodeMapFromMap(registry, KeyClass, ValClass, value);\n  } else if (isObject(value)) {\n    return decodeMapFromMap(registry, KeyClass, ValClass, new Map(Object.entries(value)));\n  }\n\n  throw new Error('Map: cannot decode type');\n}\n\nexport class CodecMap extends Map {\n  #KeyClass;\n  #ValClass;\n  #type;\n\n  constructor(registry, keyType, valType, rawValue, type = 'HashMap') {\n    const [decoded, decodedLength] = decodeMap(registry, keyType, valType, rawValue);\n    super(type === 'BTreeMap' ? sortMap(decoded) : decoded);\n    this.registry = registry;\n    this.initialU8aLength = decodedLength;\n    this.#KeyClass = typeToConstructor(registry, keyType);\n    this.#ValClass = typeToConstructor(registry, valType);\n    this.#type = type;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    let len = compactToU8a(this.size).length;\n\n    for (const [k, v] of this.entries()) {\n      len += k.encodedLength + v.encodedLength;\n    }\n\n    return len;\n  }\n  /**\n   * @description Returns a hash of the value\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.size === 0;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return compareMap(this, other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const inner = new Array();\n\n    for (const [k, v] of this.entries()) {\n      inner.push(k.inspect());\n      inner.push(v.inspect());\n    }\n\n    return {\n      inner,\n      outer: [compactToU8a(this.size)]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    const json = {};\n\n    for (const [k, v] of this.entries()) {\n      json[k.toString()] = v.toHuman(isExtended);\n    }\n\n    return json;\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    const json = {};\n\n    for (const [k, v] of this.entries()) {\n      json[k.toString()] = v.toJSON();\n    }\n\n    return json;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `${this.#type}<${this.registry.getClassName(this.#KeyClass) || new this.#KeyClass(this.registry).toRawType()},${this.registry.getClassName(this.#ValClass) || new this.#ValClass(this.registry).toRawType()}>`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = new Array();\n\n    if (!isBare) {\n      encoded.push(compactToU8a(this.size));\n    }\n\n    for (const [k, v] of this.entries()) {\n      encoded.push(k.toU8a(isBare), v.toU8a(isBare));\n    }\n\n    return u8aConcat(...encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { CodecMap } from \"./Map.js\";\nexport class BTreeMap extends CodecMap {\n  static with(keyType, valType) {\n    return class extends BTreeMap {\n      constructor(registry, value) {\n        super(registry, keyType, valType, value, 'BTreeMap');\n      }\n\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isObject } from '@polkadot/util';\n\nfunction compareSetArray(a, b) {\n  // equal number of entries and each entry in the array should match\n  return a.size === b.length && !b.some(e => !a.has(e));\n} // NOTE These are used internally and when comparing objects, expects that\n// when the second is an Set<string, Codec> that the first has to be as well\n\n\nexport function compareSet(a, b) {\n  if (Array.isArray(b)) {\n    return compareSetArray(a, b);\n  } else if (b instanceof Set) {\n    return compareSetArray(a, [...b.values()]);\n  } else if (isObject(b)) {\n    return compareSetArray(a, Object.values(b));\n  }\n\n  return false;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8a, compactToU8a, isHex, isU8a, logger, stringify, u8aConcat, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { compareSet, decodeU8aVec, sortSet, typeToConstructor } from \"../utils/index.js\";\nconst l = logger('BTreeSet');\n/** @internal */\n\nfunction decodeSetFromU8a(registry, ValClass, u8a) {\n  const output = new Set();\n  const [offset, length] = compactFromU8a(u8a);\n  const [values, decodedLength] = decodeU8aVec(registry, u8a, offset, ValClass, length.toNumber());\n\n  for (let i = 0; i < values.length; i++) {\n    output.add(values[i]);\n  }\n\n  return [output, decodedLength];\n}\n/** @internal */\n\n\nfunction decodeSetFromSet(registry, ValClass, value) {\n  const output = new Set();\n  value.forEach(val => {\n    try {\n      output.add(val instanceof ValClass ? val : new ValClass(registry, val));\n    } catch (error) {\n      l.error('Failed to decode key or value:', error.message);\n      throw error;\n    }\n  });\n  return [output, 0];\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param ValClass - Type of the map value\n * @param value - Value to decode, one of:\n * - null\n * - undefined\n * - hex\n * - Uint8Array\n * - Set<any>, where both key and value types are either\n *   constructors or decodeable values for their types.\n * @param jsonSet\n * @internal\n */\n\n\nfunction decodeSet(registry, valType, value) {\n  if (!value) {\n    return [new Set(), 0];\n  }\n\n  const ValClass = typeToConstructor(registry, valType);\n\n  if (isU8a(value) || isHex(value)) {\n    return decodeSetFromU8a(registry, ValClass, u8aToU8a(value));\n  } else if (Array.isArray(value) || value instanceof Set) {\n    return decodeSetFromSet(registry, ValClass, value);\n  }\n\n  throw new Error('BTreeSet: cannot decode type');\n}\n\nexport class BTreeSet extends Set {\n  #ValClass;\n\n  constructor(registry, valType, rawValue) {\n    const [values, decodedLength] = decodeSet(registry, valType, rawValue);\n    super(sortSet(values));\n    this.registry = registry;\n    this.initialU8aLength = decodedLength;\n    this.#ValClass = typeToConstructor(registry, valType);\n  }\n\n  static with(valType) {\n    return class extends BTreeSet {\n      constructor(registry, value) {\n        super(registry, valType, value);\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    let len = compactToU8a(this.size).length;\n\n    for (const v of this.values()) {\n      len += v.encodedLength;\n    }\n\n    return len;\n  }\n  /**\n   * @description Returns a hash of the value\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.size === 0;\n  }\n  /**\n   * @description The actual set values as a string[]\n   */\n\n\n  get strings() {\n    return [...super.values()].map(v => v.toString());\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return compareSet(this, other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const inner = new Array();\n\n    for (const v of this.values()) {\n      inner.push(v.inspect());\n    }\n\n    return {\n      inner,\n      outer: [compactToU8a(this.size)]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    const json = [];\n\n    for (const v of this.values()) {\n      json.push(v.toHuman(isExtended));\n    }\n\n    return json;\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    const json = [];\n\n    for (const v of this.values()) {\n      json.push(v.toJSON());\n    }\n\n    return json;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `BTreeSet<${this.registry.getClassName(this.#ValClass) || new this.#ValClass(this.registry).toRawType()}>`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = new Array();\n\n    if (!isBare) {\n      encoded.push(compactToU8a(this.size));\n    }\n\n    for (const v of this.values()) {\n      encoded.push(v.toU8a(isBare));\n    }\n\n    return u8aConcat(...encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8a, compactToU8a, isBigInt, isBn, isNumber, isString } from '@polkadot/util';\nimport { typeToConstructor } from \"../utils/index.js\";\n/**\n * @name Compact\n * @description\n * A compact length-encoding codec wrapper. It performs the same function as Length, however\n * differs in that it uses a variable number of bytes to do the actual encoding. This is mostly\n * used by other types to add length-prefixed encoding, or in the case of wrapped types, taking\n * a number and making the compact representation thereof\n */\n\nexport class Compact {\n  #Type;\n  #raw;\n\n  constructor(registry, Type, value = 0) {\n    this.registry = registry;\n    this.#Type = typeToConstructor(registry, Type);\n    const [raw, decodedLength] = Compact.decodeCompact(registry, this.#Type, value);\n    this.initialU8aLength = decodedLength;\n    this.#raw = raw;\n  }\n\n  static with(Type) {\n    return class extends Compact {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n  /** @internal */\n\n\n  static decodeCompact(registry, Type, value) {\n    if (value instanceof Compact) {\n      return [new Type(registry, value.#raw), 0];\n    } else if (value instanceof Type) {\n      return [value, 0];\n    } else if (isString(value) || isNumber(value) || isBn(value) || isBigInt(value)) {\n      return [new Type(registry, value), 0];\n    }\n\n    const [decodedLength, bn] = compactFromU8a(value);\n    return [new Type(registry, bn), decodedLength];\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.#raw.isEmpty;\n  }\n  /**\n   * @description Returns the number of bits in the value\n   */\n\n\n  bitLength() {\n    return this.#raw.bitLength();\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return this.#raw.eq(other instanceof Compact ? other.#raw : other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description Returns a BigInt representation of the number\n   */\n\n\n  toBigInt() {\n    return this.#raw.toBigInt();\n  }\n  /**\n   * @description Returns the BN representation of the number\n   */\n\n\n  toBn() {\n    return this.#raw.toBn();\n  }\n  /**\n   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n   */\n\n\n  toHex(isLe) {\n    return this.#raw.toHex(isLe);\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.#raw.toHuman(isExtended);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.#raw.toJSON();\n  }\n  /**\n   * @description Returns the number representation for the value\n   */\n\n\n  toNumber() {\n    return this.#raw.toNumber();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `Compact<${this.registry.getClassName(this.#Type) || this.#raw.toRawType()}>`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.#raw.toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return compactToU8a(this.#raw.toBn());\n  }\n  /**\n   * @description Returns the embedded [[UInt]] or [[Moment]] value\n   */\n\n\n  unwrap() {\n    return this.#raw;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { CodecMap } from \"./Map.js\";\nexport class HashMap extends CodecMap {\n  static with(keyType, valType) {\n    return class extends HashMap {\n      constructor(registry, value) {\n        super(registry, keyType, valType, value);\n      }\n\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractInt } from \"../abstract/AbstractInt.js\";\n/**\n * @name Int\n * @description\n * A generic signed integer codec. For Substrate all numbers are Little Endian encoded,\n * this handles the encoding and decoding of those numbers. Upon construction\n * the bitLength is provided and any additional use keeps the number to this\n * length. This extends `BN`, so all methods available on a normal `BN` object\n * is available here.\n * @noInheritDoc\n */\n\nexport class Int extends AbstractInt {\n  constructor(registry, value = 0, bitLength) {\n    super(registry, value, bitLength, true);\n  }\n\n  static with(bitLength, typeName) {\n    return class extends Int {\n      constructor(registry, value) {\n        super(registry, value, bitLength);\n      }\n\n      toRawType() {\n        return typeName || super.toRawType();\n      }\n\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isOnObject } from \"./helpers.js\";\nconst checkCodec = isOnObject('toHex', 'toU8a');\nconst checkRegistry = isOnObject('get');\nexport function isCodec(value) {\n  return checkCodec(value) && checkRegistry(value.registry);\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isCodec, isNull, isU8a, isUndefined, u8aToHex } from '@polkadot/util';\nimport { typeToConstructor } from \"../utils/index.js\";\nimport { Null } from \"./Null.js\";\n\nclass None extends Null {\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n  toRawType() {\n    return 'None';\n  }\n\n}\n/** @internal */\n\n\nfunction decodeOption(registry, Type, value) {\n  // In the case of an option, unwrap the inner\n  if (value instanceof Option) {\n    value = value.value;\n  }\n\n  if (isNull(value) || isUndefined(value) || value === '0x' || value instanceof None) {\n    return new None(registry);\n  } else if (value instanceof Type) {\n    // don't re-create, use as it (which also caters for derived types)\n    return value;\n  } else if (isU8a(value)) {\n    // the isU8a check happens last in the if-tree - since the wrapped value\n    // may be an instance of it, so Type and Option checks go in first\n    return !value.length || value[0] === 0 ? new None(registry) : new Type(registry, value.subarray(1));\n  }\n\n  return new Type(registry, value);\n}\n/**\n * @name Option\n * @description\n * An Option is an optional field. Basically the first byte indicates that there is\n * is value to follow. If the byte is `1` there is an actual value. So the Option\n * implements that - decodes, checks for optionality and wraps the required structure\n * with a value if/as required/found.\n */\n\n\nexport class Option {\n  #Type;\n  #initialU8aLength;\n  #raw;\n\n  constructor(registry, typeName, value) {\n    const Type = typeToConstructor(registry, typeName);\n    const decoded = isU8a(value) && value.length && !isCodec(value) ? value[0] === 0 ? new None(registry) : new Type(registry, value.subarray(1)) : decodeOption(registry, Type, value);\n    this.registry = registry;\n    this.#Type = Type;\n    this.#raw = decoded;\n\n    if (decoded && decoded.initialU8aLength) {\n      this.#initialU8aLength = 1 + decoded.initialU8aLength;\n    }\n  }\n\n  static with(Type) {\n    return class extends Option {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    // boolean byte (has value, doesn't have) along with wrapped length\n    return 1 + this.#raw.encodedLength;\n  }\n  /**\n   * @description The length of the initial encoded value (Only available when constructed from a Uint8Array)\n   */\n\n\n  get initialU8aLength() {\n    return this.#initialU8aLength;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the Option has no value\n   */\n\n\n  get isEmpty() {\n    return this.isNone;\n  }\n  /**\n   * @description Checks if the Option has no value\n   */\n\n\n  get isNone() {\n    return this.#raw instanceof None;\n  }\n  /**\n   * @description Checks if the Option has a value\n   */\n\n\n  get isSome() {\n    return !this.isNone;\n  }\n  /**\n   * @description The actual value for the Option\n   */\n\n\n  get value() {\n    return this.#raw;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    if (other instanceof Option) {\n      return this.isSome === other.isSome && this.value.eq(other.value);\n    }\n\n    return this.value.eq(other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    if (this.isNone) {\n      return {\n        outer: [new Uint8Array([0])]\n      };\n    }\n\n    const {\n      inner,\n      outer = []\n    } = this.#raw.inspect();\n    return {\n      inner,\n      outer: [new Uint8Array([1]), ...outer]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    // This attempts to align with the JSON encoding - actually in this case\n    // the isSome value is correct, however the `isNone` may be problematic\n    return this.isNone ? '0x' : u8aToHex(this.toU8a().subarray(1));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.#raw.toHuman(isExtended);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.isNone ? null : this.#raw.toJSON();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType(isBare) {\n    const wrapped = this.registry.getClassName(this.#Type) || new this.#Type(this.registry).toRawType();\n    return isBare ? wrapped : `Option<${wrapped}>`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.#raw.toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    if (isBare) {\n      return this.#raw.toU8a(true);\n    }\n\n    const u8a = new Uint8Array(this.encodedLength);\n\n    if (this.isSome) {\n      u8a.set([1]);\n      u8a.set(this.#raw.toU8a(), 1);\n    }\n\n    return u8a;\n  }\n  /**\n   * @description Returns the value that the Option represents (if available), throws if null\n   */\n\n\n  unwrap() {\n    assert(this.isSome, 'Option: unwrapping a None value');\n    return this.#raw;\n  }\n  /**\n   * @description Returns the value that the Option represents (if available) or defaultValue if none\n   * @param defaultValue The value to return if the option isNone\n   */\n\n\n  unwrapOr(defaultValue) {\n    return this.isSome ? this.unwrap() : defaultValue;\n  }\n  /**\n   * @description Returns the value that the Option represents (if available) or defaultValue if none\n   * @param defaultValue The value to return if the option isNone\n   */\n\n\n  unwrapOrDefault() {\n    return this.isSome ? this.unwrap() : new this.#Type(this.registry);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction, isHex, isString, isU8a, stringify, u8aConcat, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from \"../abstract/AbstractArray.js\";\nimport { decodeU8a, mapToTypeMap, typeToConstructor } from \"../utils/index.js\";\n\n/** @internal */\nfunction decodeTuple(registry, Classes, value) {\n  if (isU8a(value) || isHex(value)) {\n    return decodeU8a(registry, u8aToU8a(value), Classes);\n  }\n\n  const Types = Array.isArray(Classes) ? Classes : Object.values(Classes);\n  return [Types.map((Type, index) => {\n    try {\n      const entry = value === null || value === void 0 ? void 0 : value[index];\n\n      if (entry instanceof Type) {\n        return entry;\n      }\n\n      return new Type(registry, entry);\n    } catch (error) {\n      throw new Error(`Tuple: failed on ${index}:: ${error.message}`);\n    }\n  }), 0];\n}\n/**\n * @name Tuple\n * @description\n * A Tuple defines an anonymous fixed-length array, where each element has its\n * own type. It extends the base JS `Array` object.\n */\n\n\nexport class Tuple extends AbstractArray {\n  #Types;\n\n  constructor(registry, Types, value) {\n    const Classes = Array.isArray(Types) ? Types.map(t => typeToConstructor(registry, t)) : isFunction(Types) || isString(Types) ? [typeToConstructor(registry, Types)] : mapToTypeMap(registry, Types);\n    const [values, decodedLength] = isU8a(value) ? decodeU8a(registry, value, Classes) : decodeTuple(registry, Classes, value);\n    super(registry, values, decodedLength);\n    this.#Types = Classes;\n  }\n\n  static with(Types) {\n    return class extends Tuple {\n      constructor(registry, value) {\n        super(registry, Types, value);\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    let total = 0;\n\n    for (let i = 0; i < this.length; i++) {\n      total += this[i].encodedLength;\n    }\n\n    return total;\n  }\n  /**\n   * @description The types definition of the tuple\n   */\n\n\n  get Types() {\n    return Array.isArray(this.#Types) ? this.#Types.map(T => new T(this.registry).toRawType()) : Object.keys(this.#Types);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      inner: this.inspectInner()\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    const types = (Array.isArray(this.#Types) ? this.#Types : Object.values(this.#Types)).map(T => this.registry.getClassName(T) || new T(this.registry).toRawType());\n    return `(${types.join(',')})`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    // Overwrite the default toString representation of Array.\n    return stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return u8aConcat(...this.toU8aInner(isBare));\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Tuple } from \"../base/Tuple.js\";\n\n/**\n * @name Range\n * @description\n * Rust `Range<T>` representation\n */\nexport class Range extends Tuple {\n  #rangeName;\n\n  constructor(registry, Type, value, rangeName = 'Range') {\n    super(registry, {\n      end: Type,\n      start: Type\n    }, value);\n    this.#rangeName = rangeName;\n  }\n\n  static with(Types) {\n    return class extends Range {\n      constructor(registry, value) {\n        super(registry, Types, value);\n      }\n\n    };\n  }\n  /**\n   * @description Returns the starting range value\n   */\n\n\n  get start() {\n    return this[0];\n  }\n  /**\n   * @description Returns the ending range value\n   */\n\n\n  get end() {\n    return this[1];\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `${this.#rangeName}<${this.start.toRawType()}>`;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Range } from \"./Range.js\";\nexport class RangeInclusive extends Range {\n  constructor(registry, Type, value) {\n    super(registry, Type, value, 'RangeInclusive');\n  }\n\n  static with(Type) {\n    return class extends RangeInclusive {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\nimport { Enum } from \"./Enum.js\";\n/**\n * @name Result\n * @description\n * A Result maps to the Rust Result type, that can either wrap a success or error value\n */\n\nexport class Result extends Enum {\n  constructor(registry, Ok, Err, value) {\n    // NOTE This is order-dependent, Ok (with index 0) needs to be first\n    // eslint-disable-next-line sort-keys\n    super(registry, {\n      Ok,\n      Err\n    }, value);\n  }\n\n  static with(Types) {\n    return class extends Result {\n      constructor(registry, value) {\n        super(registry, Types.Ok, Types.Err, value);\n      }\n\n    };\n  }\n  /**\n   * @description Returns the wrapper Err value (if isErr)\n   */\n\n\n  get asErr() {\n    assert(this.isErr, 'Cannot extract Err value from Ok result, check isErr first');\n    return this.value;\n  }\n  /**\n   * @deprecated Use asErr\n   */\n\n\n  get asError() {\n    return this.asErr;\n  }\n  /**\n   * @description Returns the wrapper Ok value (if isOk)\n   */\n\n\n  get asOk() {\n    assert(this.isOk, 'Cannot extract Ok value from Err result, check isOk first');\n    return this.value;\n  }\n  /**\n   * @description Checks if the Result has no value\n   */\n\n\n  get isEmpty() {\n    return this.isOk && this.value.isEmpty;\n  }\n  /**\n   * @description Checks if the Result wraps an Err value\n   */\n\n\n  get isErr() {\n    return !this.isOk;\n  }\n  /**\n   * @deprecated Use isErr\n   */\n\n\n  get isError() {\n    return this.isErr;\n  }\n  /**\n   * @description Checks if the Result wraps an Ok value\n   */\n\n\n  get isOk() {\n    return this.index === 0;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    const Types = this._toRawStruct();\n\n    return `Result<${Types.Ok},${Types.Err}>`;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, BN, bnToBn, bnToU8a, isBn, isNumber, isString, isU8a, isUndefined, objectProperties, stringify, stringPascalCase, u8aToBn, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { compareArray } from \"../utils/index.js\";\n\nfunction encodeSet(setValues, values) {\n  const encoded = new BN(0);\n\n  for (let i = 0; i < values.length; i++) {\n    encoded.ior(bnToBn(setValues[values[i]] || 0));\n  }\n\n  return encoded;\n}\n/** @internal */\n\n\nfunction decodeSetArray(setValues, values) {\n  const result = new Array(values.length);\n\n  for (let i = 0; i < values.length; i++) {\n    const key = values[i];\n    assert(!isUndefined(setValues[key]), () => `Set: Invalid key '${key}' passed to Set, allowed ${Object.keys(setValues).join(', ')}`);\n    result[i] = key;\n  }\n\n  return result;\n}\n/** @internal */\n\n\nfunction decodeSetNumber(setValues, _value) {\n  const bn = bnToBn(_value);\n  const keys = Object.keys(setValues);\n  const result = [];\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n\n    if (bn.and(bnToBn(setValues[key])).eq(bnToBn(setValues[key]))) {\n      result.push(key);\n    }\n  }\n\n  const computed = encodeSet(setValues, result);\n  assert(bn.eq(computed), () => `Set: Mismatch decoding '${bn.toString()}', computed as '${computed.toString()}' with ${result.join(', ')}`);\n  return result;\n}\n/** @internal */\n\n\nfunction decodeSet(setValues, value = 0, bitLength) {\n  assert(bitLength % 8 === 0, () => `Expected valid bitLength, power of 8, found ${bitLength}`);\n  const byteLength = bitLength / 8;\n\n  if (isU8a(value)) {\n    return value.length === 0 ? [] : decodeSetNumber(setValues, u8aToBn(value.subarray(0, byteLength), {\n      isLe: true\n    }));\n  } else if (isString(value)) {\n    return decodeSet(setValues, u8aToU8a(value), byteLength);\n  } else if (value instanceof Set || Array.isArray(value)) {\n    const input = Array.isArray(value) ? value : [...value.values()];\n    return decodeSetArray(setValues, input);\n  }\n\n  return decodeSetNumber(setValues, value);\n}\n/**\n * @name Set\n * @description\n * An Set is an array of string values, represented an an encoded type by\n * a bitwise representation of the values.\n */\n\n\nexport class CodecSet extends Set {\n  #allowed;\n  #byteLength;\n\n  constructor(registry, setValues, value, bitLength = 8) {\n    super(decodeSet(setValues, value, bitLength));\n    this.registry = registry;\n    this.#allowed = setValues;\n    this.#byteLength = bitLength / 8;\n  }\n\n  static with(values, bitLength) {\n    const keys = Object.keys(values);\n    const isKeys = new Array(keys.length);\n\n    for (let i = 0; i < keys.length; i++) {\n      isKeys[i] = `is${stringPascalCase(keys[i])}`;\n    }\n\n    return class extends CodecSet {\n      constructor(registry, value) {\n        super(registry, values, value, bitLength);\n        objectProperties(this, isKeys, (_, i) => this.strings.includes(keys[i]));\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.#byteLength;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description true is the Set contains no values\n   */\n\n\n  get isEmpty() {\n    return this.size === 0;\n  }\n  /**\n   * @description The actual set values as a string[]\n   */\n\n\n  get strings() {\n    return [...super.values()];\n  }\n  /**\n   * @description The encoded value for the set members\n   */\n\n\n  get valueEncoded() {\n    return encodeSet(this.#allowed, this.strings);\n  }\n  /**\n   * @description adds a value to the Set (extended to allow for validity checking)\n   */\n\n\n  add = key => {\n    // ^^^ add = () property done to assign this instance's this, otherwise Set.add creates \"some\" chaos\n    // we have the isUndefined(this._setValues) in here as well, add is used internally\n    // in the Set constructor (so it is undefined at this point, and should allow)\n    assert(isUndefined(this.#allowed) || !isUndefined(this.#allowed[key]), () => `Set: Invalid key '${key}' on add`);\n    super.add(key);\n    return this;\n  };\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n  eq(other) {\n    if (Array.isArray(other)) {\n      // we don't actually care about the order, sort the values\n      return compareArray(this.strings.sort(), other.sort());\n    } else if (other instanceof Set) {\n      return this.eq([...other.values()]);\n    } else if (isNumber(other) || isBn(other)) {\n      return this.valueEncoded.eq(bnToBn(other));\n    }\n\n    return false;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.strings;\n  }\n  /**\n   * @description The encoded value for the set members\n   */\n\n\n  toNumber() {\n    return this.valueEncoded.toNumber();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return stringify({\n      _set: this.#allowed\n    });\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return `[${this.strings.join(', ')}]`;\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return bnToU8a(this.valueEncoded, {\n      bitLength: this.#byteLength * 8,\n      isLe: true\n    });\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, compactFromU8a, logger, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from \"../abstract/AbstractArray.js\";\nimport { decodeU8aVec, typeToConstructor } from \"../utils/index.js\";\nconst MAX_LENGTH = 64 * 1024;\nconst l = logger('Vec');\nexport function decodeVec(registry, Type, value, length = -1) {\n  if (Array.isArray(value)) {\n    const result = new Array(value.length);\n\n    for (let i = 0; i < value.length; i++) {\n      const entry = value[i];\n\n      try {\n        result[i] = entry instanceof Type ? entry : new Type(registry, entry);\n      } catch (error) {\n        l.error(`Unable to decode on index ${i}`, error.message);\n        throw error;\n      }\n    }\n\n    return [result, 0, 0];\n  }\n\n  const u8a = u8aToU8a(value);\n  let offset = 0;\n\n  if (length === -1) {\n    const [_offset, _length] = compactFromU8a(u8a);\n    assert(_length.lten(MAX_LENGTH), () => `Vec length ${_length.toString()} exceeds ${MAX_LENGTH}`);\n    length = _length.toNumber();\n    offset = _offset;\n  }\n\n  return decodeU8aVec(registry, u8a, offset, Type, length);\n}\n/**\n * @name Vec\n * @description\n * This manages codec arrays. Internally it keeps track of the length (as decoded) and allows\n * construction with the passed `Type` in the constructor. It is an extension to Array, providing\n * specific encoding/decoding on top of the base type.\n */\n\nexport class Vec extends AbstractArray {\n  #Type;\n\n  constructor(registry, Type, value = []) {\n    const Clazz = typeToConstructor(registry, Type);\n    const [values, decodedLength] = decodeVec(registry, Clazz, value);\n    super(registry, values, decodedLength);\n    this.#Type = Clazz;\n  }\n\n  static with(Type) {\n    return class extends Vec {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n  /**\n   * @description The type for the items\n   */\n\n\n  get Type() {\n    return this.#Type.name;\n  }\n  /**\n   * @description Finds the index of the value in the array\n   */\n\n\n  indexOf(_other) {\n    // convert type first, this removes overhead from the eq\n    const other = _other instanceof this.#Type ? _other : new this.#Type(this.registry, _other);\n\n    for (let i = 0; i < this.length; i++) {\n      if (other.eq(this[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `Vec<${this.registry.getClassName(this.#Type) || new this.#Type(this.registry).toRawType()}>`;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from \"../native/Raw.js\";\n/** @internal */\n\nfunction decodeU8aFixed(value, bitLength) {\n  const u8a = u8aToU8a(value);\n  const byteLength = bitLength / 8;\n\n  if (!u8a.length) {\n    return [new Uint8Array(byteLength), 0];\n  }\n\n  assert(isU8a(value) ? u8a.length >= byteLength : u8a.length === byteLength, () => `Expected input with ${byteLength} bytes (${bitLength} bits), found ${u8a.length} bytes`);\n  return [u8a.subarray(0, byteLength), byteLength];\n}\n/**\n * @name U8aFixed\n * @description\n * A U8a that manages a a sequence of bytes up to the specified bitLength. Not meant\n * to be used directly, rather is should be subclassed with the specific lengths.\n */\n\n\nexport class U8aFixed extends Raw {\n  constructor(registry, value = new Uint8Array(), bitLength = 256) {\n    const [u8a, decodedLength] = decodeU8aFixed(value, bitLength);\n    super(registry, u8a, decodedLength);\n  }\n\n  static with(bitLength, typeName) {\n    return class extends U8aFixed {\n      constructor(registry, value) {\n        super(registry, value, bitLength);\n      }\n\n      toRawType() {\n        return typeName || super.toRawType();\n      }\n\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `[u8;${this.length}]`;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isU8a, u8aConcat } from '@polkadot/util';\nimport { AbstractArray } from \"../abstract/AbstractArray.js\";\nimport { decodeU8aVec, typeToConstructor } from \"../utils/index.js\";\nimport { decodeVec } from \"./Vec.js\";\n/** @internal */\n\nfunction decodeVecFixed(registry, value, Type, length) {\n  const [values, decodedLength, decodedLengthNoOffset] = decodeVec(registry, Type, value, length);\n\n  while (values.length < length) {\n    values.push(new Type(registry));\n  }\n\n  assert(values.length === length, () => `Expected a length of exactly ${length} entries`);\n  return [values, decodedLength, decodedLengthNoOffset];\n}\n/**\n * @name VecFixed\n * @description\n * This manages codec arrays of a fixed length\n */\n\n\nexport class VecFixed extends AbstractArray {\n  #Type;\n\n  constructor(registry, Type, length, value = []) {\n    const Clazz = typeToConstructor(registry, Type);\n    const [values,, decodedLengthNoOffset] = isU8a(value) ? decodeU8aVec(registry, value, 0, Clazz, length) : decodeVecFixed(registry, value, Clazz, length);\n    super(registry, values, decodedLengthNoOffset);\n    this.#Type = Clazz;\n  }\n\n  static with(Type, length) {\n    return class extends VecFixed {\n      constructor(registry, value) {\n        super(registry, Type, length, value);\n      }\n\n    };\n  }\n  /**\n   * @description The type for the items\n   */\n\n\n  get Type() {\n    return new this.#Type(this.registry).toRawType();\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    let total = 0;\n\n    for (let i = 0; i < this.length; i++) {\n      total += this[i].encodedLength;\n    }\n\n    return total;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      inner: this.inspectInner()\n    };\n  }\n\n  toU8a() {\n    // we override, we don't add the length prefix for ourselves, and at the same time we\n    // ignore isBare on entries, since they should be properly encoded at all times\n    const encoded = this.toU8aInner();\n    return encoded.length ? u8aConcat(...encoded) : new Uint8Array([]);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `[${this.Type};${this.length}]`;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assertReturn, compactAddLength, compactStripLength, compactToU8a, isHex, isU8a } from '@polkadot/util';\nimport { Raw } from \"../native/Raw.js\";\nimport { typeToConstructor } from \"../utils/index.js\";\nimport { Bytes } from \"./Bytes.js\";\n\nfunction decodeRaw(registry, typeName, value) {\n  const Type = typeToConstructor(registry, typeName);\n\n  if (isU8a(value) || isHex(value)) {\n    try {\n      const [, u8a] = isHex(value) || value instanceof Raw ? [0, value] : compactStripLength(value);\n      return [Type, new Type(registry, u8a), value];\n    } catch {\n      return [Type, null, value];\n    }\n  }\n\n  const instance = new Type(registry, value);\n  return [Type, instance, compactAddLength(instance.toU8a())];\n}\n\nexport class WrapperKeepOpaque extends Bytes {\n  #Type;\n  #decoded;\n  #opaqueName;\n\n  constructor(registry, typeName, value, opaqueName = 'WrapperKeepOpaque') {\n    const [Type, decoded, u8a] = decodeRaw(registry, typeName, value);\n    super(registry, u8a);\n    this.#Type = Type;\n    this.#decoded = decoded;\n    this.#opaqueName = opaqueName;\n  }\n\n  static with(Type) {\n    return class extends WrapperKeepOpaque {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n  /**\n   * @description Checks if the wrapper is decodable\n   */\n\n\n  get isDecoded() {\n    return !!this.#decoded;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return this.#decoded ? {\n      inner: [this.#decoded.inspect()],\n      outer: [compactToU8a(this.length)]\n    } : {\n      outer: [compactToU8a(this.length), this.toU8a(true)]\n    };\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.#decoded ? this.#decoded.toHuman(isExtended) : super.toHuman();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `${this.#opaqueName}<${this.registry.getClassName(this.#Type) || (this.#decoded ? this.#decoded.toRawType() : new this.#Type(this.registry).toRawType())}>`;\n  }\n  /**\n   * @description Converts the Object to to a string (either decoded or bytes)\n   */\n\n\n  toString() {\n    return this.#decoded ? this.#decoded.toString() : super.toString();\n  }\n  /**\n   * @description Returns the decoded that the WrapperKeepOpaque represents (if available), throws if non-decodable\n   */\n\n\n  unwrap() {\n    return assertReturn(this.#decoded, () => `${this.#opaqueName}: unwrapping an undecodable value`);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { WrapperKeepOpaque } from \"./WrapperKeepOpaque.js\";\nexport class WrapperOpaque extends WrapperKeepOpaque {\n  constructor(registry, typeName, value) {\n    super(registry, typeName, value, 'WrapperOpaque');\n  }\n\n  static with(Type) {\n    return class extends WrapperOpaque {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n  /**\n   * @description The inner value for this wrapper, in all cases it _should_ be decodable (unlike KeepOpaque)\n   */\n\n\n  get inner() {\n    return this.unwrap();\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BTreeMap, BTreeSet, Bytes, CodecSet, Compact, DoNotConstruct, Enum, HashMap, Int, Null, Option, Range, RangeInclusive, Result, Struct, Tuple, U8aFixed, UInt, Vec, VecFixed, WrapperKeepOpaque, WrapperOpaque } from '@polkadot/types-codec';\nimport { assert, isNumber, stringify } from '@polkadot/util';\nimport { TypeDefInfo } from \"../types/index.js\";\nimport { getTypeDef } from \"../util/getTypeDef.js\";\n\nfunction getTypeDefType({\n  lookupName,\n  type\n}) {\n  return lookupName || type;\n}\n\nfunction getSubDefArray(value) {\n  assert(value.sub && Array.isArray(value.sub), () => `Expected subtype as TypeDef[] in ${stringify(value)}`);\n  return value.sub;\n}\n\nfunction getSubDef(value) {\n  assert(value.sub && !Array.isArray(value.sub), () => `Expected subtype as TypeDef in ${stringify(value)}`);\n  return value.sub;\n}\n\nfunction getSubType(value) {\n  return getTypeDefType(getSubDef(value));\n} // create a maps of type string CodecClasss from the input\n\n\nfunction getTypeClassMap(value) {\n  const subs = getSubDefArray(value);\n  const map = {};\n\n  for (let i = 0; i < subs.length; i++) {\n    map[subs[i].name] = getTypeDefType(subs[i]);\n  }\n\n  return map;\n} // create an array of type string CodecClasss from the input\n\n\nfunction getTypeClassArray(value) {\n  return getSubDefArray(value).map(getTypeDefType);\n}\n\nfunction createInt(Clazz, {\n  displayName,\n  length\n}) {\n  assert(isNumber(length), () => `Expected bitLength information for ${displayName || Clazz.constructor.name}<bitLength>`);\n  return Clazz.with(length, displayName);\n}\n\nfunction createHashMap(Clazz, value) {\n  const [keyType, valueType] = getTypeClassArray(value);\n  return Clazz.with(keyType, valueType);\n}\n\nfunction createWithSub(Clazz, value) {\n  return Clazz.with(getSubType(value));\n}\n\nconst infoMapping = {\n  [TypeDefInfo.BTreeMap]: (registry, value) => createHashMap(BTreeMap, value),\n  [TypeDefInfo.BTreeSet]: (registry, value) => createWithSub(BTreeSet, value),\n  [TypeDefInfo.Compact]: (registry, value) => createWithSub(Compact, value),\n  [TypeDefInfo.DoNotConstruct]: (registry, value) => DoNotConstruct.with(value.displayName || value.type),\n  [TypeDefInfo.Enum]: (registry, value) => {\n    const subs = getSubDefArray(value);\n    return Enum.with(subs.every(({\n      type\n    }) => type === 'Null') ? subs.reduce((out, {\n      index,\n      name\n    }, count) => {\n      out[name] = index || count;\n      return out;\n    }, {}) : getTypeClassMap(value));\n  },\n  [TypeDefInfo.HashMap]: (registry, value) => createHashMap(HashMap, value),\n  [TypeDefInfo.Int]: (registry, value) => createInt(Int, value),\n  // We have circular deps between Linkage & Struct\n  [TypeDefInfo.Linkage]: (registry, value) => {\n    const type = `Option<${getSubType(value)}>`; // eslint-disable-next-line sort-keys\n\n    const Clazz = Struct.with({\n      previous: type,\n      next: type\n    }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n    Clazz.prototype.toRawType = function () {\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call\n      return `Linkage<${this.next.toRawType(true)}>`;\n    };\n\n    return Clazz;\n  },\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [TypeDefInfo.Null]: (registry, _) => Null,\n  [TypeDefInfo.Option]: (registry, value) => createWithSub(Option, value),\n  [TypeDefInfo.Plain]: (registry, value) => registry.getOrUnknown(value.type),\n  [TypeDefInfo.Range]: (registry, value) => createWithSub(Range, value),\n  [TypeDefInfo.RangeInclusive]: (registry, value) => createWithSub(RangeInclusive, value),\n  [TypeDefInfo.Result]: (registry, value) => {\n    const [Ok, Err] = getTypeClassArray(value); // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return Result.with({\n      Err,\n      Ok\n    });\n  },\n  [TypeDefInfo.Set]: (registry, value) => CodecSet.with(getSubDefArray(value).reduce((result, {\n    index,\n    name\n  }) => {\n    result[name] = index;\n    return result;\n  }, {}), value.length),\n  [TypeDefInfo.Si]: (registry, value) => getTypeClass(registry, registry.lookup.getTypeDef(value.type)),\n  [TypeDefInfo.Struct]: (registry, value) => Struct.with(getTypeClassMap(value), value.alias),\n  [TypeDefInfo.Tuple]: (registry, value) => Tuple.with(getTypeClassArray(value)),\n  [TypeDefInfo.UInt]: (registry, value) => createInt(UInt, value),\n  [TypeDefInfo.Vec]: (registry, {\n    sub\n  }) => {\n    assert(sub && !Array.isArray(sub), 'Expected type information for vector');\n    return sub.type === 'u8' ? Bytes : Vec.with(getTypeDefType(sub));\n  },\n  [TypeDefInfo.VecFixed]: (registry, {\n    displayName,\n    length,\n    sub\n  }) => {\n    assert(sub && isNumber(length) && !Array.isArray(sub), 'Expected length & type information for fixed vector');\n    return sub.type === 'u8' ? U8aFixed.with(length * 8, displayName) : VecFixed.with(getTypeDefType(sub), length);\n  },\n  [TypeDefInfo.WrapperKeepOpaque]: (registry, value) => createWithSub(WrapperKeepOpaque, value),\n  [TypeDefInfo.WrapperOpaque]: (registry, value) => createWithSub(WrapperOpaque, value)\n};\nexport function constructTypeClass(registry, typeDef) {\n  try {\n    const Type = infoMapping[typeDef.info](registry, typeDef);\n    assert(Type, 'No class created'); // don't clobber any existing\n\n    if (!Type.__fallbackType && typeDef.fallbackType) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore ...this is the only place we we actually assign this...\n      Type.__fallbackType = typeDef.fallbackType;\n    }\n\n    return Type;\n  } catch (error) {\n    throw new Error(`Unable to construct class from ${stringify(typeDef)}: ${error.message}`);\n  }\n} // Returns the type Class for construction\n\nexport function getTypeClass(registry, typeDef) {\n  return registry.getUnsafe(typeDef.type, false, typeDef);\n}\nexport function createClassUnsafe(registry, type) {\n  return getTypeClass(registry, registry.isLookupType(type) ? registry.lookup.getTypeDef(type) : getTypeDef(type));\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Option } from '@polkadot/types-codec';\nimport { assert, isHex, isU8a, u8aEq, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { createClassUnsafe } from \"./class.js\"; // With isPedantic, actually check that the encoding matches that supplied. This\n// is much slower, but verifies that we have the correct types defined\n\nfunction checkInstance(created, matcher) {\n  const u8a = created.toU8a();\n  const rawType = created.toRawType();\n  const isOk = // full match, all ok\n  u8aEq(u8a, matcher) || // on a length-prefixed type, just check the actual length\n  ['Bytes', 'Text', 'Type'].includes(rawType) && matcher.length === created.length || // when the created is empty and matcher is also empty, let it slide...\n  created.isEmpty && matcher.every(v => !v);\n  assert(isOk, () => `${rawType}:: Decoded input doesn't match input, received ${u8aToHex(matcher, 512)} (${matcher.length} bytes), created ${u8aToHex(u8a, 512)} (${u8a.length} bytes)`);\n}\n\nfunction checkPedantic(created, [value], isPedantic = false) {\n  if (isPedantic) {\n    if (isU8a(value)) {\n      checkInstance(created, value);\n    } else if (isHex(value)) {\n      checkInstance(created, u8aToU8a(value));\n    }\n  }\n} // Initializes a type with a value. This also checks for fallbacks and in the cases\n// where isPedantic is specified (storage decoding), also check the format/structure\n\n\nfunction initType(registry, Type, params = [], {\n  blockHash,\n  isOptional,\n  isPedantic\n} = {}) {\n  const created = new (isOptional ? Option.with(Type) : Type)(registry, ...params);\n  checkPedantic(created, params, isPedantic);\n\n  if (blockHash) {\n    created.createdAtHash = createTypeUnsafe(registry, 'Hash', [blockHash]);\n  }\n\n  return created;\n} // An unsafe version of the `createType` below. It's unsafe because the `type`\n// argument here can be any string, which, when it cannot parse, will yield a\n// runtime error.\n\n\nexport function createTypeUnsafe(registry, type, params = [], options = {}) {\n  let Clazz = null;\n  let firstError = null;\n\n  try {\n    Clazz = createClassUnsafe(registry, type);\n    return initType(registry, Clazz, params, options);\n  } catch (error) {\n    firstError = new Error(`createType(${type}):: ${error.message}`);\n  }\n\n  if (Clazz && Clazz.__fallbackType) {\n    try {\n      Clazz = createClassUnsafe(registry, Clazz.__fallbackType);\n      return initType(registry, Clazz, params, options);\n    } catch {// swallow, we will throw the first error again\n    }\n  }\n\n  throw firstError;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const emptyCheck = {\n  extrinsic: {},\n  payload: {}\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { emptyCheck } from \"./emptyCheck.js\";\nexport const polkadot = {\n  LimitParathreadCommits: emptyCheck,\n  OnlyStakingAndClaims: emptyCheck,\n  PrevalidateAttests: emptyCheck,\n  RestrictFunctionality: emptyCheck,\n  TransactionCallFilter: emptyCheck,\n  ValidateDoubleVoteReports: emptyCheck\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { emptyCheck } from \"./emptyCheck.js\";\nexport const shell = {\n  DisallowSigned: emptyCheck\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { emptyCheck } from \"./emptyCheck.js\";\nconst CheckMortality = {\n  extrinsic: {\n    era: 'ExtrinsicEra'\n  },\n  payload: {\n    blockHash: 'Hash'\n  }\n};\nexport const substrate = {\n  ChargeTransactionPayment: {\n    extrinsic: {\n      tip: 'Compact<Balance>'\n    },\n    payload: {}\n  },\n  CheckBlockGasLimit: emptyCheck,\n  CheckEra: CheckMortality,\n  CheckGenesis: {\n    extrinsic: {},\n    payload: {\n      genesisHash: 'Hash'\n    }\n  },\n  CheckMortality,\n  CheckNonZeroSender: emptyCheck,\n  CheckNonce: {\n    extrinsic: {\n      nonce: 'Compact<Index>'\n    },\n    payload: {}\n  },\n  CheckSpecVersion: {\n    extrinsic: {},\n    payload: {\n      specVersion: 'u32'\n    }\n  },\n  CheckTxVersion: {\n    extrinsic: {},\n    payload: {\n      transactionVersion: 'u32'\n    }\n  },\n  CheckVersion: {\n    extrinsic: {},\n    payload: {\n      specVersion: 'u32'\n    }\n  },\n  CheckWeight: emptyCheck,\n  LockStakingStatus: emptyCheck,\n  ValidateEquivocationReport: emptyCheck\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util';\nimport { polkadot } from \"./polkadot.js\";\nimport { shell } from \"./shell.js\";\nimport { statemint } from \"./statemint.js\";\nimport { substrate } from \"./substrate.js\"; // A mapping of the known signed extensions to the extra fields that they\n// contain. Unlike in the actual extensions, we define the extra fields not\n// as a Tuple, but rather as a struct so they can be named. These will be\n// expanded into the various fields when added to the payload (we only\n// support V4 onwards with these, V3 and earlier are deemed fixed))\n\nexport const allExtensions = objectSpread({}, substrate, polkadot, shell, statemint); // the v4 signed extensions prior to the point of exposing these to the\n// metadata. This may not match 100% with the current defaults and are used\n// when not specified in the metadata (which is for very old chains). The\n// order is important here, as applied by default\n\nexport const fallbackExtensions = ['CheckVersion', 'CheckGenesis', 'CheckEra', 'CheckNonce', 'CheckWeight', 'ChargeTransactionPayment', 'CheckBlockGasLimit'];\nexport function findUnknownExtensions(extensions, userExtensions = {}) {\n  const names = [...Object.keys(allExtensions), ...Object.keys(userExtensions)];\n  return extensions.filter(k => !names.includes(k));\n}\nexport function expandExtensionTypes(extensions, type, userExtensions = {}) {\n  return extensions // Always allow user extensions first - these should provide overrides\n  .map(k => userExtensions[k] || allExtensions[k]).filter(info => !!info).reduce((result, info) => objectSpread(result, info[type]), {});\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const statemint = {\n  ChargeAssetTxPayment: {\n    extrinsic: {\n      tip: 'Compact<Balance>',\n      // eslint-disable-next-line sort-keys\n      assetId: 'Option<AssetId>'\n    },\n    payload: {}\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Null, Struct, Tuple } from '@polkadot/types-codec';\nimport { objectSpread } from '@polkadot/util';\n\n/** @internal */\nfunction decodeEvent(registry, value) {\n  if (!value || !value.length) {\n    return {\n      DataType: Null\n    };\n  }\n\n  const index = value.subarray(0, 2);\n  return {\n    DataType: registry.findMetaEvent(index),\n    value: {\n      data: value.subarray(2),\n      index\n    }\n  };\n}\n/**\n * @name GenericEventData\n * @description\n * Wrapper for the actual data that forms part of an [[Event]]\n */\n\n\nexport class GenericEventData extends Tuple {\n  #meta;\n  #method;\n  #section;\n  #typeDef;\n\n  constructor(registry, value, meta, section = '<unknown>', method = '<unknown>') {\n    const fields = (meta === null || meta === void 0 ? void 0 : meta.fields) || [];\n    super(registry, fields.map(({\n      type\n    }) => registry.createLookupType(type)), value);\n    this.#meta = meta;\n    this.#method = method;\n    this.#section = section;\n    this.#typeDef = fields.map(({\n      type\n    }) => registry.lookup.getTypeDef(type));\n  }\n  /**\n   * @description The wrapped [[EventMetadata]]\n   */\n\n\n  get meta() {\n    return this.#meta;\n  }\n  /**\n   * @description The method as a string\n   */\n\n\n  get method() {\n    return this.#method;\n  }\n  /**\n   * @description The section as a string\n   */\n\n\n  get section() {\n    return this.#section;\n  }\n  /**\n   * @description The [[TypeDef]] for this event\n   */\n\n\n  get typeDef() {\n    return this.#typeDef;\n  }\n\n}\n/**\n * @name GenericEvent\n * @description\n * A representation of a system event. These are generated via the [[Metadata]] interfaces and\n * specific to a specific Substrate runtime\n */\n\nexport class GenericEvent extends Struct {\n  // Currently we _only_ decode from Uint8Array, since we expect it to\n  // be used via EventRecord\n  constructor(registry, _value) {\n    const {\n      DataType,\n      value\n    } = decodeEvent(registry, _value);\n    super(registry, {\n      index: 'EventId',\n      // eslint-disable-next-line sort-keys\n      data: DataType\n    }, value);\n  }\n  /**\n   * @description The wrapped [[EventData]]\n   */\n\n\n  get data() {\n    return this.getT('data');\n  }\n  /**\n   * @description The [[EventId]], identifying the raw event\n   */\n\n\n  get index() {\n    return this.getT('index');\n  }\n  /**\n   * @description The [[EventMetadata]] with the documentation\n   */\n\n\n  get meta() {\n    return this.data.meta;\n  }\n  /**\n   * @description The method string identifying the event\n   */\n\n\n  get method() {\n    return this.data.method;\n  }\n  /**\n   * @description The section string identifying the event\n   */\n\n\n  get section() {\n    return this.data.section;\n  }\n  /**\n   * @description The [[TypeDef]] for the event\n   */\n\n\n  get typeDef() {\n    return this.data.typeDef;\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExpanded) {\n    return objectSpread({\n      method: this.method,\n      section: this.section\n    }, isExpanded ? {\n      docs: this.meta.docs.map(d => d.toString())\n    } : null, super.toHuman(isExpanded));\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name Base\n * @description A type extends the Base class, when it holds a value\n */\nexport class Base {\n  #registry;\n  #raw;\n\n  constructor(registry, value, initialU8aLength) {\n    this.#registry = registry;\n    this.#raw = value;\n    this.initialU8aLength = initialU8aLength;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n\n  get inner() {\n    return this.#raw;\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.#raw.isEmpty;\n  }\n\n  get registry() {\n    return this.#registry;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return this.#raw.eq(other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return this.#raw.inspect();\n  }\n  /**\n   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n   */\n\n\n  toHex(isLe) {\n    return this.#raw.toHex(isLe);\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.#raw.toHuman(isExtended);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.#raw.toJSON();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.#raw.toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return this.#raw.toU8a(isBare);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Base';\n  }\n\n  unwrap() {\n    return this.#raw;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const BIT_SIGNED = 0b10000000;\nexport const BIT_UNSIGNED = 0;\nexport const EMPTY_U8A = new Uint8Array();\nexport const DEFAULT_VERSION = 4;\nexport const IMMORTAL_ERA = new Uint8Array([0]);\nexport const UNMASK_VERSION = 0b01111111;","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Base } from '@polkadot/types-codec';\nimport { assert, compactAddLength, compactFromU8a, compactToU8a, isHex, isU8a, objectProperty, objectSpread, u8aConcat, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { BIT_SIGNED, BIT_UNSIGNED, DEFAULT_VERSION, UNMASK_VERSION } from \"./constants.js\";\nconst VERSIONS = ['ExtrinsicUnknown', // v0 is unknown\n'ExtrinsicUnknown', 'ExtrinsicUnknown', 'ExtrinsicUnknown', 'ExtrinsicV4'];\nexport { EXTRINSIC_VERSION as LATEST_EXTRINSIC_VERSION } from \"./v4/Extrinsic.js\";\n/** @internal */\n\nfunction newFromValue(registry, value, version) {\n  if (value instanceof GenericExtrinsic) {\n    return value.unwrap();\n  }\n\n  const isSigned = (version & BIT_SIGNED) === BIT_SIGNED;\n  const type = VERSIONS[version & UNMASK_VERSION] || VERSIONS[0]; // we cast here since the VERSION definition is incredibly broad - we don't have a\n  // slice for \"only add extrinsic types\", and more string definitions become unwieldy\n\n  return registry.createTypeUnsafe(type, [value, {\n    isSigned,\n    version\n  }]);\n}\n/** @internal */\n\n\nfunction decodeExtrinsic(registry, value, version = DEFAULT_VERSION) {\n  if (isU8a(value) || Array.isArray(value) || isHex(value)) {\n    return decodeU8a(registry, u8aToU8a(value), version);\n  } else if (value instanceof registry.createClassUnsafe('Call')) {\n    return newFromValue(registry, {\n      method: value\n    }, version);\n  }\n\n  return newFromValue(registry, value, version);\n}\n/** @internal */\n\n\nfunction decodeU8a(registry, value, version) {\n  if (!value.length) {\n    return newFromValue(registry, new Uint8Array(), version);\n  }\n\n  const [offset, length] = compactFromU8a(value);\n  const total = offset + length.toNumber();\n  assert(total <= value.length, () => `Extrinsic: length less than remainder, expected at least ${total}, found ${value.length}`);\n  const data = value.subarray(offset, total);\n  return newFromValue(registry, data.subarray(1), data[0]);\n}\n\nclass ExtrinsicBase extends Base {\n  constructor(registry, value, initialU8aLength) {\n    super(registry, value, initialU8aLength);\n    const signKeys = Object.keys(registry.getSignedExtensionTypes());\n\n    const getter = key => this.inner.signature[key]; // This is on the abstract class, ensuring that hasOwnProperty operates\n    // correctly, i.e. it needs to be on the base class exposing it\n\n\n    for (let i = 0; i < signKeys.length; i++) {\n      objectProperty(this, signKeys[i], getter);\n    }\n  }\n  /**\n   * @description The arguments passed to for the call, exposes args so it is compatible with [[Call]]\n   */\n\n\n  get args() {\n    return this.method.args;\n  }\n  /**\n   * @description The argument definitions, compatible with [[Call]]\n   */\n\n\n  get argsDef() {\n    return this.method.argsDef;\n  }\n  /**\n   * @description The actual `[sectionIndex, methodIndex]` as used in the Call\n   */\n\n\n  get callIndex() {\n    return this.method.callIndex;\n  }\n  /**\n   * @description The actual data for the Call\n   */\n\n\n  get data() {\n    return this.method.data;\n  }\n  /**\n   * @description The era for this extrinsic\n   */\n\n\n  get era() {\n    return this.inner.signature.era;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description `true` id the extrinsic is signed\n   */\n\n\n  get isSigned() {\n    return this.inner.signature.isSigned;\n  }\n  /**\n   * @description The length of the actual data, excluding prefix\n   */\n\n\n  get length() {\n    return this.toU8a(true).length;\n  }\n  /**\n   * @description The [[FunctionMetadataLatest]] that describes the extrinsic\n   */\n\n\n  get meta() {\n    return this.method.meta;\n  }\n  /**\n   * @description The [[Call]] this extrinsic wraps\n   */\n\n\n  get method() {\n    return this.inner.method;\n  }\n  /**\n   * @description The nonce for this extrinsic\n   */\n\n\n  get nonce() {\n    return this.inner.signature.nonce;\n  }\n\n  get registry() {\n    return super.registry;\n  }\n  /**\n   * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n   */\n\n\n  get signature() {\n    return this.inner.signature.signature;\n  }\n  /**\n   * @description The [[Address]] that signed\n   */\n\n\n  get signer() {\n    return this.inner.signature.signer;\n  }\n  /**\n   * @description Forwards compat\n   */\n\n\n  get tip() {\n    return this.inner.signature.tip;\n  }\n  /**\n   * @description Returns the raw transaction version (not flagged with signing information)\n  */\n\n\n  get type() {\n    return this.inner.version;\n  }\n\n  get inner() {\n    return this.unwrap();\n  }\n  /**\n   * @description Returns the encoded version flag\n  */\n\n\n  get version() {\n    return this.type | (this.isSigned ? BIT_SIGNED : BIT_UNSIGNED);\n  }\n  /**\n   * @description Checks if the source matches this in type\n   */\n\n\n  is(other) {\n    return this.method.is(other);\n  }\n\n  unwrap() {\n    return super.unwrap();\n  }\n\n}\n/**\n * @name GenericExtrinsic\n * @description\n * Representation of an Extrinsic in the system. It contains the actual call,\n * (optional) signature and encodes with an actual length prefix\n *\n * {@link https://github.com/paritytech/wiki/blob/master/Extrinsic.md#the-extrinsic-format-for-node}.\n *\n * Can be:\n * - signed, to create a transaction\n * - left as is, to create an inherent\n */\n\n\nexport class GenericExtrinsic extends ExtrinsicBase {\n  #hashCache;\n\n  constructor(registry, value, {\n    version\n  } = {}) {\n    super(registry, decodeExtrinsic(registry, value, version));\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    if (!this.#hashCache) {\n      this.#hashCache = super.hash;\n    }\n\n    return this.#hashCache;\n  }\n  /**\n   * @description Injects an already-generated signature into the extrinsic\n   */\n\n\n  addSignature(signer, signature, payload) {\n    this.inner.addSignature(signer, signature, payload);\n    this.#hashCache = undefined;\n    return this;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const encoded = u8aConcat(...this.toU8aInner());\n    return {\n      inner: this.inner.inspect().inner,\n      outer: [compactToU8a(encoded.length), new Uint8Array([this.version])]\n    };\n  }\n  /**\n   * @description Sign the extrinsic with a specific keypair\n   */\n\n\n  sign(account, options) {\n    this.inner.sign(account, options);\n    this.#hashCache = undefined;\n    return this;\n  }\n  /**\n   * @describe Adds a fake signature to the extrinsic\n   */\n\n\n  signFake(signer, options) {\n    this.inner.signFake(signer, options);\n    this.#hashCache = undefined;\n    return this;\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex(isBare) {\n    return u8aToHex(this.toU8a(isBare));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExpanded) {\n    return objectSpread({}, {\n      isSigned: this.isSigned,\n      method: this.method.toHuman(isExpanded)\n    }, this.isSigned ? {\n      era: this.era.toHuman(isExpanded),\n      nonce: this.nonce.toHuman(isExpanded),\n      signature: this.signature.toHex(),\n      signer: this.signer.toHuman(isExpanded),\n      tip: this.tip.toHuman(isExpanded)\n    } : null);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toHex();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Extrinsic';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value is not length-prefixed\n   */\n\n\n  toU8a(isBare) {\n    const encoded = u8aConcat(...this.toU8aInner());\n    return isBare ? encoded : compactAddLength(encoded);\n  }\n\n  toU8aInner() {\n    // we do not apply bare to the internal values, rather this only determines out length addition,\n    // where we strip all lengths this creates an extrinsic that cannot be decoded\n    return [new Uint8Array([this.version]), this.inner.toU8a()];\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u64\n * @description\n * A 64-bit unsigned integer\n */\n\nexport class u64 extends UInt.with(64) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u64';\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Enum, Raw, Tuple, U64 } from '@polkadot/types-codec';\nimport { assert, bnToBn, formatNumber, hexToU8a, isHex, isObject, isU8a, u8aToBn, u8aToU8a } from '@polkadot/util';\nimport { IMMORTAL_ERA } from \"./constants.js\";\n\nfunction getTrailingZeros(period) {\n  const binary = period.toString(2);\n  let index = 0;\n\n  while (binary[binary.length - 1 - index] === '0') {\n    index++;\n  }\n\n  return index;\n}\n/** @internal */\n\n\nfunction decodeMortalEra(registry, value) {\n  if (isU8a(value) || isHex(value) || Array.isArray(value)) {\n    return decodeMortalU8a(registry, u8aToU8a(value));\n  } else if (!value) {\n    return [new U64(registry), new U64(registry)];\n  } else if (isObject(value)) {\n    return decodeMortalObject(registry, value);\n  }\n\n  throw new Error('Invalid data passed to Mortal era');\n}\n/** @internal */\n\n\nfunction decodeMortalObject(registry, value) {\n  const {\n    current,\n    period\n  } = value;\n  let calPeriod = Math.pow(2, Math.ceil(Math.log2(period)));\n  calPeriod = Math.min(Math.max(calPeriod, 4), 1 << 16);\n  const phase = current % calPeriod;\n  const quantizeFactor = Math.max(calPeriod >> 12, 1);\n  const quantizedPhase = phase / quantizeFactor * quantizeFactor;\n  return [new U64(registry, calPeriod), new U64(registry, quantizedPhase)];\n}\n/** @internal */\n\n\nfunction decodeMortalU8a(registry, value) {\n  if (value.length === 0) {\n    return [new U64(registry), new U64(registry)];\n  }\n\n  const first = u8aToBn(value.subarray(0, 1)).toNumber();\n  const second = u8aToBn(value.subarray(1, 2)).toNumber();\n  const encoded = first + (second << 8);\n  const period = 2 << encoded % (1 << 4);\n  const quantizeFactor = Math.max(period >> 12, 1);\n  const phase = (encoded >> 4) * quantizeFactor;\n  assert(period >= 4 && phase < period, 'Invalid data passed to Mortal era');\n  return [new U64(registry, period), new U64(registry, phase)];\n}\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction decodeExtrinsicEra(value = new Uint8Array()) {\n  if (isU8a(value)) {\n    return !value.length || value[0] === 0 ? new Uint8Array([0]) : new Uint8Array([1, value[0], value[1]]);\n  } else if (!value) {\n    return new Uint8Array([0]);\n  } else if (value instanceof GenericExtrinsicEra) {\n    return decodeExtrinsicEra(value.toU8a());\n  } else if (isHex(value)) {\n    return decodeExtrinsicEra(hexToU8a(value));\n  } else if (isObject(value)) {\n    const entries = Object.entries(value).map(([k, v]) => [k.toLowerCase(), v]);\n    const mortal = entries.find(([k]) => k.toLowerCase() === 'mortalera');\n    const immortal = entries.find(([k]) => k.toLowerCase() === 'immortalera'); // this is to de-serialize from JSON\n\n    return mortal ? {\n      MortalEra: mortal[1]\n    } : immortal ? {\n      ImmortalEra: immortal[1]\n    } : {\n      MortalEra: value\n    };\n  }\n\n  throw new Error('Invalid data passed to Era');\n}\n/**\n * @name ImmortalEra\n * @description\n * The ImmortalEra for an extrinsic\n */\n\n\nexport class ImmortalEra extends Raw {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  constructor(registry, value) {\n    // For immortals, we always provide the known value (i.e. treated as a\n    // constant no matter how it is constructed - it is a fixed structure)\n    super(registry, IMMORTAL_ERA);\n  }\n\n}\n/**\n * @name MortalEra\n * @description\n * The MortalEra for an extrinsic, indicating period and phase\n */\n\nexport class MortalEra extends Tuple {\n  constructor(registry, value) {\n    super(registry, {\n      period: U64,\n      phase: U64\n    }, decodeMortalEra(registry, value));\n  }\n  /**\n   * @description Encoded length for mortals occupy 2 bytes, different from the actual Tuple since it is encoded. This is a shortcut fro `toU8a().length`\n   */\n\n\n  get encodedLength() {\n    return 2;\n  }\n  /**\n   * @description The period of this Mortal wraps as a [[U64]]\n   */\n\n\n  get period() {\n    return this[0];\n  }\n  /**\n   * @description The phase of this Mortal wraps as a [[U64]]\n   */\n\n\n  get phase() {\n    return this[1];\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return {\n      period: formatNumber(this.period),\n      phase: formatNumber(this.phase)\n    };\n  }\n  /**\n   * @description Returns a JSON representation of the actual value\n   */\n\n\n  toJSON() {\n    return this.toHex();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the parity-codec specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   * Period and phase are encoded:\n   *   - The period of validity from the block hash found in the signing material.\n   *   - The phase in the period that this transaction's lifetime begins (and, importantly,\n   *     implies which block hash is included in the signature material). If the `period` is\n   *     greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that\n   *     `period` is.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    const period = this.period.toNumber();\n    const phase = this.phase.toNumber();\n    const quantizeFactor = Math.max(period >> 12, 1);\n    const trailingZeros = getTrailingZeros(period);\n    const encoded = Math.min(15, Math.max(1, trailingZeros - 1)) + (phase / quantizeFactor << 4);\n    const first = encoded >> 8;\n    const second = encoded & 0xff;\n    return new Uint8Array([second, first]);\n  }\n  /**\n   * @description Get the block number of the start of the era whose properties this object describes that `current` belongs to.\n   */\n\n\n  birth(current) {\n    // FIXME No toNumber() here\n    return Math.floor((Math.max(bnToBn(current).toNumber(), this.phase.toNumber()) - this.phase.toNumber()) / this.period.toNumber()) * this.period.toNumber() + this.phase.toNumber();\n  }\n  /**\n   * @description Get the block number of the first block at which the era has ended.\n   */\n\n\n  death(current) {\n    // FIXME No toNumber() here\n    return this.birth(current) + this.period.toNumber();\n  }\n\n}\n/**\n * @name GenericExtrinsicEra\n * @description\n * The era for an extrinsic, indicating either a mortal or immortal extrinsic\n */\n\nexport class GenericExtrinsicEra extends Enum {\n  constructor(registry, value) {\n    super(registry, {\n      ImmortalEra,\n      MortalEra\n    }, decodeExtrinsicEra(value));\n  }\n  /**\n   * @description Override the encoded length method\n   */\n\n\n  get encodedLength() {\n    return this.isImmortalEra ? this.asImmortalEra.encodedLength : this.asMortalEra.encodedLength;\n  }\n  /**\n   * @description Returns the item as a [[ImmortalEra]]\n   */\n\n\n  get asImmortalEra() {\n    assert(this.isImmortalEra, () => `Cannot convert '${this.type}' via asImmortalEra`);\n    return this.inner;\n  }\n  /**\n   * @description Returns the item as a [[MortalEra]]\n   */\n\n\n  get asMortalEra() {\n    assert(this.isMortalEra, () => `Cannot convert '${this.type}' via asMortalEra`);\n    return this.inner;\n  }\n  /**\n   * @description `true` if Immortal\n   */\n\n\n  get isImmortalEra() {\n    return this.index === 0;\n  }\n  /**\n   * @description `true` if Mortal\n   */\n\n\n  get isMortalEra() {\n    return this.index > 0;\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the parity-codec specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return this.isMortalEra ? this.asMortalEra.toU8a(isBare) : this.asImmortalEra.toU8a(isBare);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Base } from '@polkadot/types-codec';\nimport { u8aToHex } from '@polkadot/util';\nimport { DEFAULT_VERSION } from \"./constants.js\";\nconst VERSIONS = ['ExtrinsicPayloadUnknown', // v0 is unknown\n'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadV4'];\n/** @internal */\n\nfunction decodeExtrinsicPayload(registry, value, version = DEFAULT_VERSION) {\n  if (value instanceof GenericExtrinsicPayload) {\n    return value.unwrap();\n  }\n\n  return registry.createTypeUnsafe(VERSIONS[version] || VERSIONS[0], [value, {\n    version\n  }]);\n}\n/**\n * @name GenericExtrinsicPayload\n * @description\n * A signing payload for an [[Extrinsic]]. For the final encoding, it is variable length based\n * on the contents included\n */\n\n\nexport class GenericExtrinsicPayload extends Base {\n  constructor(registry, value, {\n    version\n  } = {}) {\n    super(registry, decodeExtrinsicPayload(registry, value, version));\n  }\n  /**\n   * @description The block [[Hash]] the signature applies to (mortal/immortal)\n   */\n\n\n  get blockHash() {\n    return this.inner.blockHash;\n  }\n  /**\n   * @description The [[ExtrinsicEra]]\n   */\n\n\n  get era() {\n    return this.inner.era;\n  }\n  /**\n   * @description The genesis block [[Hash]] the signature applies to\n   */\n\n\n  get genesisHash() {\n    // NOTE only v3+\n    return this.inner.genesisHash || this.registry.createTypeUnsafe('Hash', []);\n  }\n  /**\n   * @description The [[Raw]] contained in the payload\n   */\n\n\n  get method() {\n    return this.inner.method;\n  }\n  /**\n   * @description The [[Index]]\n   */\n\n\n  get nonce() {\n    return this.inner.nonce;\n  }\n  /**\n   * @description The specVersion as a [[u32]] for this payload\n   */\n\n\n  get specVersion() {\n    // NOTE only v3+\n    return this.inner.specVersion || this.registry.createTypeUnsafe('u32', []);\n  }\n  /**\n   * @description The [[Balance]]\n   */\n\n\n  get tip() {\n    // NOTE from v2+\n    return this.inner.tip || this.registry.createTypeUnsafe('Compact<Balance>', []);\n  }\n  /**\n   * @description The transaction version as a [[u32]] for this payload\n   */\n\n\n  get transactionVersion() {\n    // NOTE only v4+\n    return this.inner.transactionVersion || this.registry.createTypeUnsafe('u32', []);\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return this.inner.eq(other);\n  }\n  /**\n   * @description Sign the payload with the keypair\n   */\n\n\n  sign(signerPair) {\n    const signature = this.inner.sign(signerPair); // This is extensible, so we could quite readily extend to send back extra\n    // information, such as for instance the payload, i.e. `payload: this.toHex()`\n    // For the case here we sign via the extrinsic, we ignore the return, so generally\n    // this is applicable for external signing\n\n    return {\n      signature: u8aToHex(signature)\n    };\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.inner.toHuman(isExtended);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toHex();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.toHex();\n  }\n  /**\n   * @description Returns a serialized u8a form\n   */\n\n\n  toU8a(isBare) {\n    // call our parent, with only the method stripped\n    return super.toU8a(isBare ? {\n      method: true\n    } : false);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\n/**\n * @name GenericExtrinsicPayloadUnknown\n * @description\n * A default handler for payloads where the version is not known (default throw)\n */\n\nexport class GenericExtrinsicPayloadUnknown extends Struct {\n  constructor(registry, value, {\n    version = 0\n  } = {}) {\n    super(registry, {});\n    throw new Error(`Unsupported extrinsic payload version ${version}`);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\nimport { UNMASK_VERSION } from \"./constants.js\";\n/**\n * @name GenericExtrinsicUnknown\n * @description\n * A default handler for extrinsics where the version is not known (default throw)\n */\n\nexport class GenericExtrinsicUnknown extends Struct {\n  constructor(registry, value, {\n    isSigned = false,\n    version = 0\n  } = {}) {\n    super(registry, {});\n    throw new Error(`Unsupported ${isSigned ? '' : 'un'}signed extrinsic version ${version & UNMASK_VERSION}`);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Option, Struct } from '@polkadot/types-codec';\nimport { objectProperty, objectSpread, u8aToHex } from '@polkadot/util';\nconst knownTypes = {\n  address: 'Address',\n  blockHash: 'Hash',\n  blockNumber: 'BlockNumber',\n  era: 'ExtrinsicEra',\n  genesisHash: 'Hash',\n  method: 'Call',\n  nonce: 'Compact<Index>',\n  runtimeVersion: 'RuntimeVersion',\n  signedExtensions: 'Vec<Text>',\n  tip: 'Compact<Balance>',\n  version: 'u8'\n};\n/**\n * @name GenericSignerPayload\n * @description\n * A generic signer payload that can be used for serialization between API and signer\n */\n\nexport class GenericSignerPayload extends Struct {\n  #extraTypes;\n\n  constructor(registry, value) {\n    const extensionTypes = objectSpread({}, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra());\n    super(registry, objectSpread({}, extensionTypes, knownTypes), value);\n    this.#extraTypes = {};\n\n    const getter = key => this.get(key); // add all extras that are not in the base types\n\n\n    for (const [key, type] of Object.entries(extensionTypes)) {\n      if (!knownTypes[key]) {\n        this.#extraTypes[key] = type;\n      }\n\n      objectProperty(this, key, getter);\n    }\n  }\n\n  get address() {\n    return this.getT('address');\n  }\n\n  get blockHash() {\n    return this.getT('blockHash');\n  }\n\n  get blockNumber() {\n    return this.getT('blockNumber');\n  }\n\n  get era() {\n    return this.getT('era');\n  }\n\n  get genesisHash() {\n    return this.getT('genesisHash');\n  }\n\n  get method() {\n    return this.getT('method');\n  }\n\n  get nonce() {\n    return this.getT('nonce');\n  }\n\n  get runtimeVersion() {\n    return this.getT('runtimeVersion');\n  }\n\n  get signedExtensions() {\n    return this.getT('signedExtensions');\n  }\n\n  get tip() {\n    return this.getT('tip');\n  }\n\n  get version() {\n    return this.getT('version');\n  }\n  /**\n   * @description Creates an representation of the structure as an ISignerPayload JSON\n   */\n\n\n  toPayload() {\n    const result = {};\n    const keys = Object.keys(this.#extraTypes); // add any explicit overrides we may have\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const value = this.get(key);\n      const isOption = value instanceof Option; // Don't include Option.isNone\n\n      if (!isOption || value.isSome) {\n        result[key] = value.toHex();\n      }\n    }\n\n    return objectSpread(result, {\n      // the known defaults as managed explicitly and has different\n      // formatting in cases, e.g. we mostly expose a hex format here\n      address: this.address.toString(),\n      blockHash: this.blockHash.toHex(),\n      blockNumber: this.blockNumber.toHex(),\n      era: this.era.toHex(),\n      genesisHash: this.genesisHash.toHex(),\n      method: this.method.toHex(),\n      nonce: this.nonce.toHex(),\n      signedExtensions: this.signedExtensions.map(e => e.toString()),\n      specVersion: this.runtimeVersion.specVersion.toHex(),\n      tip: this.tip.toHex(),\n      transactionVersion: this.runtimeVersion.transactionVersion.toHex(),\n      version: this.version.toNumber()\n    });\n  }\n  /**\n   * @description Creates a representation of the payload in raw Exrinsic form\n   */\n\n\n  toRaw() {\n    const payload = this.toPayload();\n    const data = u8aToHex(this.registry.createTypeUnsafe('ExtrinsicPayload', [payload, {\n      version: payload.version\n    }]) // NOTE Explicitly pass the bare flag so the method is encoded un-prefixed (non-decodable, for signing only)\n    .toU8a({\n      method: true\n    }));\n    return {\n      address: payload.address,\n      data,\n      type: 'payload'\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\nimport { isU8a } from '@polkadot/util';\nexport const EXTRINSIC_VERSION = 4;\n\n/**\n * @name GenericExtrinsicV4\n * @description\n * The third generation of compact extrinsics\n */\nexport class GenericExtrinsicV4 extends Struct {\n  constructor(registry, value, {\n    isSigned\n  } = {}) {\n    super(registry, {\n      signature: 'ExtrinsicSignatureV4',\n      // eslint-disable-next-line sort-keys\n      method: 'Call'\n    }, GenericExtrinsicV4.decodeExtrinsic(registry, value, isSigned));\n  }\n  /** @internal */\n\n\n  static decodeExtrinsic(registry, value, isSigned = false) {\n    if (value instanceof GenericExtrinsicV4) {\n      return value;\n    } else if (value instanceof registry.createClassUnsafe('Call')) {\n      return {\n        method: value\n      };\n    } else if (isU8a(value)) {\n      // here we decode manually since we need to pull through the version information\n      const signature = registry.createTypeUnsafe('ExtrinsicSignatureV4', [value, {\n        isSigned\n      }]);\n      const method = registry.createTypeUnsafe('Call', [value.subarray(signature.encodedLength)]);\n      return {\n        method,\n        signature\n      };\n    }\n\n    return value || {};\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description The [[Call]] this extrinsic wraps\n   */\n\n\n  get method() {\n    return this.getT('method');\n  }\n\n  get registry() {\n    return super.registry;\n  }\n  /**\n   * @description The [[ExtrinsicSignatureV4]]\n   */\n\n\n  get signature() {\n    return this.getT('signature');\n  }\n  /**\n   * @description The version for the signature\n   */\n\n\n  get version() {\n    return EXTRINSIC_VERSION;\n  }\n  /**\n   * @description Add an [[ExtrinsicSignatureV4]] to the extrinsic (already generated)\n   */\n\n\n  addSignature(signer, signature, payload) {\n    this.signature.addSignature(signer, signature, payload);\n    return this;\n  }\n  /**\n   * @description Sign the extrinsic with a specific keypair\n   */\n\n\n  sign(account, options) {\n    this.signature.sign(this.method, account, options);\n    return this;\n  }\n  /**\n   * @describe Adds a fake signature to the extrinsic\n   */\n\n\n  signFake(signer, options) {\n    this.signature.signFake(this.method, signer, options);\n    return this;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Enum, Struct } from '@polkadot/types-codec';\nimport { objectSpread } from '@polkadot/util';\nimport { sign } from \"../util.js\";\n/**\n * @name GenericExtrinsicPayloadV4\n * @description\n * A signing payload for an [[Extrinsic]]. For the final encoding, it is\n * variable length based on the contents included\n */\n\nexport class GenericExtrinsicPayloadV4 extends Struct {\n  #signOptions;\n\n  constructor(registry, value) {\n    super(registry, objectSpread({\n      method: 'Bytes'\n    }, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra()), value); // Do detection for the type of extrinsic, in the case of MultiSignature\n    // this is an enum, in the case of AnySignature, this is a Hash only\n    // (which may be 64 or 65 bytes)\n\n    this.#signOptions = {\n      withType: registry.createTypeUnsafe('ExtrinsicSignature', []) instanceof Enum\n    };\n  }\n  /**\n   * @description The block [[Hash]] the signature applies to (mortal/immortal)\n   */\n\n\n  get blockHash() {\n    return this.getT('blockHash');\n  }\n  /**\n   * @description The [[ExtrinsicEra]]\n   */\n\n\n  get era() {\n    return this.getT('era');\n  }\n  /**\n   * @description The genesis [[Hash]] the signature applies to (mortal/immortal)\n   */\n\n\n  get genesisHash() {\n    return this.getT('genesisHash');\n  }\n  /**\n   * @description The [[Bytes]] contained in the payload\n   */\n\n\n  get method() {\n    return this.getT('method');\n  }\n  /**\n   * @description The [[Index]]\n   */\n\n\n  get nonce() {\n    return this.getT('nonce');\n  }\n  /**\n   * @description The specVersion for this signature\n   */\n\n\n  get specVersion() {\n    return this.getT('specVersion');\n  }\n  /**\n   * @description The tip [[Balance]]\n   */\n\n\n  get tip() {\n    return this.getT('tip');\n  }\n  /**\n   * @description The transactionVersion for this signature\n   */\n\n\n  get transactionVersion() {\n    return this.getT('transactionVersion');\n  }\n  /**\n   * @description\n   * The (optional) asset id for this signature for chains that support transaction fees in assets\n   */\n\n\n  get assetId() {\n    return this.getT('assetId');\n  }\n  /**\n   * @description Sign the payload with the keypair\n   */\n\n\n  sign(signerPair) {\n    // NOTE The `toU8a({ method: true })` argument is absolutely critical, we\n    // don't want the method (Bytes) to have the length prefix included. This\n    // means that the data-as-signed is un-decodable, but is also doesn't need\n    // the extra information, only the pure data (and is not decoded) ...\n    // The same applies to V1..V3, if we have a V5, carrythis comment\n    return sign(this.registry, signerPair, this.toU8a({\n      method: true\n    }), this.#signOptions);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// a helper function for both types of payloads, Raw and metadata-known\nexport function sign(registry, signerPair, u8a, options) {\n  const encoded = u8a.length > 256 ? registry.hash(u8a) : u8a;\n  return signerPair.sign(encoded, options);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\nimport { assert, isU8a, isUndefined, objectProperties, objectSpread, stringify, u8aToHex } from '@polkadot/util';\nimport { EMPTY_U8A, IMMORTAL_ERA } from \"../constants.js\";\nimport { GenericExtrinsicPayloadV4 } from \"./ExtrinsicPayload.js\"; // Ensure we have enough data for all types of signatures\n\nconst FAKE_SIGNATURE = new Uint8Array(256).fill(1);\n\nfunction toAddress(registry, address) {\n  return registry.createTypeUnsafe('Address', [isU8a(address) ? u8aToHex(address) : address]);\n}\n/**\n * @name GenericExtrinsicSignatureV4\n * @description\n * A container for the [[Signature]] associated with a specific [[Extrinsic]]\n */\n\n\nexport class GenericExtrinsicSignatureV4 extends Struct {\n  #signKeys;\n\n  constructor(registry, value, {\n    isSigned\n  } = {}) {\n    const signTypes = registry.getSignedExtensionTypes();\n    super(registry, objectSpread( // eslint-disable-next-line sort-keys\n    {\n      signer: 'Address',\n      signature: 'ExtrinsicSignature'\n    }, signTypes), GenericExtrinsicSignatureV4.decodeExtrinsicSignature(value, isSigned));\n    this.#signKeys = Object.keys(signTypes);\n    objectProperties(this, this.#signKeys, k => this.get(k));\n  }\n  /** @internal */\n\n\n  static decodeExtrinsicSignature(value, isSigned = false) {\n    if (!value) {\n      return EMPTY_U8A;\n    } else if (value instanceof GenericExtrinsicSignatureV4) {\n      return value;\n    }\n\n    return isSigned ? value : EMPTY_U8A;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.isSigned ? super.encodedLength : 0;\n  }\n  /**\n   * @description `true` if the signature is valid\n   */\n\n\n  get isSigned() {\n    return !this.signature.isEmpty;\n  }\n  /**\n   * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to\n   */\n\n\n  get era() {\n    return this.getT('era');\n  }\n  /**\n   * @description The [[Index]] for the signature\n   */\n\n\n  get nonce() {\n    return this.getT('nonce');\n  }\n\n  get registry() {\n    return super.registry;\n  }\n  /**\n   * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n   */\n\n\n  get signature() {\n    // the second case here is when we don't have an enum signature, treat as raw\n    return this.multiSignature.value || this.multiSignature;\n  }\n  /**\n   * @description The raw [[ExtrinsicSignature]]\n   */\n\n\n  get multiSignature() {\n    return this.getT('signature');\n  }\n  /**\n   * @description The [[Address]] that signed\n   */\n\n\n  get signer() {\n    return this.getT('signer');\n  }\n  /**\n   * @description The [[Balance]] tip\n   */\n\n\n  get tip() {\n    return this.getT('tip');\n  }\n\n  _injectSignature(signer, signature, payload) {\n    // use the fields exposed to guide the getters\n    for (let i = 0; i < this.#signKeys.length; i++) {\n      const k = this.#signKeys[i];\n      const v = payload.get(k);\n\n      if (!isUndefined(v)) {\n        this.set(k, v);\n      }\n    } // additional fields (exposed in struct itself)\n\n\n    this.set('signer', signer);\n    this.set('signature', signature);\n    return this;\n  }\n  /**\n   * @description Adds a raw signature\n   */\n\n\n  addSignature(signer, signature, payload) {\n    return this._injectSignature(toAddress(this.registry, signer), this.registry.createTypeUnsafe('ExtrinsicSignature', [signature]), new GenericExtrinsicPayloadV4(this.registry, payload));\n  }\n  /**\n   * @description Creates a payload from the supplied options\n   */\n\n\n  createPayload(method, options) {\n    const {\n      era,\n      runtimeVersion: {\n        specVersion,\n        transactionVersion\n      }\n    } = options;\n    return new GenericExtrinsicPayloadV4(this.registry, objectSpread({}, options, {\n      era: era || IMMORTAL_ERA,\n      method: method.toHex(),\n      specVersion,\n      transactionVersion\n    }));\n  }\n  /**\n   * @description Generate a payload and applies the signature from a keypair\n   */\n\n\n  sign(method, account, options) {\n    assert(account && account.addressRaw, () => `Expected a valid keypair for signing, found ${stringify(account)}`);\n    const payload = this.createPayload(method, options);\n    return this._injectSignature(toAddress(this.registry, account.addressRaw), this.registry.createTypeUnsafe('ExtrinsicSignature', [payload.sign(account)]), payload);\n  }\n  /**\n   * @description Generate a payload and applies a fake signature\n   */\n\n\n  signFake(method, address, options) {\n    assert(address, () => `Expected a valid address for signing, found ${stringify(address)}`);\n    const payload = this.createPayload(method, options);\n    return this._injectSignature(toAddress(this.registry, address), this.registry.createTypeUnsafe('ExtrinsicSignature', [FAKE_SIGNATURE]), payload);\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return this.isSigned ? super.toU8a(isBare) : EMPTY_U8A;\n  }\n\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { keccak_256 as keccak256Js, keccak_512 as keccak512Js } from '@noble/hashes/sha3';\nimport { keccak256, keccak512 } from '@polkadot/wasm-crypto';\nimport { createAsHex, createBitHasher, createDualHasher } from \"../helpers.js\";\n/**\n * @name keccakAsU8a\n * @summary Creates a keccak Uint8Array from the input.\n * @description\n * From either a `string` or a `Buffer` input, create the keccak and return the result as a `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { keccakAsU8a } from '@polkadot/util-crypto';\n *\n * keccakAsU8a('123'); // => Uint8Array\n * ```\n */\n\nexport const keccakAsU8a = createDualHasher({\n  256: keccak256,\n  512: keccak512\n}, {\n  256: keccak256Js,\n  512: keccak512Js\n});\n/**\n * @name keccak256AsU8a\n * @description Creates a keccak256 Uint8Array from the input.\n */\n\nexport const keccak256AsU8a = createBitHasher(256, keccakAsU8a);\n/**\n * @name keccak512AsU8a\n * @description Creates a keccak512 Uint8Array from the input.\n */\n\nexport const keccak512AsU8a = createBitHasher(512, keccakAsU8a);\n/**\n * @name keccakAsHex\n * @description Creates a keccak hex string from the input.\n */\n\nexport const keccakAsHex = createAsHex(keccakAsU8a);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isHex } from '@polkadot/util';\nimport { isEthereumChecksum } from \"./isChecksum.js\";\nexport function isEthereumAddress(address) {\n  if (!address || address.length !== 42 || !isHex(address)) {\n    return false;\n  } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n    return true;\n  }\n\n  return isEthereumChecksum(address);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToHex } from '@polkadot/util';\nimport { keccakAsU8a } from \"../keccak/index.js\";\n\nfunction isInvalidChar(char, byte) {\n  return char !== (byte > 7 ? char.toUpperCase() : char.toLowerCase());\n}\n\nexport function isEthereumChecksum(_address) {\n  const address = _address.replace('0x', '');\n\n  const hash = u8aToHex(keccakAsU8a(address.toLowerCase()), -1, false);\n\n  for (let i = 0; i < 40; i++) {\n    if (isInvalidChar(address[i], parseInt(hash[i], 16))) {\n      return false;\n    }\n  }\n\n  return true;\n}","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst POW_2_256 = _2n ** BigInt(256);\nconst CURVE = {\n    a: _0n,\n    b: BigInt(7),\n    P: POW_2_256 - _2n ** BigInt(32) - BigInt(977),\n    n: POW_2_256 - BigInt('432420386565659656852420866394968145599'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n};\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(B ** _2n);\n        const D = mod(_2n * (mod((X1 + B) ** _2n) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E ** _2n);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H ** _2n);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r ** _2n - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar);\n        const G = JacobianPoint.BASE;\n        const P0 = JacobianPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        if (h === _0n)\n            throw new Error('Cannot recover signature: msgHash cannot be 0');\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.y & _1n ? '03' : '02';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = isUint8a(hex);\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = isUint8a(hex);\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every(isUint8a))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction isUint8a(bytes) {\n    return bytes instanceof Uint8Array;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction numTo32bStr(num) {\n    if (num > POW_2_256)\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    return hexToBytes(numTo32bStr(num));\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst POW_2_128 = _2n ** BigInt(128);\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n    const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n    const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n    const b2 = a1;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        if (typeof utils.hmacSha256Sync !== 'function')\n            throw new Error('utils.hmacSha256Sync is undefined, you need to set it');\n        const res = utils.hmacSha256Sync(this.k, ...values);\n        if (res instanceof Promise)\n            throw new Error('To use sync sign(), ensure utils.hmacSha256 is sync');\n        return res;\n    }\n    incr() {\n        if (this.counter >= 1000) {\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        }\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (isUint8a(key)) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isPub(item) {\n    const arr = isUint8a(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    const hex = numTo32bStr(num);\n    return hexToBytes(hex);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    if (h === _0n)\n        return false;\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nasync function taggedHash(tag, ...messages) {\n    const tagB = new Uint8Array(tag.split('').map((c) => c.charCodeAt(0)));\n    const tagH = await utils.sha256(tagB);\n    const h = await utils.sha256(concatBytes(tagH, tagH, ...messages));\n    return bytesToNumber(h);\n}\nasync function createChallenge(x, P, message) {\n    const rx = numTo32b(x);\n    const t = await taggedHash('BIP0340/challenge', rx, P.toRawX(), message);\n    return mod(t, CURVE.n);\n}\nfunction hasEvenY(point) {\n    return (point.y & _1n) === _0n;\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nasync function schnorrSign(message, privateKey, auxRand = utils.randomBytes()) {\n    if (message == null)\n        throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n    const { n } = CURVE;\n    const m = ensureBytes(message);\n    const d0 = normalizePrivateKey(privateKey);\n    const rand = ensureBytes(auxRand);\n    if (rand.length !== 32)\n        throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    const P = Point.fromPrivateKey(d0);\n    const d = hasEvenY(P) ? d0 : n - d0;\n    const t0h = await taggedHash('BIP0340/aux', rand);\n    const t = d ^ t0h;\n    const k0h = await taggedHash('BIP0340/nonce', numTo32b(t), P.toRawX(), m);\n    const k0 = mod(k0h, n);\n    if (k0 === _0n)\n        throw new Error('sign: Creation of signature failed. k is zero');\n    const R = Point.fromPrivateKey(k0);\n    const k = hasEvenY(R) ? k0 : n - k0;\n    const e = await createChallenge(R.x, P, m);\n    const sig = new SchnorrSignature(R.x, mod(k + e * d, n)).toRawBytes();\n    const isValid = await schnorrVerify(sig, m, P.toRawX());\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    let sig;\n    try {\n        sig = raw ? signature : SchnorrSignature.fromHex(signature);\n        if (raw)\n            sig.assertValidity();\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    const m = ensureBytes(message);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const e = await createChallenge(r, P, m);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !hasEvenY(R) || R.x !== r)\n        return false;\n    return true;\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n);\n        if (num === _0n || num === _1n)\n            throw new Error('Invalid private key');\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    bytesToHex,\n    mod,\n    sha256: async (message) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            return Uint8Array.from(createHash('sha256').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\n","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const BN_BE_OPTS = {\n  isLe: false\n};\nexport const BN_LE_OPTS = {\n  isLe: true\n};\nexport const BN_LE_16_OPTS = {\n  bitLength: 16,\n  isLe: true\n};\nexport const BN_BE_32_OPTS = {\n  bitLength: 32,\n  isLe: false\n};\nexport const BN_LE_32_OPTS = {\n  bitLength: 32,\n  isLe: true\n};\nexport const BN_BE_256_OPTS = {\n  bitLength: 256,\n  isLe: false\n};\nexport const BN_LE_256_OPTS = {\n  bitLength: 256,\n  isLe: true\n};\nexport const BN_LE_512_OPTS = {\n  bitLength: 512,\n  isLe: true\n};","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { keccakAsU8a } from \"../keccak/index.js\";\nimport { secp256k1Expand } from \"../secp256k1/index.js\";\n\nfunction getH160(u8a) {\n  if ([33, 65].includes(u8a.length)) {\n    u8a = keccakAsU8a(secp256k1Expand(u8a));\n  }\n\n  return u8a.slice(-20);\n}\n\nexport function ethereumEncode(addressOrPublic) {\n  if (!addressOrPublic) {\n    return '0x';\n  }\n\n  const u8aAddress = u8aToU8a(addressOrPublic);\n  assert([20, 32, 33, 65].includes(u8aAddress.length), 'Invalid address or publicKey passed');\n  const address = u8aToHex(getH160(u8aAddress), -1, false);\n  const hash = u8aToHex(keccakAsU8a(address), -1, false);\n  let result = '';\n\n  for (let i = 0; i < 40; i++) {\n    result = `${result}${parseInt(hash[i], 16) > 7 ? address[i].toUpperCase() : address[i]}`;\n  }\n\n  return `0x${result}`;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Point } from '@noble/secp256k1';\nimport { assert, bnToU8a, hasBigInt, u8aConcat } from '@polkadot/util';\nimport { isReady, secp256k1Expand as wasm } from '@polkadot/wasm-crypto';\nimport { BN_BE_256_OPTS } from \"../bn.js\";\nexport function secp256k1Expand(publicKey, onlyJs) {\n  if (publicKey.length === 65) {\n    return publicKey.subarray(1);\n  }\n\n  assert(publicKey.length === 33, 'Invalid publicKey provided');\n\n  if (!hasBigInt || !onlyJs && isReady()) {\n    return wasm(publicKey).subarray(1);\n  }\n\n  const {\n    x,\n    y\n  } = Point.fromHex(publicKey);\n  return u8aConcat(bnToU8a(x, BN_BE_256_OPTS), bnToU8a(y, BN_BE_256_OPTS));\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { U8aFixed } from '@polkadot/types-codec';\nimport { hexToU8a, isHex, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { ethereumEncode, isEthereumAddress } from '@polkadot/util-crypto';\n/** @internal */\n\nfunction decodeAccountId(value) {\n  if (isU8a(value) || Array.isArray(value)) {\n    return u8aToU8a(value);\n  } else if (isHex(value) || isEthereumAddress(value)) {\n    return hexToU8a(value);\n  } else if (isString(value)) {\n    return u8aToU8a(value);\n  }\n\n  return value;\n}\n/**\n * @name GenericEthereumAccountId\n * @description\n * A wrapper around an Ethereum-compatible AccountId. Since we are dealing with\n * underlying addresses (20 bytes in length), we extend from U8aFixed which is\n * just a Uint8Array wrapper with a fixed length.\n */\n\n\nexport class GenericEthereumAccountId extends U8aFixed {\n  constructor(registry, value = new Uint8Array()) {\n    super(registry, decodeAccountId(value), 160);\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return super.eq(decodeAccountId(other));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return ethereumEncode(this);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'AccountId';\n  }\n\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L34\nimport { assert, u8aConcat } from '@polkadot/util';\nimport { base58Encode } from \"../base58/index.js\";\nimport { decodeAddress } from \"./decode.js\";\nimport { defaults } from \"./defaults.js\";\nimport { sshash } from \"./sshash.js\";\nexport function encodeAddress(key, ss58Format = defaults.prefix) {\n  // decode it, this means we can re-encode an address\n  const u8a = decodeAddress(key);\n  assert(ss58Format >= 0 && ss58Format <= 16383 && ![46, 47].includes(ss58Format), 'Out of range ss58Format specified');\n  assert(defaults.allowedDecodedLengths.includes(u8a.length), () => `Expected a valid key to convert, with length ${defaults.allowedDecodedLengths.join(', ')}`);\n  const input = u8aConcat(ss58Format < 64 ? [ss58Format] : [(ss58Format & 0b0000000011111100) >> 2 | 0b01000000, ss58Format >> 8 | (ss58Format & 0b0000000000000011) << 6], u8a);\n  return base58Encode(u8aConcat(input, sshash(input).subarray(0, [32, 33].includes(u8a.length) ? 2 : 1)));\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u32 } from '@polkadot/types-codec';\nimport { BN, bnToBn, isBigInt, isBn, isHex, isNumber, isU8a } from '@polkadot/util';\nimport { decodeAddress, encodeAddress } from '@polkadot/util-crypto';\nconst PREFIX_1BYTE = 0xef;\nconst PREFIX_2BYTE = 0xfc;\nconst PREFIX_4BYTE = 0xfd;\nconst PREFIX_8BYTE = 0xfe;\nconst MAX_1BYTE = new BN(PREFIX_1BYTE);\nconst MAX_2BYTE = new BN(1).shln(16);\nconst MAX_4BYTE = new BN(1).shln(32);\n/** @internal */\n\nfunction decodeAccountIndex(value) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  if (value instanceof GenericAccountIndex) {\n    // `value.toBn()` on AccountIndex returns a pure BN (i.e. not an\n    // AccountIndex), which has the initial `toString()` implementation.\n    return value.toBn();\n  } else if (isBn(value) || isNumber(value) || isHex(value) || isU8a(value) || isBigInt(value)) {\n    return value;\n  }\n\n  return decodeAccountIndex(decodeAddress(value));\n}\n/**\n * @name GenericAccountIndex\n * @description\n * A wrapper around an AccountIndex, which is a shortened, variable-length encoding\n * for an Account. We extends from [[U32]] to provide the number-like properties.\n */\n\n\nexport class GenericAccountIndex extends u32 {\n  constructor(registry, value = new BN(0)) {\n    super(registry, decodeAccountIndex(value));\n  }\n\n  static calcLength(_value) {\n    const value = bnToBn(_value);\n\n    if (value.lte(MAX_1BYTE)) {\n      return 1;\n    } else if (value.lt(MAX_2BYTE)) {\n      return 2;\n    } else if (value.lt(MAX_4BYTE)) {\n      return 4;\n    }\n\n    return 8;\n  }\n\n  static readLength(input) {\n    const first = input[0];\n\n    if (first === PREFIX_2BYTE) {\n      return [1, 2];\n    } else if (first === PREFIX_4BYTE) {\n      return [1, 4];\n    } else if (first === PREFIX_8BYTE) {\n      return [1, 8];\n    }\n\n    return [0, 1];\n  }\n\n  static writeLength(input) {\n    switch (input.length) {\n      case 2:\n        return new Uint8Array([PREFIX_2BYTE]);\n\n      case 4:\n        return new Uint8Array([PREFIX_4BYTE]);\n\n      case 8:\n        return new Uint8Array([PREFIX_8BYTE]);\n\n      default:\n        return new Uint8Array([]);\n    }\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    // shortcut for BN or Number, don't create an object\n    if (isBn(other) || isNumber(other)) {\n      return super.eq(other);\n    } // convert and compare\n\n\n    return super.eq(this.registry.createTypeUnsafe('AccountIndex', [other]));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    const length = GenericAccountIndex.calcLength(this);\n    return encodeAddress(this.toU8a().subarray(0, length), this.registry.chainSS58);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'AccountIndex';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Base } from '@polkadot/types-codec';\nimport { isBigInt, isBn, isHex, isNumber, isU8a, u8aConcat, u8aToBn, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { GenericAccountIndex } from \"../generic/AccountIndex.js\";\nimport { GenericEthereumAccountId } from \"./AccountId.js\"; // eslint-disable-next-line no-use-before-define\n\nexport const ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);\n/** @internal */\n\nfunction decodeString(registry, value) {\n  const decoded = decodeAddress(value);\n  return decoded.length === 20 ? registry.createTypeUnsafe('EthereumAccountId', [decoded]) : registry.createTypeUnsafe('AccountIndex', [u8aToBn(decoded, true)]);\n}\n/** @internal */\n\n\nfunction decodeU8a(registry, value) {\n  // This allows us to instantiate an address with a raw publicKey. Do this first before\n  // we checking the first byte, otherwise we may split an already-existent valid address\n  if (value.length === 20) {\n    return registry.createTypeUnsafe('EthereumAccountId', [value]);\n  } else if (value[0] === 0xff) {\n    return registry.createTypeUnsafe('EthereumAccountId', [value.subarray(1)]);\n  }\n\n  const [offset, length] = GenericAccountIndex.readLength(value);\n  return registry.createTypeUnsafe('AccountIndex', [u8aToBn(value.subarray(offset, offset + length), true)]);\n}\n\nfunction decodeAddressOrIndex(registry, value) {\n  return value instanceof GenericEthereumLookupSource ? value.inner : value instanceof GenericEthereumAccountId || value instanceof GenericAccountIndex ? value : isU8a(value) || Array.isArray(value) || isHex(value) ? decodeU8a(registry, u8aToU8a(value)) : isBn(value) || isNumber(value) || isBigInt(value) ? registry.createTypeUnsafe('AccountIndex', [value]) : decodeString(registry, value);\n}\n/**\n * @name GenericEthereumLookupSource\n * @description\n * A wrapper around an EthereumAccountId and/or AccountIndex that is encoded with a prefix.\n * Since we are dealing with underlying publicKeys (or shorter encoded addresses),\n * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address\n * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec\n */\n\n\nexport class GenericEthereumLookupSource extends Base {\n  constructor(registry, value = new Uint8Array()) {\n    super(registry, decodeAddressOrIndex(registry, value));\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    const rawLength = this._rawLength;\n    return rawLength + ( // for 1 byte AccountIndexes, we are not adding a specific prefix\n    rawLength > 1 ? 1 : 0);\n  }\n  /**\n   * @description The length of the raw value, either AccountIndex or AccountId\n   */\n\n\n  get _rawLength() {\n    return this.inner instanceof GenericAccountIndex ? GenericAccountIndex.calcLength(this.inner) : this.inner.encodedLength;\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Address';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = this.inner.toU8a().subarray(0, this._rawLength);\n    return isBare ? encoded : u8aConcat(this.inner instanceof GenericAccountIndex ? GenericAccountIndex.writeLength(encoded) : ACCOUNT_ID_PREFIX, encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { U8aFixed } from '@polkadot/types-codec';\nimport { assert, hexToU8a, isHex, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress, encodeAddress } from '@polkadot/util-crypto';\n/** @internal */\n\nfunction decodeAccountId(value) {\n  if (isU8a(value) || Array.isArray(value)) {\n    return u8aToU8a(value);\n  } else if (!value) {\n    return new Uint8Array();\n  } else if (isHex(value)) {\n    return hexToU8a(value);\n  } else if (isString(value)) {\n    return decodeAddress(value);\n  }\n\n  throw new Error(`Unknown type passed to AccountId constructor, found typeof ${typeof value}`);\n}\n/**\n * @name GenericAccountId\n * @description\n * A wrapper around an AccountId/PublicKey representation. Since we are dealing with\n * underlying PublicKeys (32 bytes in length), we extend from U8aFixed which is\n * just a Uint8Array wrapper with a fixed length.\n */\n\n\nexport class GenericAccountId extends U8aFixed {\n  constructor(registry, value) {\n    const decoded = decodeAccountId(value); // Part of stream containing >= 32 bytes or a all empty (defaults)\n\n    assert(decoded.length >= 32 || !decoded.some(b => b), () => `Invalid AccountId provided, expected 32 bytes, found ${decoded.length}`);\n    super(registry, decoded, 256);\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return super.eq(decodeAccountId(other));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return encodeAddress(this, this.registry.chainSS58);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'AccountId';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\n\n/**\n * @name GenericBlock\n * @description\n * A block encoded with header and extrinsics\n */\nexport class GenericBlock extends Struct {\n  constructor(registry, value) {\n    super(registry, {\n      header: 'Header',\n      // eslint-disable-next-line sort-keys\n      extrinsics: 'Vec<Extrinsic>'\n    }, value);\n  }\n  /**\n   * @description Encodes a content [[Hash]] for the block\n   */\n\n\n  get contentHash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description The [[Extrinsic]] contained in the block\n   */\n\n\n  get extrinsics() {\n    return this.getT('extrinsics');\n  }\n  /**\n   * @description Block/header [[Hash]]\n   */\n\n\n  get hash() {\n    return this.header.hash;\n  }\n  /**\n   * @description The [[Header]] of the block\n   */\n\n\n  get header() {\n    return this.getT('header');\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct, U8aFixed } from '@polkadot/types-codec';\nimport { isHex, isObject, isU8a, objectSpread, u8aToU8a } from '@polkadot/util';\n\n/**\n * Get a mapping of `argument name -> argument type` for the function, from\n * its metadata.\n *\n * @param meta - The function metadata used to get the definition.\n * @internal\n */\nfunction getArgsDef(registry, meta) {\n  return meta.fields.reduce((result, {\n    name,\n    type\n  }, index) => {\n    result[name.unwrapOr(`param${index}`).toString()] = registry.createLookupType(type);\n    return result;\n  }, {});\n}\n/** @internal */\n\n\nfunction decodeCallViaObject(registry, value, _meta) {\n  // we only pass args/methodsIndex out\n  const {\n    args,\n    callIndex\n  } = value; // Get the correct lookupIndex\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n  const lookupIndex = callIndex instanceof GenericCallIndex ? callIndex.toU8a() : callIndex; // Find metadata with callIndex\n\n  const meta = _meta || registry.findMetaCall(lookupIndex).meta;\n\n  return {\n    args,\n    argsDef: getArgsDef(registry, meta),\n    callIndex,\n    meta\n  };\n}\n/** @internal */\n\n\nfunction decodeCallViaU8a(registry, value, _meta) {\n  // We need 2 bytes for the callIndex\n  const callIndex = new Uint8Array(2);\n  callIndex.set(value.subarray(0, 2), 0); // Find metadata with callIndex\n\n  const meta = _meta || registry.findMetaCall(callIndex).meta;\n\n  return {\n    args: value.subarray(2),\n    argsDef: getArgsDef(registry, meta),\n    callIndex,\n    meta\n  };\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param value - Value to decode, one of:\n * - hex\n * - Uint8Array\n * - {@see DecodeMethodInput}\n * @param _meta - Metadata to use, so that `injectMethods` lookup is not\n * necessary.\n * @internal\n */\n\n\nfunction decodeCall(registry, value = new Uint8Array(), _meta) {\n  if (isU8a(value) || isHex(value)) {\n    return decodeCallViaU8a(registry, u8aToU8a(value), _meta);\n  } else if (isObject(value) && value.callIndex && value.args) {\n    return decodeCallViaObject(registry, value, _meta);\n  }\n\n  throw new Error(`Call: Cannot decode value '${value}' of type ${typeof value}`);\n}\n/**\n * @name GenericCallIndex\n * @description\n * A wrapper around the `[sectionIndex, methodIndex]` value that uniquely identifies a method\n */\n\n\nexport class GenericCallIndex extends U8aFixed {\n  constructor(registry, value) {\n    super(registry, value, 16);\n  }\n\n}\n/**\n * @name GenericCall\n * @description\n * Extrinsic function descriptor\n */\n\nexport class GenericCall extends Struct {\n  constructor(registry, value, meta) {\n    const decoded = decodeCall(registry, value, meta);\n\n    try {\n      super(registry, {\n        callIndex: GenericCallIndex,\n        // eslint-disable-next-line sort-keys\n        args: Struct.with(decoded.argsDef)\n      }, decoded);\n    } catch (error) {\n      let method = 'unknown.unknown';\n\n      try {\n        const c = registry.findMetaCall(decoded.callIndex);\n        method = `${c.section}.${c.method}`;\n      } catch (error) {// ignore\n      }\n\n      throw new Error(`Call: failed decoding ${method}:: ${error.message}`);\n    }\n\n    this._meta = decoded.meta;\n  }\n  /**\n   * @description The arguments for the function call\n   */\n\n\n  get args() {\n    return [...this.getT('args').values()];\n  }\n  /**\n   * @description The argument definitions\n   */\n\n\n  get argsDef() {\n    return getArgsDef(this.registry, this.meta);\n  }\n  /**\n   * @description The argument entries\n   */\n\n\n  get argsEntries() {\n    return [...this.getT('args').entries()];\n  }\n  /**\n   * @description The encoded `[sectionIndex, methodIndex]` identifier\n   */\n\n\n  get callIndex() {\n    return this.getT('callIndex').toU8a();\n  }\n  /**\n   * @description The encoded data\n   */\n\n\n  get data() {\n    return this.getT('args').toU8a();\n  }\n  /**\n   * @description The [[FunctionMetadata]]\n   */\n\n\n  get meta() {\n    return this._meta;\n  }\n  /**\n   * @description Returns the name of the method\n   */\n\n\n  get method() {\n    return this.registry.findMetaCall(this.callIndex).method;\n  }\n\n  get registry() {\n    return super.registry;\n  }\n  /**\n   * @description Returns the module containing the method\n   */\n\n\n  get section() {\n    return this.registry.findMetaCall(this.callIndex).section;\n  }\n  /**\n   * @description Checks if the source matches this in type\n   */\n\n\n  is(other) {\n    return other.callIndex[0] === this.callIndex[0] && other.callIndex[1] === this.callIndex[1];\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExpanded) {\n    var _call, _call2;\n\n    let call;\n\n    try {\n      call = this.registry.findMetaCall(this.callIndex);\n    } catch (error) {// swallow\n    }\n\n    return objectSpread({\n      args: this.argsEntries.reduce((args, [n, a]) => objectSpread(args, {\n        [n]: a.toHuman(isExpanded)\n      }), {}),\n      method: (_call = call) === null || _call === void 0 ? void 0 : _call.method,\n      section: (_call2 = call) === null || _call2 === void 0 ? void 0 : _call2.section\n    }, isExpanded && call ? {\n      docs: call.meta.docs.map(d => d.toString())\n    } : null);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Call';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Json } from '@polkadot/types-codec';\nimport { isFunction, isNull, isUndefined } from '@polkadot/util';\n\nfunction createValue(registry, type, value, asArray = true) {\n  // We detect codec here as well - when found, generally this is constructed from itself\n  if (value && isFunction(value.unwrapOrDefault)) {\n    return value;\n  }\n\n  return registry.createTypeUnsafe(type, [asArray ? isNull(value) || isUndefined(value) ? null : Array.isArray(value) ? value : [value] : value]);\n}\n\nfunction decodeValue(registry, key, value) {\n  return key === 'ss58Format' ? createValue(registry, 'Option<u32>', value, false) : key === 'tokenDecimals' ? createValue(registry, 'Option<Vec<u32>>', value) : key === 'tokenSymbol' ? createValue(registry, 'Option<Vec<Text>>', value) : value;\n}\n\nfunction decode(registry, value) {\n  return ( // allow decoding from a map as well (ourselves)\n  value && isFunction(value.entries) ? [...value.entries()] : Object.entries(value || {})).reduce((all, [key, value]) => {\n    all[key] = decodeValue(registry, key, value);\n    return all;\n  }, {\n    ss58Format: registry.createTypeUnsafe('Option<u32>', []),\n    tokenDecimals: registry.createTypeUnsafe('Option<Vec<u32>>', []),\n    tokenSymbol: registry.createTypeUnsafe('Option<Vec<Text>>', [])\n  });\n}\n\nexport class GenericChainProperties extends Json {\n  constructor(registry, value) {\n    super(registry, decode(registry, value));\n  }\n  /**\n   * @description The chain ss58Format\n   */\n\n\n  get ss58Format() {\n    return this.getT('ss58Format');\n  }\n  /**\n   * @description The decimals for each of the tokens\n   */\n\n\n  get tokenDecimals() {\n    return this.getT('tokenDecimals');\n  }\n  /**\n   * @description The symbols for the tokens\n   */\n\n\n  get tokenSymbol() {\n    return this.getT('tokenSymbol');\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { U8aFixed } from '@polkadot/types-codec';\nimport { BN, bnToU8a, isNumber, stringToU8a, u8aToHex, u8aToString } from '@polkadot/util';\nexport const CID_AURA = stringToU8a('aura');\nexport const CID_BABE = stringToU8a('BABE');\nexport const CID_GRPA = stringToU8a('FRNK');\nexport const CID_POW = stringToU8a('pow_');\n\nfunction getAuraAuthor(registry, bytes, sessionValidators) {\n  return sessionValidators[registry.createTypeUnsafe('RawAuraPreDigest', [bytes.toU8a(true)]).slotNumber.mod(new BN(sessionValidators.length)).toNumber()];\n}\n\nfunction getBabeAuthor(registry, bytes, sessionValidators) {\n  const digest = registry.createTypeUnsafe('RawBabePreDigestCompat', [bytes.toU8a(true)]);\n  return sessionValidators[digest.value.toNumber()];\n}\n\nfunction getBytesAsAuthor(registry, bytes) {\n  return registry.createTypeUnsafe('AccountId', [bytes]);\n}\n/**\n * @name GenericConsensusEngineId\n * @description\n * A 4-byte identifier identifying the engine\n */\n\n\nexport class GenericConsensusEngineId extends U8aFixed {\n  constructor(registry, value) {\n    super(registry, isNumber(value) ? bnToU8a(value, {\n      isLe: false\n    }) : value, 32);\n  }\n  /**\n   * @description `true` if the engine matches aura\n   */\n\n\n  get isAura() {\n    return this.eq(CID_AURA);\n  }\n  /**\n   * @description `true` is the engine matches babe\n   */\n\n\n  get isBabe() {\n    return this.eq(CID_BABE);\n  }\n  /**\n   * @description `true` is the engine matches grandpa\n   */\n\n\n  get isGrandpa() {\n    return this.eq(CID_GRPA);\n  }\n  /**\n   * @description `true` is the engine matches pow\n   */\n\n\n  get isPow() {\n    return this.eq(CID_POW);\n  }\n  /**\n   * @description From the input bytes, decode into an author\n   */\n\n\n  extractAuthor(bytes, sessionValidators) {\n    if (sessionValidators !== null && sessionValidators !== void 0 && sessionValidators.length) {\n      if (this.isAura) {\n        return getAuraAuthor(this.registry, bytes, sessionValidators);\n      } else if (this.isBabe) {\n        return getBabeAuthor(this.registry, bytes, sessionValidators);\n      }\n    } // For pow & Moonbeam, the bytes are the actual author\n\n\n    if (this.isPow || bytes.length === 20) {\n      return getBytesAsAuthor(this.registry, bytes);\n    }\n\n    return undefined;\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'ConsensusEngineId';\n  }\n  /**\n   * @description Override the default toString to return a 4-byte string\n   */\n\n\n  toString() {\n    return this.isAscii ? u8aToString(this) : u8aToHex(this);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Base } from '@polkadot/types-codec';\nimport { isBigInt, isBn, isHex, isNumber, isU8a, u8aConcat, u8aToBn, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { GenericAccountId } from \"./AccountId.js\";\nimport { GenericAccountIndex } from \"./AccountIndex.js\"; // eslint-disable-next-line no-use-before-define\n\nexport const ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);\n/** @internal */\n\nfunction decodeString(registry, value) {\n  const decoded = decodeAddress(value);\n  return decoded.length === 32 ? registry.createTypeUnsafe('AccountId', [decoded]) : registry.createTypeUnsafe('AccountIndex', [u8aToBn(decoded, true)]);\n}\n/** @internal */\n\n\nfunction decodeU8a(registry, value) {\n  // This allows us to instantiate an address with a raw publicKey. Do this first before\n  // we checking the first byte, otherwise we may split an already-existent valid address\n  if (value.length === 32) {\n    return registry.createTypeUnsafe('AccountId', [value]);\n  } else if (value[0] === 0xff) {\n    return registry.createTypeUnsafe('AccountId', [value.subarray(1)]);\n  }\n\n  const [offset, length] = GenericAccountIndex.readLength(value);\n  return registry.createTypeUnsafe('AccountIndex', [u8aToBn(value.subarray(offset, offset + length), true)]);\n}\n/** @internal */\n\n\nfunction decodeAddressOrIndex(registry, value) {\n  return value instanceof GenericLookupSource ? value.inner : value instanceof GenericAccountId || value instanceof GenericAccountIndex ? value : isBn(value) || isNumber(value) || isBigInt(value) ? registry.createTypeUnsafe('AccountIndex', [value]) : Array.isArray(value) || isHex(value) || isU8a(value) ? decodeU8a(registry, u8aToU8a(value)) : decodeString(registry, value);\n}\n/**\n * @name LookupSource\n * @description\n * A wrapper around an AccountId and/or AccountIndex that is encoded with a prefix.\n * Since we are dealing with underlying publicKeys (or shorter encoded addresses),\n * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address\n * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec\n */\n\n\nexport class GenericLookupSource extends Base {\n  constructor(registry, value = new Uint8Array()) {\n    super(registry, decodeAddressOrIndex(registry, value));\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    const rawLength = this._rawLength;\n    return rawLength + ( // for 1 byte AccountIndexes, we are not adding a specific prefix\n    rawLength > 1 ? 1 : 0);\n  }\n  /**\n   * @description The length of the raw value, either AccountIndex or AccountId\n   */\n\n\n  get _rawLength() {\n    return this.inner instanceof GenericAccountIndex ? GenericAccountIndex.calcLength(this.inner) : this.inner.encodedLength;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const value = this.inner.toU8a().subarray(0, this._rawLength);\n    return {\n      outer: [new Uint8Array(this.inner instanceof GenericAccountIndex ? GenericAccountIndex.writeLength(value) : ACCOUNT_ID_PREFIX), value]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Address';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = this.inner.toU8a().subarray(0, this._rawLength);\n    return isBare ? encoded : u8aConcat(this.inner instanceof GenericAccountIndex ? GenericAccountIndex.writeLength(encoded) : ACCOUNT_ID_PREFIX, encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Enum } from '@polkadot/types-codec';\nimport { isBn, isNumber, isString, isU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { GenericAccountId } from \"./AccountId.js\";\nimport { GenericAccountIndex } from \"./AccountIndex.js\";\n\nfunction decodeU8a(registry, u8a) {\n  if ([0, 32].includes(u8a.length)) {\n    return {\n      Id: u8a\n    };\n  } else if (u8a.length === 20) {\n    return {\n      Address20: u8a\n    };\n  } else if (u8a.length <= 8) {\n    return {\n      Index: registry.createTypeUnsafe('AccountIndex', [u8a]).toNumber()\n    };\n  }\n\n  return u8a;\n}\n\nfunction decodeMultiAny(registry, value) {\n  if (value instanceof GenericAccountId) {\n    return {\n      Id: value\n    };\n  } else if (isU8a(value)) {\n    // NOTE This is after the AccountId check (which is U8a)\n    return decodeU8a(registry, value);\n  } else if (value instanceof GenericMultiAddress) {\n    return value;\n  } else if (value instanceof GenericAccountIndex || isBn(value) || isNumber(value)) {\n    return {\n      Index: isNumber(value) ? value : value.toNumber()\n    };\n  } else if (isString(value)) {\n    return decodeU8a(registry, decodeAddress(value.toString()));\n  }\n\n  return value;\n}\n\nexport class GenericMultiAddress extends Enum {\n  constructor(registry, value) {\n    super(registry, {\n      Id: 'AccountId',\n      Index: 'Compact<AccountIndex>',\n      Raw: 'Bytes',\n      // eslint-disable-next-line sort-keys\n      Address32: 'H256',\n      // eslint-disable-next-line sort-keys\n      Address20: 'H160'\n    }, decodeMultiAny(registry, value));\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const {\n      inner,\n      outer = []\n    } = this.inner.inspect();\n    return {\n      inner,\n      outer: [new Uint8Array([this.index]), ...outer]\n    };\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.value.toString();\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isU8a, u8aToHex } from '@polkadot/util';\n/** @internal */\n\nfunction decodeBool(value) {\n  if (isU8a(value)) {\n    return value[0] === 1;\n  } else if (value instanceof Boolean) {\n    return value.valueOf();\n  }\n\n  return !!value;\n}\n/**\n * @name bool\n * @description\n * Representation for a boolean value in the system. It extends the base JS `Boolean` class\n * @noInheritDoc\n */\n\n\nexport class bool extends Boolean {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  constructor(registry, value = false) {\n    super(decodeBool(value));\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 1;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value (true when it wraps false/default)\n   */\n\n\n  get isEmpty() {\n    return this.isFalse;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n\n\n  get isFalse() {\n    return !this.isTrue;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n\n\n  get isTrue() {\n    return this.valueOf();\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return this.valueOf() === (other instanceof Boolean ? other.valueOf() : other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.valueOf();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'bool';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.toJSON().toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return new Uint8Array([this.valueOf() ? 1 : 0]);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Bool, U8aFixed } from '@polkadot/types-codec';\nimport { isBoolean, isNumber, isU8a, isUndefined } from '@polkadot/util';\n// For votes, the topmost bit indicated aye/nay, the lower bits indicate the conviction\nconst AYE_BITS = 0b10000000;\nconst NAY_BITS = 0b00000000;\nconst CON_MASK = 0b01111111;\nconst DEF_CONV = 0b00000000; // the default conviction, None\n\n/** @internal */\n\nfunction decodeVoteBool(value) {\n  return value ? new Uint8Array([AYE_BITS | DEF_CONV]) : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\n\n\nfunction decodeVoteU8a(value) {\n  return value.length ? value.subarray(0, 1) : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\n\n\nfunction decodeVoteType(registry, value) {\n  return new Uint8Array([(new Bool(registry, value.aye).isTrue ? AYE_BITS : NAY_BITS) | registry.createTypeUnsafe('Conviction', [value.conviction || DEF_CONV]).index]);\n}\n/** @internal */\n\n\nfunction decodeVote(registry, value) {\n  if (isU8a(value)) {\n    return decodeVoteU8a(value);\n  } else if (isUndefined(value) || value instanceof Boolean || isBoolean(value)) {\n    return decodeVoteBool(new Bool(registry, value).isTrue);\n  } else if (isNumber(value)) {\n    return decodeVoteBool(value < 0);\n  }\n\n  return decodeVoteType(registry, value);\n}\n/**\n * @name GenericVote\n * @description\n * A number of lock periods, plus a vote, one way or the other.\n */\n\n\nexport class GenericVote extends U8aFixed {\n  #aye;\n  #conviction;\n\n  constructor(registry, value) {\n    // decoded is just 1 byte\n    // Aye: Most Significant Bit\n    // Conviction: 0000 - 0101\n    const decoded = decodeVote(registry, value);\n    super(registry, decoded, 8);\n    this.#aye = (decoded[0] & AYE_BITS) === AYE_BITS;\n    this.#conviction = this.registry.createTypeUnsafe('Conviction', [decoded[0] & CON_MASK]);\n  }\n  /**\n   * @description returns a V2 conviction\n   */\n\n\n  get conviction() {\n    return this.#conviction;\n  }\n  /**\n   * @description true if the wrapped value is a positive vote\n   */\n\n\n  get isAye() {\n    return this.#aye;\n  }\n  /**\n   * @description true if the wrapped value is a negative vote\n   */\n\n\n  get isNay() {\n    return !this.isAye;\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExpanded) {\n    return {\n      conviction: this.conviction.toHuman(isExpanded),\n      vote: this.isAye ? 'Aye' : 'Nay'\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Vote';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, compactFromU8a, compactToU8a, isString, u8aConcat, u8aToU8a } from '@polkadot/util';\nimport { Raw } from \"../native/Raw.js\";\n/** @internal */\n\nfunction decodeBitVecU8a(value) {\n  if (!value || !value.length) {\n    return [0, new Uint8Array()];\n  } // handle all other Uint8Array inputs, these do have a length prefix which is the number of bits encoded\n\n\n  const [offset, length] = compactFromU8a(value);\n  const total = offset + Math.ceil(length.toNumber() / 8);\n  assert(total <= value.length, () => `BitVec: required length less than remainder, expected at least ${total}, found ${value.length}`);\n  return [length.toNumber(), value.subarray(offset, total)];\n}\n/** @internal */\n\n\nfunction decodeBitVec(value) {\n  if (Array.isArray(value) || isString(value)) {\n    const u8a = u8aToU8a(value);\n    return [u8a.length / 8, u8a];\n  }\n\n  return decodeBitVecU8a(value);\n}\n/**\n * @name BitVec\n * @description\n * A BitVec that represents an array of bits. The bits are however stored encoded. The difference between this\n * and a normal Bytes would be that the length prefix indicates the number of bits encoded, not the bytes\n */\n\n\nexport class BitVec extends Raw {\n  #decodedLength;\n  #isMsb; // In lieu of having the Msb/Lsb identifiers passed through, we default to assuming\n  // we are dealing with Lsb, which is the default (as of writing) BitVec format used\n  // in the Polkadot code (this only affects the toHuman displays)\n\n  constructor(registry, value, isMsb = false) {\n    const [decodedLength, u8a] = decodeBitVec(value);\n    super(registry, u8a);\n    this.#decodedLength = decodedLength;\n    this.#isMsb = isMsb;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.length + compactToU8a(this.#decodedLength).length;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [compactToU8a(this.#decodedLength), super.toU8a()]\n    };\n  }\n\n  toHuman() {\n    return `0b${[...this.toU8a(true)].map(d => `00000000${d.toString(2)}`.slice(-8)).map(s => this.#isMsb ? s : s.split('').reverse().join('')).join('_')}`;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'BitVec';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const bitVec = super.toU8a();\n    return isBare ? bitVec : u8aConcat(compactToU8a(this.#decodedLength), bitVec);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i8\n * @description\n * An 8-bit signed integer\n */\n\nexport class i8 extends Int.with(8) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i8';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i16\n * @description\n * A 16-bit signed integer\n */\n\nexport class i16 extends Int.with(16) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i16';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i32\n * @description\n * A 32-bit signed integer\n */\n\nexport class i32 extends Int.with(32) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i32';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i64\n * @description\n * A 64-bit signed integer\n */\n\nexport class i64 extends Int.with(64) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i64';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i128\n * @description\n * A 128-bit signed integer\n */\n\nexport class i128 extends Int.with(128) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i128';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i256\n * @description\n * A 256-bit signed integer\n */\n\nexport class i256 extends Int.with(256) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i256';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, compactAddLength, compactFromU8a, compactToU8a, hexToU8a, isHex, isString, isU8a, stringToU8a, u8aToHex, u8aToString } from '@polkadot/util';\nimport { Raw } from \"./Raw.js\";\nconst MAX_LENGTH = 128 * 1024;\n/** @internal */\n\nfunction decodeText(value) {\n  if (isU8a(value)) {\n    if (!value.length) {\n      return ['', 0];\n    } // for Raw, the internal buffer does not have an internal length\n    // (the same applies in e.g. Bytes, where length is added at encoding-time)\n\n\n    if (value instanceof Raw) {\n      return [u8aToString(value), 0];\n    }\n\n    const [offset, length] = compactFromU8a(value);\n    const total = offset + length.toNumber();\n    assert(length.lten(MAX_LENGTH), () => `Text: length ${length.toString()} exceeds ${MAX_LENGTH}`);\n    assert(total <= value.length, () => `Text: required length less than remainder, expected at least ${total}, found ${value.length}`);\n    return [u8aToString(value.subarray(offset, total)), total];\n  } else if (isHex(value)) {\n    return [u8aToString(hexToU8a(value)), 0];\n  }\n\n  return [value ? value.toString() : '', 0];\n}\n/**\n * @name Text\n * @description\n * This is a string wrapper, along with the length. It is used both for strings as well\n * as items such as documentation. It simply extends the standard JS `String` built-in\n * object, inheriting all methods exposed from `String`.\n * @noInheritDoc\n */\n// TODO\n//   - Strings should probably be trimmed (docs do come through with extra padding)\n\n\nexport class Text extends String {\n  #initialU8aLength;\n  #override = null;\n\n  constructor(registry, value) {\n    const [str, decodedLength] = decodeText(value);\n    super(str);\n    this.registry = registry;\n    this.#initialU8aLength = decodedLength;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description The length of the initial encoded value (Only available when constructed from a Uint8Array)\n   */\n\n\n  get initialU8aLength() {\n    return this.#initialU8aLength;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.length === 0;\n  }\n  /**\n   * @description The length of the value\n   */\n\n\n  get length() {\n    // only included here since we ignore inherited docs\n    return super.length;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return isString(other) ? this.toString() === other.toString() : false;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const value = stringToU8a(super.toString());\n    return {\n      outer: value.length ? [compactToU8a(value.length), value] : [compactToU8a(value.length)]\n    };\n  }\n  /**\n   * @description Set an override value for this\n   */\n\n\n  setOverride(override) {\n    this.#override = override;\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    // like with Vec<u8>, when we are encoding to hex, we don't actually add\n    // the length prefix (it is already implied by the actual string length)\n    return u8aToHex(this.toU8a(true));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Text';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.#override || super.toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    // NOTE Here we use the super toString (we are not taking overrides into account,\n    // rather encoding the original value the string was constructed with)\n    const encoded = stringToU8a(super.toString());\n    return isBare ? encoded : compactAddLength(encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Text } from \"../native/Text.js\";\nimport { sanitize } from \"../utils/index.js\";\n/**\n * @name Type\n * @description\n * This is a extended version of Text, specifically to handle types. Here we rely fully\n * on what Text provides us, however we also adjust the types received from the runtime,\n * i.e. we remove the `T::` prefixes found in some types for consistency across implementation.\n */\n\nexport class Type extends Text {\n  constructor(registry, value = '') {\n    super(registry, value);\n    this.setOverride(sanitize(this.toString()));\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Type';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u8\n * @description\n * An 8-bit unsigned integer\n */\n\nexport class u8 extends UInt.with(8) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u8';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u16\n * @description\n * A 16-bit unsigned integer\n */\n\nexport class u16 extends UInt.with(16) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u16';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u128\n * @description\n * A 128-bit unsigned integer\n */\n\nexport class u128 extends UInt.with(128) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u128';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u256\n * @description\n * A 256-bit unsigned integer\n */\n\nexport class u256 extends UInt.with(256) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u256';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u32 } from \"./U32.js\";\n/**\n * @name USize\n * @description\n * A System default unsigned number, typically used in RPC to report non-consensus\n * data. It is a wrapper for [[U32]] as a WASM default (as generated by Rust bindings).\n * It is not to be used, since it created consensus mismatches.\n */\n\nexport class usize extends u32 {\n  constructor(registry, value) {\n    super(registry, value);\n    throw new Error('The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.');\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Enum } from '@polkadot/types-codec';\nimport { assert, isString, isU8a, u8aToU8a } from '@polkadot/util';\n/** @internal */\n\nfunction decodeDataU8a(registry, value) {\n  const indicator = value[0];\n\n  if (!indicator) {\n    return [undefined, undefined];\n  } else if (indicator >= 1 && indicator <= 33) {\n    const length = indicator - 1;\n    const data = value.subarray(1, length + 1); // in this case, we are passing a Raw back (since we have no length)\n\n    return [registry.createTypeUnsafe('Raw', [data]), 1];\n  } else if (indicator >= 34 && indicator <= 37) {\n    return [value.subarray(1, 32 + 1), indicator - 32]; // 34 becomes 2\n  }\n\n  throw new Error(`Unable to decode Data, invalid indicator byte ${indicator}`);\n}\n/** @internal */\n\n\nfunction decodeData(registry, value) {\n  if (isU8a(value) || isString(value)) {\n    return decodeDataU8a(registry, u8aToU8a(value));\n  } else if (!value) {\n    return [undefined, undefined];\n  } // assume we have an Enum or an  object input, handle this via the normal Enum decoding\n\n\n  return [value, undefined];\n}\n/**\n * @name Data\n * @description\n * A [[Data]] container with node, raw or hashed data\n */\n\n\nexport class Data extends Enum {\n  constructor(registry, value) {\n    super(registry, {\n      None: 'Null',\n      // 0\n      Raw: 'Bytes',\n      // 1\n      // eslint-disable-next-line sort-keys\n      BlakeTwo256: 'H256',\n      // 2\n      Sha256: 'H256',\n      // 3\n      // eslint-disable-next-line sort-keys\n      Keccak256: 'H256',\n      // 4\n      ShaThree256: 'H256' // 5\n\n    }, ...decodeData(registry, value));\n    assert(!this.isRaw || this.asRaw.length <= 32, 'Data.Raw values are limited to a maximum length of 32 bytes');\n  }\n\n  get asBlakeTwo256() {\n    return this.value;\n  }\n\n  get asKeccak256() {\n    return this.value;\n  }\n\n  get asRaw() {\n    return this.value;\n  }\n\n  get asSha256() {\n    return this.value;\n  }\n\n  get asShaThree256() {\n    return this.value;\n  }\n\n  get isBlakeTwo256() {\n    return this.index === 2;\n  }\n\n  get isKeccak256() {\n    return this.index === 4;\n  }\n\n  get isNone() {\n    return this.index === 0;\n  }\n\n  get isRaw() {\n    return this.index === 1;\n  }\n\n  get isSha256() {\n    return this.index === 3;\n  }\n\n  get isShaThree256() {\n    return this.index === 5;\n  }\n  /**\n   * @description The encoded length\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   */\n\n\n  toU8a() {\n    if (this.index === 0) {\n      return new Uint8Array(1);\n    } else if (this.index === 1) {\n      // don't add the length, just the data\n      const data = this.value.toU8a(true);\n      const length = Math.min(data.length, 32);\n      const u8a = new Uint8Array(length + 1);\n      u8a.set([length + 1], 0);\n      u8a.set(data.subarray(0, length), 1);\n      return u8a;\n    } // otherwise we simply have a hash\n\n\n    const u8a = new Uint8Array(33);\n    u8a.set([this.index + 32], 0);\n    u8a.set(this.value.toU8a(), 1);\n    return u8a;\n  }\n\n}","export default function _classPrivateFieldBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n\n  return receiver;\n}","var id = 0;\nexport default function _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, isNumber, isUndefined, objectSpread, stringify } from '@polkadot/util';\nimport { TypeDefInfo } from \"../types/index.js\";\n\nconst stringIdentity = value => value.toString();\n\nconst INFO_WRAP = ['BTreeMap', 'BTreeSet', 'Compact', 'HashMap', 'Option', 'Result', 'Vec'];\nexport function paramsNotation(outer, inner, transform = stringIdentity) {\n  return `${outer}${inner ? `<${(Array.isArray(inner) ? inner : [inner]).map(transform).join(', ')}>` : ''}`;\n}\n\nfunction encodeWithParams(registry, typeDef, outer) {\n  const {\n    info,\n    sub\n  } = typeDef;\n\n  switch (info) {\n    case TypeDefInfo.BTreeMap:\n    case TypeDefInfo.BTreeSet:\n    case TypeDefInfo.Compact:\n    case TypeDefInfo.HashMap:\n    case TypeDefInfo.Linkage:\n    case TypeDefInfo.Option:\n    case TypeDefInfo.Range:\n    case TypeDefInfo.RangeInclusive:\n    case TypeDefInfo.Result:\n    case TypeDefInfo.Vec:\n    case TypeDefInfo.WrapperKeepOpaque:\n    case TypeDefInfo.WrapperOpaque:\n      return paramsNotation(outer, sub, p => encodeTypeDef(registry, p));\n  }\n\n  throw new Error(`Unable to encode ${stringify(typeDef)} with params`);\n}\n\nfunction encodeSubTypes(registry, sub, asEnum, extra) {\n  const names = sub.map(({\n    name\n  }) => name);\n  assert(names.every(n => !!n), () => `Subtypes does not have consistent names, ${names.join(', ')}`);\n  const inner = objectSpread({}, extra);\n\n  for (let i = 0; i < sub.length; i++) {\n    const def = sub[i];\n    inner[def.name] = encodeTypeDef(registry, def);\n  }\n\n  return stringify(asEnum ? {\n    _enum: inner\n  } : inner);\n} // We setup a record here to ensure we have comprehensive coverage (any item not covered will result\n// in a compile-time error with the missing index)\n\n\nconst encoders = {\n  [TypeDefInfo.BTreeMap]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'BTreeMap'),\n  [TypeDefInfo.BTreeSet]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'BTreeSet'),\n  [TypeDefInfo.Compact]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Compact'),\n  [TypeDefInfo.DoNotConstruct]: (registry, {\n    displayName,\n    lookupIndex,\n    lookupName\n  }) => `DoNotConstruct<${lookupName || displayName || (isUndefined(lookupIndex) ? 'Unknown' : registry.createLookupType(lookupIndex))}>`,\n  [TypeDefInfo.Enum]: (registry, {\n    sub\n  }) => {\n    assert(sub && Array.isArray(sub), 'Unable to encode Enum type'); // c-like enums have all Null entries\n    // TODO We need to take the disciminant into account and auto-add empty entries\n\n    return sub.every(({\n      type\n    }) => type === 'Null') ? stringify({\n      _enum: sub.map(({\n        name\n      }, index) => `${name || `Empty${index}`}`)\n    }) : encodeSubTypes(registry, sub, true);\n  },\n  [TypeDefInfo.HashMap]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'HashMap'),\n  [TypeDefInfo.Int]: (registry, {\n    length = 32\n  }) => `Int<${length}>`,\n  [TypeDefInfo.Linkage]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Linkage'),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [TypeDefInfo.Null]: (registry, typeDef) => 'Null',\n  [TypeDefInfo.Option]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Option'),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [TypeDefInfo.Plain]: (registry, {\n    displayName,\n    type\n  }) => displayName || type,\n  [TypeDefInfo.Range]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Range'),\n  [TypeDefInfo.RangeInclusive]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'RangeInclusive'),\n  [TypeDefInfo.Result]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Result'),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [TypeDefInfo.Set]: (registry, {\n    length = 8,\n    sub\n  }) => {\n    assert(sub && Array.isArray(sub), 'Unable to encode Set type');\n    return stringify({\n      _set: sub.reduce((all, {\n        index,\n        name\n      }, count) => objectSpread(all, {\n        [`${name || `Unknown${index || count}`}`]: index || count\n      }), {\n        _bitLength: length || 8\n      })\n    });\n  },\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [TypeDefInfo.Si]: (registry, {\n    lookupName,\n    type\n  }) => lookupName || type,\n  [TypeDefInfo.Struct]: (registry, {\n    alias,\n    sub\n  }) => {\n    assert(sub && Array.isArray(sub), 'Unable to encode Struct type');\n    return encodeSubTypes(registry, sub, false, alias ? {\n      _alias: [...alias.entries()].reduce((all, [k, v]) => objectSpread(all, {\n        [k]: v\n      }), {})\n    } : {});\n  },\n  [TypeDefInfo.Tuple]: (registry, {\n    sub\n  }) => {\n    assert(sub && Array.isArray(sub), 'Unable to encode Tuple type');\n    return `(${sub.map(type => encodeTypeDef(registry, type)).join(',')})`;\n  },\n  [TypeDefInfo.UInt]: (registry, {\n    length = 32\n  }) => `UInt<${length}>`,\n  [TypeDefInfo.Vec]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Vec'),\n  [TypeDefInfo.VecFixed]: (registry, {\n    length,\n    sub\n  }) => {\n    assert(isNumber(length) && !isUndefined(sub) && !Array.isArray(sub), 'Unable to encode VecFixed type');\n    return `[${sub.type};${length}]`;\n  },\n  [TypeDefInfo.WrapperKeepOpaque]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'WrapperKeepOpaque'),\n  [TypeDefInfo.WrapperOpaque]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'WrapperOpaque')\n};\n\nfunction encodeType(registry, typeDef, withLookup = true) {\n  return withLookup && typeDef.lookupName ? typeDef.lookupName : encoders[typeDef.info](registry, typeDef);\n}\n\nexport function encodeTypeDef(registry, typeDef) {\n  // In the case of contracts we do have the unfortunate situation where the displayName would\n  // refer to \"Option\" when it is an option. For these, string it out, only using when actually\n  // not a top-level element to be used\n  return typeDef.displayName && !INFO_WRAP.some(i => typeDef.displayName === i) ? typeDef.displayName : encodeType(registry, typeDef);\n}\nexport function withTypeString(registry, typeDef) {\n  return objectSpread({}, typeDef, {\n    type: encodeType(registry, typeDef, false)\n  });\n}","import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sanitize, Struct } from '@polkadot/types-codec';\nimport { getTypeDef, TypeDefInfo, withTypeString } from '@polkadot/types-create';\nimport { assert, assertUnreachable, isNumber, isString, logger, objectSpread, stringCamelCase, stringify, stringPascalCase } from '@polkadot/util';\nconst l = logger('PortableRegistry'); // Just a placeholder for a type.unrwapOr()\n\nconst TYPE_UNWRAP = {\n  toNumber: () => -1\n}; // Alias the primitive enum with out known values\n\nconst PRIMITIVE_ALIAS = {\n  Char: 'u32',\n  // Rust char is 4-bytes\n  Str: 'Text'\n}; // These are types where we have a specific decoding/encoding override + helpers\n\nconst PATHS_ALIAS = splitNamespace([// full matching on exact names...\n// these are well-known types with additional encoding\n'sp_core::crypto::AccountId32', 'sp_runtime::generic::era::Era', 'sp_runtime::multiaddress::MultiAddress', // ethereum overrides (Frontier, Moonbeam, Polkadot claims)\n'account::AccountId20', 'polkadot_runtime_common::claims::EthereumAddress', // wildcard matching in place...\n// these have a specific encoding or logic, use a wildcard for {pallet, darwinia}_democracy\n'*_democracy::vote::Vote', '*_identity::types::Data', // shorten some well-known types\n'primitive_types::*', 'sp_arithmetic::per_things::*', // ink!\n'ink_env::types::*']); // Mappings for types that should be converted to set via BitVec\n\nconst PATHS_SET = splitNamespace(['pallet_identity::types::BitFlags']); // These are the set namespaces for BitVec definitions (the last 2 appear in types as well)\n\nconst BITVEC_NS_LSB = ['bitvec::order::Lsb0', 'BitOrderLsb0'];\nconst BITVEC_NS_MSB = ['bitvec::order::Msb0', 'BitOrderMsb0'];\nconst BITVEC_NS = [...BITVEC_NS_LSB, ...BITVEC_NS_MSB]; // These we never use these as top-level names, they are wrappers\n\nconst WRAPPERS = ['BoundedBTreeMap', 'BoundedVec', 'Box', 'BTreeMap', 'Cow', 'Result', 'Option', 'WeakBoundedVec', 'WrapperKeepOpaque', 'WrapperOpaque']; // These are reserved and/or conflicts with built-in Codec or JS definitions\n\nconst RESERVED = ['entries', 'hash', 'keys', 'new', 'size']; // Remove these from all paths at index 1\n\nconst PATH_RM_INDEX_1 = ['generic', 'misc', 'pallet', 'traits', 'types'];\n\nfunction splitNamespace(values) {\n  return values.map(v => v.split('::'));\n}\n\nfunction createNamespace({\n  path\n}) {\n  return sanitizeDocs(path).join('::');\n}\n\nfunction sanitizeDocs(docs) {\n  return docs.map(d => d.toString());\n}\n\nfunction matchParts(first, second) {\n  return first.length === second.length && first.every((a, index) => {\n    const b = second[index].toString();\n\n    if (a === '*' || a === b) {\n      return true;\n    }\n\n    if (a.includes('*') && a.includes('_') && b.includes('_')) {\n      let suba = a.split('_');\n      let subb = b.split('_'); // match initial *'s to multiples if we have a match for the other\n\n      if (suba[0] === '*') {\n        const indexOf = subb.indexOf(suba[1]);\n\n        if (indexOf !== -1) {\n          suba = suba.slice(1);\n          subb = subb.slice(indexOf);\n        }\n      } // check for * matches at the end, adjust accordingly\n\n\n      if (suba.length === 2 && suba[1] === '*' && suba[0] === subb[0]) {\n        return true;\n      }\n\n      return matchParts(suba, subb);\n    }\n\n    return false;\n  });\n} // check if the path matches the PATHS_ALIAS (with wildcards)\n\n\nfunction getAliasPath(path) {\n  // TODO We need to handle ink! Balance in some way\n  return path.length && PATHS_ALIAS.some(a => matchParts(a, path)) ? path[path.length - 1].toString() : null;\n}\n\nfunction hasNoDupes(input) {\n  for (let i = 0; i < input.length; i++) {\n    const [ai, an] = input[i];\n\n    for (let j = 0; j < input.length; j++) {\n      const [bi, bn] = input[j]; // if the indexes are not the same and the names match, we have a dupe\n\n      if (ai !== bi && an === bn) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction removeDuplicateNames(lookup, names) {\n  const rewrite = {};\n  return names.map(([lookupIndex, name, params]) => {\n    if (!name) {\n      return null;\n    } // those where the name is matching (since name is filtered, these all do have names)\n\n\n    const allSame = names.filter(([, oName]) => name === oName); // are there among matching names\n\n    const anyDiff = allSame.some(([oIndex,, oParams]) => lookupIndex !== oIndex && (params.length !== oParams.length || params.some((p, index) => !p.name.eq(oParams[index].name) || p.type.unwrapOr(TYPE_UNWRAP).toNumber() !== oParams[index].type.unwrapOr(TYPE_UNWRAP).toNumber()))); // everything matches, we can combine these\n\n    if (!anyDiff || !allSame[0][2].length) {\n      return [lookupIndex, name, params];\n    } // find the first parameter that yields differences\n\n\n    const paramIdx = allSame[0][2].findIndex(({\n      type\n    }, index) => allSame.every(([,, params]) => params[index].type.isSome) && allSame.every(([,, params], aIndex) => aIndex === 0 || !params[index].type.eq(type))); // No param found that is different\n\n    if (paramIdx === -1) {\n      return [lookupIndex, name, params];\n    } // see if using the param type helps\n\n\n    const adjusted = new Array(allSame.length);\n\n    for (let i = 0; i < allSame.length; i++) {\n      const [oIndex, oName, oParams] = allSame[i];\n      const {\n        def,\n        path\n      } = lookup.getSiType(oParams[paramIdx].type.unwrap());\n\n      if (!def.isPrimitive && !path.length) {\n        return null;\n      }\n\n      adjusted[i] = [oIndex, def.isPrimitive ? `${oName}${def.asPrimitive.toString()}` : `${oName}${path[path.length - 1].toString()}`, params];\n    }\n\n    if (hasNoDupes(adjusted)) {\n      for (let i = 0; i < adjusted.length; i++) {\n        const [index, name] = adjusted[i];\n        rewrite[index] = name;\n      }\n\n      return [lookupIndex, name, params];\n    }\n\n    return null;\n  }).filter(n => !!n).map(([lookupIndex, name, params]) => [lookupIndex, rewrite[lookupIndex] || name, params]);\n}\n\nfunction extractName(types, {\n  id,\n  type: {\n    params,\n    path\n  }\n}) {\n  // if we have no path or determined as a wrapper, we just skip it\n  if (!path.length || WRAPPERS.includes(path[path.length - 1].toString())) {\n    return null;\n  }\n\n  const parts = path.map(p => stringPascalCase(p)).filter((p, index) => {\n    const lower = p.toLowerCase();\n    return ( // Remove ::{generic, misc, pallet, traits, types}::\n    index !== 1 || !PATH_RM_INDEX_1.includes(lower)) && ( // sp_runtime::generic::digest::Digest -> sp_runtime::generic::Digest\n    // sp_runtime::multiaddress::MultiAddress -> sp_runtime::MultiAddress\n    index === path.length - 1 || lower !== path[index + 1].toLowerCase());\n  });\n  let typeName = parts.join(''); // do magic for RawOrigin lookup, e.g. pallet_collective::RawOrigin\n\n  if (parts.length === 2 && parts[1] === 'RawOrigin' && params.length === 2 && params[1].type.isSome) {\n    const instanceType = types[params[1].type.unwrap().toNumber()];\n\n    if (instanceType.type.path.length === 2) {\n      typeName = `${typeName}${instanceType.type.path[1].toString()}`;\n    }\n  }\n\n  return [id.toNumber(), typeName, params];\n}\n\nfunction registerTypes(lookup, lookups, names, params) {\n  // Register the types we extracted\n  lookup.registry.register(lookups); // Try and extract the AccountId/Address/Signature type from UncheckedExtrinsic\n\n  if (params.SpRuntimeUncheckedExtrinsic) {\n    // Address, Call, Signature, Extra\n    const [addrParam,, sigParam] = params.SpRuntimeUncheckedExtrinsic;\n    const siAddress = lookup.getSiType(addrParam.type.unwrap());\n    const siSignature = lookup.getSiType(sigParam.type.unwrap());\n    const nsSignature = createNamespace(siSignature);\n    let nsAccountId = createNamespace(siAddress);\n    const isMultiAddress = nsAccountId === 'sp_runtime::multiaddress::MultiAddress'; // With multiaddress, we check the first type param again\n\n    if (isMultiAddress) {\n      // AccountId, AccountIndex\n      const [idParam] = siAddress.params;\n      nsAccountId = createNamespace(lookup.getSiType(idParam.type.unwrap()));\n    }\n\n    lookup.registry.register({\n      AccountId: ['sp_core::crypto::AccountId32'].includes(nsAccountId) ? 'AccountId32' : ['account::AccountId20', 'primitive_types::H160'].includes(nsAccountId) ? 'AccountId20' : 'AccountId32',\n      // other, default to AccountId32\n      Address: isMultiAddress ? 'MultiAddress' : 'AccountId',\n      ExtrinsicSignature: ['sp_runtime::MultiSignature'].includes(nsSignature) ? 'MultiSignature' : names[sigParam.type.unwrap().toNumber()] || 'MultiSignature'\n    });\n  }\n} // this extracts aliases based on what we know the runtime config looks like in a\n// Substrate chain. Specifically we want to have access to the Call and Event params\n\n\nfunction extractAliases(params, isContract) {\n  const hasParams = Object.keys(params).some(k => !k.startsWith('Pallet'));\n  const alias = {};\n\n  if (params.SpRuntimeUncheckedExtrinsic) {\n    // Address, Call, Signature, Extra\n    const [, {\n      type\n    }] = params.SpRuntimeUncheckedExtrinsic;\n    alias[type.unwrap().toNumber()] = 'Call';\n  } else if (hasParams && !isContract) {\n    l.warn('Unable to determine runtime Call type, cannot inspect sp_runtime::generic::unchecked_extrinsic::UncheckedExtrinsic');\n  }\n\n  if (params.FrameSystemEventRecord) {\n    // Event, Topic\n    const [{\n      type\n    }] = params.FrameSystemEventRecord;\n    alias[type.unwrap().toNumber()] = 'Event';\n  } else if (hasParams && !isContract) {\n    l.warn('Unable to determine runtime Event type, cannot inspect frame_system::EventRecord');\n  }\n\n  return alias;\n}\n\nfunction extractTypeInfo(lookup, portable) {\n  const nameInfo = [];\n  const types = {};\n\n  for (let i = 0; i < portable.length; i++) {\n    const type = portable[i];\n    const extracted = extractName(portable, portable[i]);\n\n    if (extracted) {\n      nameInfo.push(extracted);\n    }\n\n    types[type.id.toNumber()] = type;\n  }\n\n  const dedup = removeDuplicateNames(lookup, nameInfo);\n  const lookups = {};\n  const names = {};\n  const params = {};\n\n  for (let i = 0; i < dedup.length; i++) {\n    const [lookupIndex, name, p] = dedup[i];\n    names[lookupIndex] = name;\n    lookups[name] = lookup.registry.createLookupType(lookupIndex);\n    params[name] = p;\n  }\n\n  return [types, lookups, names, params];\n}\n\nvar _alias = /*#__PURE__*/_classPrivateFieldLooseKey(\"alias\");\n\nvar _lookups = /*#__PURE__*/_classPrivateFieldLooseKey(\"lookups\");\n\nvar _names = /*#__PURE__*/_classPrivateFieldLooseKey(\"names\");\n\nvar _params = /*#__PURE__*/_classPrivateFieldLooseKey(\"params\");\n\nvar _typeDefs = /*#__PURE__*/_classPrivateFieldLooseKey(\"typeDefs\");\n\nvar _types = /*#__PURE__*/_classPrivateFieldLooseKey(\"types\");\n\nvar _createSiDef = /*#__PURE__*/_classPrivateFieldLooseKey(\"createSiDef\");\n\nvar _getLookupId = /*#__PURE__*/_classPrivateFieldLooseKey(\"getLookupId\");\n\nvar _extract = /*#__PURE__*/_classPrivateFieldLooseKey(\"extract\");\n\nvar _extractArray = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractArray\");\n\nvar _extractBitSequence = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractBitSequence\");\n\nvar _extractCompact = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractCompact\");\n\nvar _extractComposite = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractComposite\");\n\nvar _extractCompositeSet = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractCompositeSet\");\n\nvar _extractFields = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractFields\");\n\nvar _extractFieldsAlias = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractFieldsAlias\");\n\nvar _extractHistoric = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractHistoric\");\n\nvar _extractPrimitive = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractPrimitive\");\n\nvar _extractAliasPath = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractAliasPath\");\n\nvar _extractSequence = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractSequence\");\n\nvar _extractTuple = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractTuple\");\n\nvar _extractVariant = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractVariant\");\n\nvar _extractVariantEnum = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractVariantEnum\");\n\nexport class PortableRegistry extends Struct {\n  constructor(registry, value, isContract) {\n    // console.time('PortableRegistry')\n    super(registry, {\n      types: 'Vec<PortableType>'\n    }, value);\n    Object.defineProperty(this, _extractVariantEnum, {\n      value: _extractVariantEnum2\n    });\n    Object.defineProperty(this, _extractVariant, {\n      value: _extractVariant2\n    });\n    Object.defineProperty(this, _extractTuple, {\n      value: _extractTuple2\n    });\n    Object.defineProperty(this, _extractSequence, {\n      value: _extractSequence2\n    });\n    Object.defineProperty(this, _extractAliasPath, {\n      value: _extractAliasPath2\n    });\n    Object.defineProperty(this, _extractPrimitive, {\n      value: _extractPrimitive2\n    });\n    Object.defineProperty(this, _extractHistoric, {\n      value: _extractHistoric2\n    });\n    Object.defineProperty(this, _extractFieldsAlias, {\n      value: _extractFieldsAlias2\n    });\n    Object.defineProperty(this, _extractFields, {\n      value: _extractFields2\n    });\n    Object.defineProperty(this, _extractCompositeSet, {\n      value: _extractCompositeSet2\n    });\n    Object.defineProperty(this, _extractComposite, {\n      value: _extractComposite2\n    });\n    Object.defineProperty(this, _extractCompact, {\n      value: _extractCompact2\n    });\n    Object.defineProperty(this, _extractBitSequence, {\n      value: _extractBitSequence2\n    });\n    Object.defineProperty(this, _extractArray, {\n      value: _extractArray2\n    });\n    Object.defineProperty(this, _extract, {\n      value: _extract2\n    });\n    Object.defineProperty(this, _getLookupId, {\n      value: _getLookupId2\n    });\n    Object.defineProperty(this, _createSiDef, {\n      value: _createSiDef2\n    });\n    Object.defineProperty(this, _alias, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _lookups, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _names, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _params, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _typeDefs, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _types, {\n      writable: true,\n      value: void 0\n    });\n    const [types, lookups, names, _params2] = extractTypeInfo(this, this.types);\n    _classPrivateFieldLooseBase(this, _alias)[_alias] = extractAliases(_params2, isContract);\n    _classPrivateFieldLooseBase(this, _lookups)[_lookups] = lookups;\n    _classPrivateFieldLooseBase(this, _names)[_names] = names;\n    _classPrivateFieldLooseBase(this, _params)[_params] = _params2;\n    _classPrivateFieldLooseBase(this, _types)[_types] = types; // console.timeEnd('PortableRegistry')\n  }\n\n  get names() {\n    return Object.values(_classPrivateFieldLooseBase(this, _names)[_names]).sort();\n  }\n  /**\n   * @description The types of the registry\n   */\n\n\n  get types() {\n    return this.getT('types');\n  }\n\n  register() {\n    registerTypes(this, _classPrivateFieldLooseBase(this, _lookups)[_lookups], _classPrivateFieldLooseBase(this, _names)[_names], _classPrivateFieldLooseBase(this, _params)[_params]);\n  }\n  /**\n   * @description Returns the name for a specific lookup\n   */\n\n\n  getName(lookupId) {\n    return _classPrivateFieldLooseBase(this, _names)[_names][_classPrivateFieldLooseBase(this, _getLookupId)[_getLookupId](lookupId)];\n  }\n  /**\n   * @description Finds a specific type in the registry\n   */\n\n\n  getSiType(lookupId) {\n    // NOTE catch-22 - this may already be used as part of the constructor, so\n    // ensure that we have actually initialized it correctly\n    const found = (_classPrivateFieldLooseBase(this, _types)[_types] || this.types)[_classPrivateFieldLooseBase(this, _getLookupId)[_getLookupId](lookupId)];\n\n    assert(found, () => `PortableRegistry: Unable to find type with lookupId ${lookupId.toString()}`);\n    return found.type;\n  }\n  /**\n   * @description Lookup the type definition for the index\n   */\n\n\n  getTypeDef(lookupId) {\n    const lookupIndex = _classPrivateFieldLooseBase(this, _getLookupId)[_getLookupId](lookupId);\n\n    if (!_classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex]) {\n      const lookupName = _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex];\n\n      const empty = {\n        info: TypeDefInfo.DoNotConstruct,\n        lookupIndex,\n        lookupName,\n        type: this.registry.createLookupType(lookupIndex)\n      }; // Set named items since we will get into circular lookups along the way\n\n      if (lookupName) {\n        _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex] = empty;\n      }\n\n      const extracted = _classPrivateFieldLooseBase(this, _extract)[_extract](this.getSiType(lookupId), lookupIndex); // For non-named items, we only set this right at the end\n\n\n      if (!lookupName) {\n        _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex] = empty;\n      }\n\n      Object.keys(extracted).forEach(k => {\n        if (k !== 'lookupName' || extracted[k]) {\n          // these are safe since we are looking through the keys as set\n          _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex][k] = extracted[k];\n        }\n      }); // don't set lookupName on lower-level, we want to always direct to the type\n\n      if (extracted.info === TypeDefInfo.Plain) {\n        _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex].lookupNameRoot = _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex].lookupName;\n        delete _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex].lookupName;\n      }\n    }\n\n    return _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex];\n  }\n\n}\n\nfunction _createSiDef2(lookupId) {\n  const typeDef = this.getTypeDef(lookupId);\n  const lookupIndex = lookupId.toNumber(); // Setup for a lookup on complex types\n\n  return [TypeDefInfo.DoNotConstruct, TypeDefInfo.Enum, TypeDefInfo.Struct].includes(typeDef.info) && typeDef.lookupName ? {\n    docs: typeDef.docs,\n    info: TypeDefInfo.Si,\n    lookupIndex,\n    lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex],\n    type: this.registry.createLookupType(lookupId)\n  } : typeDef;\n}\n\nfunction _getLookupId2(lookupId) {\n  if (isString(lookupId)) {\n    assert(this.registry.isLookupType(lookupId), () => `PortableRegistry: Expected a lookup string type, found ${lookupId}`);\n    return parseInt(lookupId.replace('Lookup', ''), 10);\n  } else if (isNumber(lookupId)) {\n    return lookupId;\n  }\n\n  return lookupId.toNumber();\n}\n\nfunction _extract2(type, lookupIndex) {\n  const namespace = [...type.path].join('::');\n  let typeDef;\n  const aliasType = _classPrivateFieldLooseBase(this, _alias)[_alias][lookupIndex] || getAliasPath(type.path);\n\n  try {\n    if (aliasType) {\n      typeDef = _classPrivateFieldLooseBase(this, _extractAliasPath)[_extractAliasPath](lookupIndex, aliasType);\n    } else {\n      switch (type.def.type) {\n        case 'Array':\n          typeDef = _classPrivateFieldLooseBase(this, _extractArray)[_extractArray](lookupIndex, type.def.asArray);\n          break;\n\n        case 'BitSequence':\n          typeDef = _classPrivateFieldLooseBase(this, _extractBitSequence)[_extractBitSequence](lookupIndex, type.def.asBitSequence);\n          break;\n\n        case 'Compact':\n          typeDef = _classPrivateFieldLooseBase(this, _extractCompact)[_extractCompact](lookupIndex, type.def.asCompact);\n          break;\n\n        case 'Composite':\n          typeDef = _classPrivateFieldLooseBase(this, _extractComposite)[_extractComposite](lookupIndex, type, type.def.asComposite);\n          break;\n\n        case 'HistoricMetaCompat':\n          typeDef = _classPrivateFieldLooseBase(this, _extractHistoric)[_extractHistoric](lookupIndex, type.def.asHistoricMetaCompat);\n          break;\n\n        case 'Primitive':\n          typeDef = _classPrivateFieldLooseBase(this, _extractPrimitive)[_extractPrimitive](lookupIndex, type);\n          break;\n\n        case 'Sequence':\n          typeDef = _classPrivateFieldLooseBase(this, _extractSequence)[_extractSequence](lookupIndex, type.def.asSequence);\n          break;\n\n        case 'Tuple':\n          typeDef = _classPrivateFieldLooseBase(this, _extractTuple)[_extractTuple](lookupIndex, type.def.asTuple);\n          break;\n\n        case 'Variant':\n          typeDef = _classPrivateFieldLooseBase(this, _extractVariant)[_extractVariant](lookupIndex, type, type.def.asVariant);\n          break;\n\n        default:\n          assertUnreachable(type.def.type);\n      }\n    }\n  } catch (error) {\n    throw new Error(`PortableRegistry: ${lookupIndex}${namespace ? ` (${namespace})` : ''}: Error extracting ${stringify(type)}: ${error.message}`);\n  }\n\n  return objectSpread({\n    docs: sanitizeDocs(type.docs),\n    namespace\n  }, typeDef);\n}\n\nfunction _extractArray2(_, {\n  len: length,\n  type\n}) {\n  assert(!length || length.toNumber() <= 256, 'Only support for [Type; <length>], where length <= 256');\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.VecFixed,\n    length: length.toNumber(),\n    sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type)\n  });\n}\n\nfunction _extractBitSequence2(_, {\n  bitOrderType,\n  bitStoreType\n}) {\n  // With the v3 of scale-info this swapped around, but obviously the decoder cannot determine\n  // the order. With that in-mind, we apply a detection for LSb0/Msb and set accordingly\n  const a = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](bitOrderType);\n\n  const b = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](bitStoreType);\n\n  const [bitOrder, bitStore] = BITVEC_NS.includes(a.namespace || '') ? [a, b] : [b, a]; // NOTE: Currently the BitVec type is one-way only, i.e. we only use it to decode, not\n  // re-encode stuff. As such we ignore the msb/lsb identifier given by bitOrderType, or rather\n  // we don't pass it though at all (all displays in LSB)\n\n  assert(BITVEC_NS.includes(bitOrder.namespace || ''), () => `Unexpected bitOrder found as ${bitOrder.namespace || '<unknown>'}`);\n  assert(bitStore.info === TypeDefInfo.Plain && bitStore.type === 'u8', () => `Only u8 bitStore is currently supported, found ${bitStore.type}`);\n  return {\n    info: TypeDefInfo.Plain,\n    type: 'BitVec'\n  };\n}\n\nfunction _extractCompact2(_, {\n  type\n}) {\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.Compact,\n    sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type)\n  });\n}\n\nfunction _extractComposite2(lookupIndex, {\n  params,\n  path\n}, {\n  fields\n}) {\n  const pathFirst = path[0].toString();\n  const pathLast = path[path.length - 1].toString();\n\n  if (path.length === 1 && pathFirst === 'BTreeMap') {\n    return withTypeString(this.registry, {\n      info: TypeDefInfo.BTreeMap,\n      sub: params.map(({\n        type\n      }) => _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type.unwrap()))\n    });\n  } else if (path.length === 1 && pathFirst === 'BTreeSet') {\n    return withTypeString(this.registry, {\n      info: TypeDefInfo.BTreeSet,\n      sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](params[0].type.unwrap())\n    });\n  } else if (['Range', 'RangeInclusive'].includes(pathFirst)) {\n    return withTypeString(this.registry, {\n      info: pathFirst === 'Range' ? TypeDefInfo.Range : TypeDefInfo.RangeInclusive,\n      sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](params[0].type.unwrap()),\n      type: pathFirst\n    });\n  } else if (['WrapperKeepOpaque', 'WrapperOpaque'].includes(pathLast)) {\n    return withTypeString(this.registry, {\n      info: pathLast === 'WrapperKeepOpaque' ? TypeDefInfo.WrapperKeepOpaque : TypeDefInfo.WrapperOpaque,\n      sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](params[0].type.unwrap()),\n      type: pathLast\n    });\n  }\n\n  return PATHS_SET.some(p => matchParts(p, path)) ? _classPrivateFieldLooseBase(this, _extractCompositeSet)[_extractCompositeSet](lookupIndex, params, fields) : _classPrivateFieldLooseBase(this, _extractFields)[_extractFields](lookupIndex, fields);\n}\n\nfunction _extractCompositeSet2(_, params, fields) {\n  assert(params.length === 1 && fields.length === 1, 'Set handling expects param/field as single entries');\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.Set,\n    length: this.registry.createTypeUnsafe(this.registry.createLookupType(fields[0].type), []).bitLength(),\n    sub: this.getSiType(params[0].type.unwrap()).def.asVariant.variants.map(({\n      index,\n      name\n    }) => ({\n      // This will be an issue > 2^53 - 1 ... don't have those (yet)\n      index: index.toNumber(),\n      info: TypeDefInfo.Plain,\n      name: name.toString(),\n      type: 'Null'\n    }))\n  });\n}\n\nfunction _extractFields2(lookupIndex, fields) {\n  let isStruct = true;\n  let isTuple = true;\n\n  for (let f = 0; f < fields.length; f++) {\n    const {\n      name\n    } = fields[f];\n    isStruct = isStruct && name.isSome;\n    isTuple = isTuple && name.isNone;\n  }\n\n  assert(isTuple || isStruct, 'Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)');\n\n  if (fields.length === 0) {\n    return {\n      info: TypeDefInfo.Null,\n      type: 'Null'\n    };\n  } else if (isTuple && fields.length === 1) {\n    const typeDef = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](fields[0].type);\n\n    return objectSpread({}, typeDef, lookupIndex === -1 ? {} : {\n      lookupIndex,\n      lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex],\n      lookupNameRoot: typeDef.lookupName\n    }, fields[0].typeName.isSome ? {\n      typeName: sanitize(fields[0].typeName.unwrap())\n    } : null);\n  }\n\n  const [sub, alias] = _classPrivateFieldLooseBase(this, _extractFieldsAlias)[_extractFieldsAlias](fields);\n\n  return withTypeString(this.registry, objectSpread({\n    info: isTuple // Tuple check first\n    ? TypeDefInfo.Tuple : TypeDefInfo.Struct\n  }, alias.size ? {\n    alias\n  } : null, lookupIndex === -1 ? {} : {\n    lookupIndex,\n    lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex]\n  }, {\n    sub\n  }));\n}\n\nfunction _extractFieldsAlias2(fields) {\n  const alias = new Map();\n  const sub = new Array(fields.length);\n\n  for (let i = 0; i < fields.length; i++) {\n    const {\n      docs,\n      name,\n      type,\n      typeName\n    } = fields[i];\n\n    const typeDef = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type);\n\n    if (name.isNone) {\n      sub[i] = typeDef;\n    } else {\n      let nameField = stringCamelCase(name.unwrap());\n      let nameOrig = null;\n\n      if (nameField.includes('#')) {\n        nameOrig = nameField;\n        nameField = nameOrig.replace(/#/g, '_');\n      } else if (RESERVED.includes(nameField)) {\n        nameOrig = nameField;\n        nameField = `${nameField}_`;\n      }\n\n      if (nameOrig) {\n        alias.set(nameField, nameOrig);\n      }\n\n      sub[i] = objectSpread({}, typeDef, {\n        docs: sanitizeDocs(docs),\n        name: nameField\n      }, typeName.isSome ? {\n        typeName: sanitize(typeName.unwrap())\n      } : null);\n    }\n  }\n\n  return [sub, alias];\n}\n\nfunction _extractHistoric2(_, type) {\n  return objectSpread({}, getTypeDef(type), {\n    displayName: type.toString(),\n    isFromSi: true\n  });\n}\n\nfunction _extractPrimitive2(_, type) {\n  const typeStr = type.def.asPrimitive.type.toString();\n  return {\n    info: TypeDefInfo.Plain,\n    type: PRIMITIVE_ALIAS[typeStr] || typeStr.toLowerCase()\n  };\n}\n\nfunction _extractAliasPath2(_, type) {\n  return {\n    info: TypeDefInfo.Plain,\n    type\n  };\n}\n\nfunction _extractSequence2(lookupIndex, {\n  type\n}) {\n  const sub = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type);\n\n  if (sub.type === 'u8') {\n    return {\n      info: TypeDefInfo.Plain,\n      type: 'Bytes'\n    };\n  }\n\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.Vec,\n    lookupIndex,\n    lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex],\n    sub\n  });\n}\n\nfunction _extractTuple2(lookupIndex, ids) {\n  if (ids.length === 0) {\n    return {\n      info: TypeDefInfo.Null,\n      type: 'Null'\n    };\n  } else if (ids.length === 1) {\n    return this.getTypeDef(ids[0]);\n  }\n\n  const sub = ids.map(t => _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](t));\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.Tuple,\n    lookupIndex,\n    lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex],\n    sub\n  });\n}\n\nfunction _extractVariant2(lookupIndex, {\n  params,\n  path\n}, {\n  variants\n}) {\n  const specialVariant = path[0].toString();\n\n  if (specialVariant === 'Option') {\n    return withTypeString(this.registry, {\n      info: TypeDefInfo.Option,\n      sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](params[0].type.unwrap())\n    });\n  } else if (specialVariant === 'Result') {\n    return withTypeString(this.registry, {\n      info: TypeDefInfo.Result,\n      sub: params.map(({\n        type\n      }, index) => objectSpread({\n        name: ['Ok', 'Error'][index]\n      }, _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type.unwrap())))\n    });\n  } else if (variants.length === 0) {\n    return {\n      info: TypeDefInfo.Null,\n      type: 'Null'\n    };\n  }\n\n  return _classPrivateFieldLooseBase(this, _extractVariantEnum)[_extractVariantEnum](lookupIndex, variants);\n}\n\nfunction _extractVariantEnum2(lookupIndex, variants) {\n  const sub = []; // we may get entries out of order, arrange them first before creating with gaps filled\n  // NOTE: Since we mutate, use a copy of the array as an input\n\n  [...variants].sort((a, b) => a.index.cmp(b.index)).forEach(({\n    fields,\n    index,\n    name\n  }) => {\n    const desired = index.toNumber();\n\n    while (sub.length !== desired) {\n      sub.push({\n        index: sub.length,\n        info: TypeDefInfo.Null,\n        name: `__Unused${sub.length}`,\n        type: 'Null'\n      });\n    }\n\n    sub.push(objectSpread(_classPrivateFieldLooseBase(this, _extractFields)[_extractFields](-1, fields), {\n      index: index.toNumber(),\n      name: name.toString()\n    }));\n  });\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.Enum,\n    lookupIndex,\n    lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex],\n    sub\n  });\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { DoNotConstruct, Json, Raw } from '@polkadot/types-codec';\nimport { constructTypeClass, createClassUnsafe, createTypeUnsafe } from '@polkadot/types-create';\nimport { assert, assertReturn, BN_ZERO, formatBalance, isFunction, isString, isU8a, lazyMethod, logger, objectSpread, stringCamelCase, stringify } from '@polkadot/util';\nimport { blake2AsU8a } from '@polkadot/util-crypto';\nimport { expandExtensionTypes, fallbackExtensions, findUnknownExtensions } from \"../extrinsic/signedExtensions/index.js\";\nimport { GenericEventData } from \"../generic/Event.js\";\nimport * as baseTypes from \"../index.types.js\";\nimport * as definitions from \"../interfaces/definitions.js\";\nimport { decorateConstants, filterCallsSome, filterEventsSome } from \"../metadata/decorate/index.js\";\nimport { createCallFunction } from \"../metadata/decorate/extrinsics/index.js\";\nimport { Metadata } from \"../metadata/Metadata.js\";\nimport { PortableRegistry } from \"../metadata/PortableRegistry/index.js\";\nimport { lazyVariants } from \"./lazy.js\";\nconst l = logger('registry');\n\nfunction valueToString(v) {\n  return v.toString();\n}\n\nfunction getFieldArgs(lookup, fields) {\n  const args = new Array(fields.length);\n\n  for (let i = 0; i < fields.length; i++) {\n    args[i] = lookup.getTypeDef(fields[i].type).type;\n  }\n\n  return args;\n}\n\nfunction clearRecord(record) {\n  const keys = Object.keys(record);\n\n  for (let i = 0; i < keys.length; i++) {\n    delete record[keys[i]];\n  }\n}\n\nfunction getVariantStringIdx({\n  index\n}) {\n  return index.toString();\n} // create error mapping from metadata\n\n\nfunction injectErrors(_, {\n  lookup,\n  pallets\n}, version, result) {\n  clearRecord(result);\n\n  for (let i = 0; i < pallets.length; i++) {\n    const {\n      errors,\n      index,\n      name\n    } = pallets[i];\n\n    if (errors.isSome) {\n      const sectionName = stringCamelCase(name);\n      lazyMethod(result, version >= 12 ? index.toNumber() : i, () => lazyVariants(lookup, errors.unwrap(), getVariantStringIdx, ({\n        docs,\n        fields,\n        index,\n        name\n      }) => ({\n        args: getFieldArgs(lookup, fields),\n        docs: docs.map(valueToString),\n        fields,\n        index: index.toNumber(),\n        method: name.toString(),\n        name: name.toString(),\n        section: sectionName\n      })));\n    }\n  }\n} // create event classes from metadata\n\n\nfunction injectEvents(registry, {\n  lookup,\n  pallets\n}, version, result) {\n  const filtered = pallets.filter(filterEventsSome);\n  clearRecord(result);\n\n  for (let i = 0; i < filtered.length; i++) {\n    const {\n      events,\n      index,\n      name\n    } = filtered[i];\n    lazyMethod(result, version >= 12 ? index.toNumber() : i, () => lazyVariants(lookup, events.unwrap(), getVariantStringIdx, variant => {\n      const meta = registry.createType('EventMetadataLatest', objectSpread({}, variant, {\n        args: getFieldArgs(lookup, variant.fields)\n      }));\n      return class extends GenericEventData {\n        constructor(registry, value) {\n          super(registry, value, meta, stringCamelCase(name), variant.name.toString());\n        }\n\n      };\n    }));\n  }\n} // create extrinsic mapping from metadata\n\n\nfunction injectExtrinsics(registry, {\n  lookup,\n  pallets\n}, version, result) {\n  const filtered = pallets.filter(filterCallsSome);\n  clearRecord(result);\n\n  for (let i = 0; i < filtered.length; i++) {\n    const {\n      calls,\n      index,\n      name\n    } = filtered[i];\n    const sectionIndex = version >= 12 ? index.toNumber() : i;\n    lazyMethod(result, sectionIndex, () => lazyVariants(lookup, calls.unwrap(), getVariantStringIdx, variant => createCallFunction(registry, lookup, variant, stringCamelCase(name), sectionIndex)));\n  }\n} // extract additional properties from the metadata\n\n\nfunction extractProperties(registry, metadata) {\n  const original = registry.getChainProperties();\n  const constants = decorateConstants(registry, metadata.asLatest, metadata.version);\n  const ss58Format = constants.system && (constants.system.sS58Prefix || constants.system.ss58Prefix);\n\n  if (!ss58Format) {\n    return original;\n  }\n\n  const {\n    tokenDecimals,\n    tokenSymbol\n  } = original || {};\n  return registry.createTypeUnsafe('ChainProperties', [{\n    ss58Format,\n    tokenDecimals,\n    tokenSymbol\n  }]);\n}\n\nexport class TypeRegistry {\n  #classes = new Map();\n  #definitions = new Map();\n  #lookup;\n  #metadata;\n  #metadataVersion = 0;\n  #metadataCalls = {};\n  #metadataErrors = {};\n  #metadataEvents = {};\n  #unknownTypes = new Map();\n  #chainProperties;\n  #hasher = blake2AsU8a;\n  #knownDefaults;\n  #knownDefinitions;\n  #knownTypes = {};\n  #signedExtensions = fallbackExtensions;\n  #userExtensions;\n\n  constructor(createdAtHash) {\n    this.#knownDefaults = objectSpread({\n      Json,\n      Metadata,\n      PortableRegistry,\n      Raw\n    }, baseTypes);\n    this.#knownDefinitions = definitions;\n    const allKnown = Object.values(this.#knownDefinitions);\n\n    for (let i = 0; i < allKnown.length; i++) {\n      this.register(allKnown[i].types);\n    }\n\n    if (createdAtHash) {\n      this.createdAtHash = this.createType('Hash', createdAtHash);\n    }\n  }\n\n  get chainDecimals() {\n    var _this$chainProperties;\n\n    if ((_this$chainProperties = this.#chainProperties) !== null && _this$chainProperties !== void 0 && _this$chainProperties.tokenDecimals.isSome) {\n      const allDecimals = this.#chainProperties.tokenDecimals.unwrap();\n\n      if (allDecimals.length) {\n        return allDecimals.map(b => b.toNumber());\n      }\n    }\n\n    return [12];\n  }\n\n  get chainSS58() {\n    var _this$chainProperties2;\n\n    return (_this$chainProperties2 = this.#chainProperties) !== null && _this$chainProperties2 !== void 0 && _this$chainProperties2.ss58Format.isSome ? this.#chainProperties.ss58Format.unwrap().toNumber() : undefined;\n  }\n\n  get chainTokens() {\n    var _this$chainProperties3;\n\n    if ((_this$chainProperties3 = this.#chainProperties) !== null && _this$chainProperties3 !== void 0 && _this$chainProperties3.tokenSymbol.isSome) {\n      const allTokens = this.#chainProperties.tokenSymbol.unwrap();\n\n      if (allTokens.length) {\n        return allTokens.map(valueToString);\n      }\n    }\n\n    return [formatBalance.getDefaults().unit];\n  }\n  /**\n   * @description Returns tru if the type is in a Compat format\n   */\n\n\n  isLookupType(value) {\n    return /Lookup\\d+$/.test(value);\n  }\n  /**\n   * @description Creates a lookup string from the supplied id\n   */\n\n\n  createLookupType(lookupId) {\n    return `Lookup${lookupId.toString()}`;\n  }\n\n  get knownTypes() {\n    return this.#knownTypes;\n  }\n\n  get lookup() {\n    return assertReturn(this.#lookup, 'Lookup has not been set on this registry');\n  }\n\n  get metadata() {\n    return assertReturn(this.#metadata, 'Metadata has not been set on this registry');\n  }\n\n  get unknownTypes() {\n    return [...this.#unknownTypes.keys()];\n  }\n\n  get signedExtensions() {\n    return this.#signedExtensions;\n  }\n\n  clearCache() {\n    this.#classes = new Map();\n  }\n  /**\n   * @describe Creates an instance of the class\n   */\n\n\n  createClass(type) {\n    return this.createClassUnsafe(type);\n  }\n  /**\n   * @describe Creates an instance of the class\n   */\n\n\n  createClassUnsafe(type) {\n    return createClassUnsafe(this, type);\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createType(type, ...params) {\n    return this.createTypeUnsafe(type, params);\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createTypeUnsafe(type, params, options) {\n    return createTypeUnsafe(this, type, params, options);\n  } // find a specific call\n\n\n  findMetaCall(callIndex) {\n    const [section, method] = [callIndex[0], callIndex[1]];\n    return assertReturn(this.#metadataCalls[`${section}`] && this.#metadataCalls[`${section}`][`${method}`], () => `findMetaCall: Unable to find Call with index [${section}, ${method}]/[${callIndex.toString()}]`);\n  } // finds an error\n\n\n  findMetaError(errorIndex) {\n    const [section, method] = isU8a(errorIndex) ? [errorIndex[0], errorIndex[1]] : [errorIndex.index.toNumber(), isU8a(errorIndex.error) ? errorIndex.error[0] : errorIndex.error.toNumber()];\n    return assertReturn(this.#metadataErrors[`${section}`] && this.#metadataErrors[`${section}`][`${method}`], () => `findMetaError: Unable to find Error with index [${section}, ${method}]/[${errorIndex.toString()}]`);\n  }\n\n  findMetaEvent(eventIndex) {\n    const [section, method] = [eventIndex[0], eventIndex[1]];\n    return assertReturn(this.#metadataEvents[`${section}`] && this.#metadataEvents[`${section}`][`${method}`], () => `findMetaEvent: Unable to find Event with index [${section}, ${method}]/[${eventIndex.toString()}]`);\n  }\n\n  get(name, withUnknown, knownTypeDef) {\n    return this.getUnsafe(name, withUnknown, knownTypeDef);\n  }\n\n  getUnsafe(name, withUnknown, knownTypeDef) {\n    let Type = this.#classes.get(name) || this.#knownDefaults[name]; // we have not already created the type, attempt it\n\n    if (!Type) {\n      const definition = this.#definitions.get(name);\n      let BaseType; // we have a definition, so create the class now (lazily)\n\n      if (definition) {\n        BaseType = createClassUnsafe(this, definition);\n      } else if (knownTypeDef) {\n        BaseType = constructTypeClass(this, knownTypeDef);\n      } else if (withUnknown) {\n        l.warn(`Unable to resolve type ${name}, it will fail on construction`);\n        this.#unknownTypes.set(name, true);\n        BaseType = DoNotConstruct.with(name);\n      }\n\n      if (BaseType) {\n        // NOTE If we didn't extend here, we would have strange artifacts. An example is\n        // Balance, with this, new Balance() instanceof u128 is true, but Balance !== u128\n        // Additionally, we now pass through the registry, which is a link to ourselves\n        Type = class extends BaseType {};\n        this.#classes.set(name, Type);\n      }\n    }\n\n    return Type;\n  }\n\n  getChainProperties() {\n    return this.#chainProperties;\n  }\n\n  getClassName(Type) {\n    // we cannot rely on export order (anymore, since babel/core 7.15.8), so in the case of\n    // items such as u32 & U32, we get the lowercase versions here... not quite as optimal\n    // (previously this used to be a simple find & return)\n    const names = [];\n\n    for (const [name, Clazz] of Object.entries(this.#knownDefaults)) {\n      if (Type === Clazz) {\n        names.push(name);\n      }\n    }\n\n    for (const [name, Clazz] of this.#classes.entries()) {\n      if (Type === Clazz) {\n        names.push(name);\n      }\n    } // both sort and reverse are done in-place\n\n\n    names.sort().reverse();\n    return names.length ? names[0] : undefined;\n  }\n\n  getDefinition(typeName) {\n    return this.#definitions.get(typeName);\n  }\n\n  getModuleInstances(specName, moduleName) {\n    var _this$knownTypes, _this$knownTypes$type, _this$knownTypes$type2, _this$knownTypes$type3, _this$knownTypes$type4;\n\n    return (_this$knownTypes = this.#knownTypes) === null || _this$knownTypes === void 0 ? void 0 : (_this$knownTypes$type = _this$knownTypes.typesBundle) === null || _this$knownTypes$type === void 0 ? void 0 : (_this$knownTypes$type2 = _this$knownTypes$type.spec) === null || _this$knownTypes$type2 === void 0 ? void 0 : (_this$knownTypes$type3 = _this$knownTypes$type2[specName]) === null || _this$knownTypes$type3 === void 0 ? void 0 : (_this$knownTypes$type4 = _this$knownTypes$type3.instances) === null || _this$knownTypes$type4 === void 0 ? void 0 : _this$knownTypes$type4[moduleName];\n  }\n\n  getOrThrow(name, msg) {\n    const Clazz = this.get(name);\n    assert(Clazz, msg || `type ${name} not found`);\n    return Clazz;\n  }\n\n  getOrUnknown(name) {\n    return this.get(name, true);\n  }\n\n  getSignedExtensionExtra() {\n    return expandExtensionTypes(this.#signedExtensions, 'payload', this.#userExtensions);\n  }\n\n  getSignedExtensionTypes() {\n    return expandExtensionTypes(this.#signedExtensions, 'extrinsic', this.#userExtensions);\n  }\n\n  hasClass(name) {\n    return this.#classes.has(name) || !!this.#knownDefaults[name];\n  }\n\n  hasDef(name) {\n    return this.#definitions.has(name);\n  }\n\n  hasType(name) {\n    return !this.#unknownTypes.get(name) && (this.hasClass(name) || this.hasDef(name));\n  }\n\n  hash(data) {\n    return this.createType('CodecHash', this.#hasher(data));\n  }\n\n  // eslint-disable-next-line no-dupe-class-members\n  register(arg1, arg2) {\n    // NOTE Constructors appear as functions here\n    if (isFunction(arg1)) {\n      this.#classes.set(arg1.name, arg1);\n    } else if (isString(arg1)) {\n      assert(isFunction(arg2), () => `Expected class definition passed to '${arg1}' registration`);\n      assert(arg1 !== arg2.toString(), () => `Unable to register circular ${arg1} === ${arg1}`);\n      this.#classes.set(arg1, arg2);\n    } else {\n      this._registerObject(arg1);\n    }\n  }\n\n  _registerObject(obj) {\n    const entries = Object.entries(obj);\n\n    for (let e = 0; e < entries.length; e++) {\n      const [name, type] = entries[e];\n\n      if (isFunction(type)) {\n        // This _looks_ a bit funny, but `typeof Clazz === 'function'\n        this.#classes.set(name, type);\n      } else {\n        const def = isString(type) ? type : stringify(type);\n        assert(name !== def, () => `Unable to register circular ${name} === ${def}`); // we already have this type, remove the classes registered for it\n\n        if (this.#classes.has(name)) {\n          this.#classes.delete(name);\n        }\n\n        this.#definitions.set(name, def);\n      }\n    }\n  } // sets the chain properties\n\n\n  setChainProperties(properties) {\n    if (properties) {\n      this.#chainProperties = properties;\n    }\n  }\n\n  setHasher(hasher) {\n    this.#hasher = hasher || blake2AsU8a;\n  }\n\n  setKnownTypes(knownTypes) {\n    this.#knownTypes = knownTypes;\n  }\n\n  setLookup(lookup) {\n    this.#lookup = lookup; // register all applicable types found\n\n    lookup.register();\n  } // sets the metadata\n\n\n  setMetadata(metadata, signedExtensions, userExtensions) {\n    this.#metadata = metadata.asLatest;\n    this.#metadataVersion = metadata.version; // attach the lookup at this point (before injecting)\n\n    this.setLookup(this.#metadata.lookup);\n    injectExtrinsics(this, this.#metadata, this.#metadataVersion, this.#metadataCalls);\n    injectErrors(this, this.#metadata, this.#metadataVersion, this.#metadataErrors);\n    injectEvents(this, this.#metadata, this.#metadataVersion, this.#metadataEvents); // setup the available extensions\n\n    this.setSignedExtensions(signedExtensions || (this.#metadata.extrinsic.version.gt(BN_ZERO) // FIXME Use the extension and their injected types\n    ? this.#metadata.extrinsic.signedExtensions.map(({\n      identifier\n    }) => identifier.toString()) : fallbackExtensions), userExtensions); // setup the chain properties with format overrides\n\n    this.setChainProperties(extractProperties(this, metadata));\n  } // sets the available signed extensions\n\n\n  setSignedExtensions(signedExtensions = fallbackExtensions, userExtensions) {\n    this.#signedExtensions = signedExtensions;\n    this.#userExtensions = userExtensions;\n    const unknown = findUnknownExtensions(this.#signedExtensions, this.#userExtensions);\n\n    if (unknown.length) {\n      l.warn(`Unknown signed extensions ${unknown.join(', ')} found, treating them as no-effect`);\n    }\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v9 = {\n  // v9\n  ErrorMetadataV9: {\n    name: 'Text',\n    docs: 'Vec<Text>'\n  },\n  EventMetadataV9: {\n    name: 'Text',\n    args: 'Vec<Type>',\n    docs: 'Vec<Text>'\n  },\n  FunctionArgumentMetadataV9: {\n    name: 'Text',\n    type: 'Type'\n  },\n  FunctionMetadataV9: {\n    name: 'Text',\n    args: 'Vec<FunctionArgumentMetadataV9>',\n    docs: 'Vec<Text>'\n  },\n  MetadataV9: {\n    modules: 'Vec<ModuleMetadataV9>'\n  },\n  ModuleConstantMetadataV9: {\n    name: 'Text',\n    type: 'Type',\n    value: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  ModuleMetadataV9: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV9>',\n    calls: 'Option<Vec<FunctionMetadataV9>>',\n    events: 'Option<Vec<EventMetadataV9>>',\n    constants: 'Vec<ModuleConstantMetadataV9>',\n    errors: 'Vec<ErrorMetadataV9>'\n  },\n  StorageEntryMetadataV9: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV9',\n    type: 'StorageEntryTypeV9',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryModifierV9: {\n    _enum: ['Optional', 'Default', 'Required']\n  },\n  StorageEntryTypeV9: {\n    _enum: {\n      Plain: 'Type',\n      Map: {\n        hasher: 'StorageHasherV9',\n        key: 'Type',\n        value: 'Type',\n        linked: 'bool'\n      },\n      DoubleMap: {\n        hasher: 'StorageHasherV9',\n        key1: 'Type',\n        key2: 'Type',\n        value: 'Type',\n        key2Hasher: 'StorageHasherV9'\n      }\n    }\n  },\n  StorageHasherV9: {\n    _enum: {\n      Blake2_128: null,\n      // eslint-disable-line camelcase\n      Blake2_256: null,\n      // eslint-disable-line camelcase\n      Twox128: null,\n      Twox256: null,\n      Twox64Concat: null\n    }\n  },\n  StorageMetadataV9: {\n    prefix: 'Text',\n    items: 'Vec<StorageEntryMetadataV9>'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { AllHashers } from \"./hashers.js\";\nexport const v11 = {\n  // v11\n  ErrorMetadataV11: 'ErrorMetadataV10',\n  EventMetadataV11: 'EventMetadataV10',\n  ExtrinsicMetadataV11: {\n    version: 'u8',\n    signedExtensions: 'Vec<Text>'\n  },\n  FunctionArgumentMetadataV11: 'FunctionArgumentMetadataV10',\n  FunctionMetadataV11: 'FunctionMetadataV10',\n  MetadataV11: {\n    modules: 'Vec<ModuleMetadataV11>',\n    extrinsic: 'ExtrinsicMetadataV11'\n  },\n  ModuleConstantMetadataV11: 'ModuleConstantMetadataV10',\n  ModuleMetadataV11: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV11>',\n    calls: 'Option<Vec<FunctionMetadataV11>>',\n    events: 'Option<Vec<EventMetadataV11>>',\n    constants: 'Vec<ModuleConstantMetadataV11>',\n    errors: 'Vec<ErrorMetadataV11>'\n  },\n  StorageEntryModifierV11: 'StorageEntryModifierV10',\n  StorageEntryMetadataV11: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV11',\n    type: 'StorageEntryTypeV11',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryTypeV11: {\n    _enum: {\n      Plain: 'Type',\n      Map: {\n        hasher: 'StorageHasherV11',\n        key: 'Type',\n        value: 'Type',\n        linked: 'bool'\n      },\n      DoubleMap: {\n        hasher: 'StorageHasherV11',\n        key1: 'Type',\n        key2: 'Type',\n        value: 'Type',\n        key2Hasher: 'StorageHasherV11'\n      }\n    }\n  },\n  StorageMetadataV11: {\n    prefix: 'Text',\n    items: 'Vec<StorageEntryMetadataV11>'\n  },\n  StorageHasherV11: {\n    _enum: AllHashers\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const AllHashers = {\n  Blake2_128: null,\n  // eslint-disable-line camelcase\n  Blake2_256: null,\n  // eslint-disable-line camelcase\n  Blake2_128Concat: null,\n  // eslint-disable-line camelcase\n  Twox128: null,\n  Twox256: null,\n  Twox64Concat: null,\n  // new in v11\n  Identity: null\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const Si1Variant = {\n  name: 'Text',\n  fields: 'Vec<Si1Field>',\n  index: 'u8',\n  docs: 'Vec<Text>'\n};\nexport const v1 = {\n  Si1Field: {\n    name: 'Option<Text>',\n    type: 'Si1LookupTypeId',\n    typeName: 'Option<Text>',\n    docs: 'Vec<Text>'\n  },\n  Si1LookupTypeId: 'Compact<u32>',\n  Si1Path: 'Si0Path',\n  Si1Type: {\n    path: 'Si1Path',\n    params: 'Vec<Si1TypeParameter>',\n    def: 'Si1TypeDef',\n    docs: 'Vec<Text>'\n  },\n  Si1TypeDef: {\n    _enum: {\n      Composite: 'Si1TypeDefComposite',\n      Variant: 'Si1TypeDefVariant',\n      Sequence: 'Si1TypeDefSequence',\n      Array: 'Si1TypeDefArray',\n      Tuple: 'Si1TypeDefTuple',\n      Primitive: 'Si1TypeDefPrimitive',\n      Compact: 'Si1TypeDefCompact',\n      BitSequence: 'Si1TypeDefBitSequence',\n      // NOTE: This is specific to the implementation for pre-v14 metadata\n      // compatibility (always keep this as the last entry in the enum)\n      HistoricMetaCompat: 'Type'\n    }\n  },\n  Si1TypeDefArray: {\n    len: 'u32',\n    type: 'Si1LookupTypeId'\n  },\n  Si1TypeDefBitSequence: {\n    bitStoreType: 'Si1LookupTypeId',\n    bitOrderType: 'Si1LookupTypeId'\n  },\n  Si1TypeDefCompact: {\n    type: 'Si1LookupTypeId'\n  },\n  Si1TypeDefComposite: {\n    fields: 'Vec<Si1Field>'\n  },\n  Si1TypeDefPrimitive: 'Si0TypeDefPrimitive',\n  Si1TypeDefSequence: {\n    type: 'Si1LookupTypeId'\n  },\n  Si1TypeDefTuple: 'Vec<Si1LookupTypeId>',\n  Si1TypeParameter: {\n    name: 'Text',\n    type: 'Option<Si1LookupTypeId>'\n  },\n  Si1TypeDefVariant: {\n    variants: 'Vec<Si1Variant>'\n  },\n  Si1Variant\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util';\nimport { Si1Variant } from \"../scaleInfo/v1.js\";\nexport const v14 = {\n  // registry\n  PortableTypeV14: {\n    id: 'Si1LookupTypeId',\n    type: 'Si1Type'\n  },\n  // compatibility with earlier layouts, i.e. don't break previous users\n  ErrorMetadataV14: objectSpread({}, Si1Variant, {\n    args: 'Vec<Type>'\n  }),\n  EventMetadataV14: objectSpread({}, Si1Variant, {\n    args: 'Vec<Type>'\n  }),\n  FunctionArgumentMetadataV14: {\n    name: 'Text',\n    type: 'Type',\n    typeName: 'Option<Type>'\n  },\n  FunctionMetadataV14: objectSpread({}, Si1Variant, {\n    args: 'Vec<FunctionArgumentMetadataV14>'\n  }),\n  // V14\n  ExtrinsicMetadataV14: {\n    type: 'SiLookupTypeId',\n    version: 'u8',\n    signedExtensions: 'Vec<SignedExtensionMetadataV14>'\n  },\n  MetadataV14: {\n    lookup: 'PortableRegistry',\n    pallets: 'Vec<PalletMetadataV14>',\n    extrinsic: 'ExtrinsicMetadataV14',\n    type: 'SiLookupTypeId'\n  },\n  PalletCallMetadataV14: {\n    type: 'SiLookupTypeId'\n  },\n  PalletConstantMetadataV14: {\n    name: 'Text',\n    type: 'SiLookupTypeId',\n    value: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  PalletErrorMetadataV14: {\n    type: 'SiLookupTypeId'\n  },\n  PalletEventMetadataV14: {\n    type: 'SiLookupTypeId'\n  },\n  PalletMetadataV14: {\n    name: 'Text',\n    storage: 'Option<PalletStorageMetadataV14>',\n    calls: 'Option<PalletCallMetadataV14>',\n    events: 'Option<PalletEventMetadataV14>',\n    constants: 'Vec<PalletConstantMetadataV14>',\n    errors: 'Option<PalletErrorMetadataV14>',\n    index: 'u8'\n  },\n  PalletStorageMetadataV14: {\n    prefix: 'Text',\n    // NOTE: Renamed from entries\n    items: 'Vec<StorageEntryMetadataV14>'\n  },\n  SignedExtensionMetadataV14: {\n    identifier: 'Text',\n    type: 'SiLookupTypeId',\n    additionalSigned: 'SiLookupTypeId'\n  },\n  StorageEntryMetadataV14: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV14',\n    type: 'StorageEntryTypeV14',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryModifierV14: 'StorageEntryModifierV13',\n  StorageEntryTypeV14: {\n    _enum: {\n      Plain: 'SiLookupTypeId',\n      Map: {\n        hashers: 'Vec<StorageHasherV14>',\n        key: 'SiLookupTypeId',\n        // NOTE: Renamed from \"keys\"\n        value: 'SiLookupTypeId'\n      }\n    }\n  },\n  StorageHasherV14: 'StorageHasherV13'\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util';\nimport { AllHashers } from \"./hashers.js\";\nimport { v9 } from \"./v9.js\";\nimport { v10 } from \"./v10.js\";\nimport { v11 } from \"./v11.js\";\nimport { v12 } from \"./v12.js\";\nimport { v13 } from \"./v13.js\";\nimport { v14 } from \"./v14.js\";\nexport { AllHashers };\nexport default {\n  rpc: {},\n  types: objectSpread({}, v9, v10, v11, v12, v13, v14, {\n    // latest mappings\n    ErrorMetadataLatest: 'ErrorMetadataV14',\n    EventMetadataLatest: 'EventMetadataV14',\n    ExtrinsicMetadataLatest: 'ExtrinsicMetadataV14',\n    FunctionArgumentMetadataLatest: 'FunctionArgumentMetadataV14',\n    FunctionMetadataLatest: 'FunctionMetadataV14',\n    MetadataLatest: 'MetadataV14',\n    PalletCallMetadataLatest: 'PalletCallMetadataV14',\n    PalletConstantMetadataLatest: 'PalletConstantMetadataV14',\n    PalletErrorMetadataLatest: 'PalletErrorMetadataV14',\n    PalletEventMetadataLatest: 'PalletEventMetadataV14',\n    PalletMetadataLatest: 'PalletMetadataV14',\n    PalletStorageMetadataLatest: 'PalletStorageMetadataV14',\n    PortableType: 'PortableTypeV14',\n    SignedExtensionMetadataLatest: 'SignedExtensionMetadataV14',\n    StorageEntryMetadataLatest: 'StorageEntryMetadataV14',\n    StorageEntryModifierLatest: 'StorageEntryModifierV14',\n    StorageEntryTypeLatest: 'StorageEntryTypeV14',\n    StorageHasher: 'StorageHasherV14',\n    // the enum containing all the mappings\n    MetadataAll: {\n      _enum: {\n        V0: 'DoNotConstruct<MetadataV0>',\n        V1: 'DoNotConstruct<MetadataV1>',\n        V2: 'DoNotConstruct<MetadataV2>',\n        V3: 'DoNotConstruct<MetadataV3>',\n        V4: 'DoNotConstruct<MetadataV4>',\n        V5: 'DoNotConstruct<MetadataV5>',\n        V6: 'DoNotConstruct<MetadataV6>',\n        V7: 'DoNotConstruct<MetadataV7>',\n        V8: 'DoNotConstruct<MetadataV8>',\n        // First version on Kusama in V9, dropping will be problematic\n        V9: 'MetadataV9',\n        V10: 'MetadataV10',\n        V11: 'MetadataV11',\n        V12: 'MetadataV12',\n        V13: 'MetadataV13',\n        V14: 'MetadataV14'\n      }\n    }\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v10 = {\n  // v10\n  ErrorMetadataV10: 'ErrorMetadataV9',\n  EventMetadataV10: 'EventMetadataV9',\n  FunctionArgumentMetadataV10: 'FunctionArgumentMetadataV9',\n  FunctionMetadataV10: 'FunctionMetadataV9',\n  MetadataV10: {\n    modules: 'Vec<ModuleMetadataV10>'\n  },\n  ModuleConstantMetadataV10: 'ModuleConstantMetadataV9',\n  ModuleMetadataV10: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV10>',\n    calls: 'Option<Vec<FunctionMetadataV10>>',\n    events: 'Option<Vec<EventMetadataV10>>',\n    constants: 'Vec<ModuleConstantMetadataV10>',\n    errors: 'Vec<ErrorMetadataV10>'\n  },\n  StorageEntryModifierV10: 'StorageEntryModifierV9',\n  StorageEntryMetadataV10: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV10',\n    type: 'StorageEntryTypeV10',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryTypeV10: {\n    _enum: {\n      Plain: 'Type',\n      Map: {\n        hasher: 'StorageHasherV10',\n        key: 'Type',\n        value: 'Type',\n        linked: 'bool'\n      },\n      DoubleMap: {\n        hasher: 'StorageHasherV10',\n        key1: 'Type',\n        key2: 'Type',\n        value: 'Type',\n        key2Hasher: 'StorageHasherV10'\n      }\n    }\n  },\n  StorageMetadataV10: {\n    prefix: 'Text',\n    items: 'Vec<StorageEntryMetadataV10>'\n  },\n  StorageHasherV10: {\n    _enum: {\n      Blake2_128: null,\n      // eslint-disable-line camelcase\n      Blake2_256: null,\n      // eslint-disable-line camelcase\n      Blake2_128Concat: null,\n      // eslint-disable-line camelcase\n      Twox128: null,\n      Twox256: null,\n      Twox64Concat: null\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v12 = {\n  // v12\n  ErrorMetadataV12: 'ErrorMetadataV11',\n  EventMetadataV12: 'EventMetadataV11',\n  ExtrinsicMetadataV12: 'ExtrinsicMetadataV11',\n  FunctionArgumentMetadataV12: 'FunctionArgumentMetadataV11',\n  FunctionMetadataV12: 'FunctionMetadataV11',\n  MetadataV12: {\n    modules: 'Vec<ModuleMetadataV12>',\n    extrinsic: 'ExtrinsicMetadataV12'\n  },\n  ModuleConstantMetadataV12: 'ModuleConstantMetadataV11',\n  ModuleMetadataV12: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV12>',\n    calls: 'Option<Vec<FunctionMetadataV12>>',\n    events: 'Option<Vec<EventMetadataV12>>',\n    constants: 'Vec<ModuleConstantMetadataV12>',\n    errors: 'Vec<ErrorMetadataV12>',\n    index: 'u8'\n  },\n  StorageEntryModifierV12: 'StorageEntryModifierV11',\n  StorageEntryMetadataV12: 'StorageEntryMetadataV11',\n  StorageEntryTypeV12: 'StorageEntryTypeV11',\n  StorageMetadataV12: 'StorageMetadataV11',\n  StorageHasherV12: 'StorageHasherV11'\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v13 = {\n  // v13\n  ErrorMetadataV13: 'ErrorMetadataV12',\n  EventMetadataV13: 'EventMetadataV12',\n  ExtrinsicMetadataV13: 'ExtrinsicMetadataV12',\n  FunctionArgumentMetadataV13: 'FunctionArgumentMetadataV12',\n  FunctionMetadataV13: 'FunctionMetadataV12',\n  MetadataV13: {\n    modules: 'Vec<ModuleMetadataV13>',\n    extrinsic: 'ExtrinsicMetadataV13'\n  },\n  ModuleConstantMetadataV13: 'ModuleConstantMetadataV12',\n  ModuleMetadataV13: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV13>',\n    calls: 'Option<Vec<FunctionMetadataV13>>',\n    events: 'Option<Vec<EventMetadataV13>>',\n    constants: 'Vec<ModuleConstantMetadataV13>',\n    errors: 'Vec<ErrorMetadataV13>',\n    index: 'u8'\n  },\n  StorageEntryModifierV13: 'StorageEntryModifierV12',\n  StorageEntryMetadataV13: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV13',\n    type: 'StorageEntryTypeV13',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryTypeV13: {\n    _enum: {\n      Plain: 'Type',\n      Map: {\n        hasher: 'StorageHasherV13',\n        key: 'Type',\n        value: 'Type',\n        linked: 'bool'\n      },\n      DoubleMap: {\n        hasher: 'StorageHasherV13',\n        key1: 'Type',\n        key2: 'Type',\n        value: 'Type',\n        key2Hasher: 'StorageHasherV13'\n      },\n      NMap: {\n        keyVec: 'Vec<Type>',\n        hashers: 'Vec<StorageHasherV13>',\n        value: 'Type'\n      }\n    }\n  },\n  StorageMetadataV13: {\n    prefix: 'Text',\n    items: 'Vec<StorageEntryMetadataV13>'\n  },\n  StorageHasherV13: 'StorageHasherV12'\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v0 = {\n  Si0Field: {\n    name: 'Option<Text>',\n    type: 'Si0LookupTypeId',\n    typeName: 'Option<Text>',\n    docs: 'Vec<Text>'\n  },\n  Si0LookupTypeId: 'u32',\n  Si0Path: 'Vec<Text>',\n  Si0Type: {\n    path: 'Si0Path',\n    params: 'Vec<Si0LookupTypeId>',\n    def: 'Si0TypeDef'\n  },\n  Si0TypeDef: {\n    _enum: {\n      Composite: 'Si0TypeDefComposite',\n      Variant: 'Si0TypeDefVariant',\n      Sequence: 'Si0TypeDefSequence',\n      Array: 'Si0TypeDefArray',\n      Tuple: 'Si0TypeDefTuple',\n      Primitive: 'Si0TypeDefPrimitive',\n      Compact: 'Si0TypeDefCompact',\n      Phantom: 'Si0TypeDefPhantom',\n      BitSequence: 'Si0TypeDefBitSequence'\n    }\n  },\n  Si0TypeDefArray: {\n    len: 'u32',\n    type: 'Si0LookupTypeId'\n  },\n  Si0TypeDefBitSequence: {\n    bitStoreType: 'Si0LookupTypeId',\n    bitOrderType: 'Si0LookupTypeId'\n  },\n  Si0TypeDefCompact: {\n    type: 'Si0LookupTypeId'\n  },\n  Si0TypeDefComposite: {\n    fields: 'Vec<Si0Field>'\n  },\n  Si0TypeDefPhantom: 'Null',\n  Si0TypeDefVariant: {\n    variants: 'Vec<Si0Variant>'\n  },\n  Si0TypeDefPrimitive: {\n    _enum: ['Bool', 'Char', 'Str', 'U8', 'U16', 'U32', 'U64', 'U128', 'U256', 'I8', 'I16', 'I32', 'I64', 'I128', 'I256']\n  },\n  Si0TypeDefSequence: {\n    type: 'Si0LookupTypeId'\n  },\n  Si0TypeDefTuple: 'Vec<Si0LookupTypeId>',\n  Si0TypeParameter: {\n    name: 'Text',\n    type: 'Option<Si0LookupTypeId>'\n  },\n  Si0Variant: {\n    name: 'Text',\n    fields: 'Vec<Si0Field>',\n    index: 'Option<u8>',\n    discriminant: 'Option<u64>',\n    docs: 'Vec<Text>'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util';\nimport { v0 } from \"./v0.js\";\nimport { v1 } from \"./v1.js\"; // order important in structs... :)\n\n/* eslint-disable sort-keys */\n\nexport default {\n  rpc: {},\n  types: objectSpread({}, v0, v1, {\n    // latest mappings\n    SiField: 'Si1Field',\n    SiLookupTypeId: 'Si1LookupTypeId',\n    SiPath: 'Si1Path',\n    SiType: 'Si1Type',\n    SiTypeDef: 'Si1TypeDef',\n    SiTypeDefArray: 'Si1TypeDefArray',\n    SiTypeDefBitSequence: 'Si1TypeDefBitSequence',\n    SiTypeDefCompact: 'Si1TypeDefCompact',\n    SiTypeDefComposite: 'Si1TypeDefComposite',\n    SiTypeDefPrimitive: 'Si1TypeDefPrimitive',\n    SiTypeDefSequence: 'Si1TypeDefSequence',\n    SiTypeDefTuple: 'Si1TypeDefTuple',\n    SiTypeParameter: 'Si1TypeParameter',\n    SiTypeDefVariant: 'Si1TypeDefVariant',\n    SiVariant: 'Si1Variant'\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AssetApprovalKey: {\n      owner: 'AccountId',\n      delegate: 'AccountId'\n    },\n    AssetApproval: {\n      amount: 'TAssetBalance',\n      deposit: 'TAssetDepositBalance'\n    },\n    AssetBalance: {\n      balance: 'TAssetBalance',\n      isFrozen: 'bool',\n      isSufficient: 'bool'\n    },\n    AssetDestroyWitness: {\n      accounts: 'Compact<u32>',\n      sufficients: 'Compact<u32>',\n      approvals: 'Compact<u32>'\n    },\n    AssetDetails: {\n      owner: 'AccountId',\n      issuer: 'AccountId',\n      admin: 'AccountId',\n      freezer: 'AccountId',\n      supply: 'TAssetBalance',\n      deposit: 'TAssetDepositBalance',\n      minBalance: 'TAssetBalance',\n      isSufficient: 'bool',\n      accounts: 'u32',\n      sufficients: 'u32',\n      approvals: 'u32',\n      isFrozen: 'bool'\n    },\n    AssetMetadata: {\n      deposit: 'TAssetDepositBalance',\n      name: 'Vec<u8>',\n      symbol: 'Vec<u8>',\n      decimals: 'u8',\n      isFrozen: 'bool'\n    },\n    TAssetBalance: 'u64',\n    TAssetDepositBalance: 'BalanceOf'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    UncleEntryItem: {\n      _enum: {\n        InclusionHeight: 'BlockNumber',\n        Uncle: '(Hash, Option<AccountId>)'\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    RawAuraPreDigest: {\n      slotNumber: 'u64'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    epochAuthorship: {\n      description: 'Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore',\n      params: [],\n      type: 'HashMap<AuthorityId, EpochAuthorship>'\n    }\n  },\n  types: {\n    AllowedSlots: {\n      _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']\n    },\n    BabeAuthorityWeight: 'u64',\n    BabeEpochConfiguration: {\n      c: '(u64, u64)',\n      allowedSlots: 'AllowedSlots'\n    },\n    BabeBlockWeight: 'u32',\n    BabeEquivocationProof: {\n      offender: 'AuthorityId',\n      slotNumber: 'SlotNumber',\n      firstHeader: 'Header',\n      secondHeader: 'Header'\n    },\n    BabeWeight: 'u64',\n    MaybeRandomness: 'Option<Randomness>',\n    MaybeVrf: 'Option<VrfData>',\n    EpochAuthorship: {\n      primary: 'Vec<u64>',\n      secondary: 'Vec<u64>',\n      secondary_vrf: 'Vec<u64>'\n    },\n    NextConfigDescriptor: {\n      _enum: {\n        V0: 'Null',\n        V1: 'NextConfigDescriptorV1'\n      }\n    },\n    NextConfigDescriptorV1: {\n      c: '(u64, u64)',\n      allowedSlots: 'AllowedSlots'\n    },\n    Randomness: 'Hash',\n    RawBabePreDigest: {\n      _enum: {\n        Phantom: 'Null',\n        // index starts at 1... empty slot at 0\n        Primary: 'RawBabePreDigestPrimary',\n        SecondaryPlain: 'RawBabePreDigestSecondaryPlain',\n        SecondaryVRF: 'RawBabePreDigestSecondaryVRF'\n      }\n    },\n    RawBabePreDigestPrimary: {\n      authorityIndex: 'u32',\n      // AuthorityIndex (also in aura)\n      slotNumber: 'SlotNumber',\n      vrfOutput: 'VrfOutput',\n      vrfProof: 'VrfProof'\n    },\n    RawBabePreDigestSecondaryPlain: {\n      authorityIndex: 'u32',\n      // AuthorityIndex (also in aura)\n      slotNumber: 'SlotNumber'\n    },\n    RawBabePreDigestSecondaryVRF: {\n      authorityIndex: 'u32',\n      slotNumber: 'SlotNumber',\n      vrfOutput: 'VrfOutput',\n      vrfProof: 'VrfProof'\n    },\n    RawBabePreDigestTo159: {\n      _enum: {\n        Primary: 'RawBabePreDigestPrimaryTo159',\n        Secondary: 'RawBabePreDigestSecondaryTo159'\n      }\n    },\n    RawBabePreDigestPrimaryTo159: {\n      authorityIndex: 'u32',\n      slotNumber: 'SlotNumber',\n      weight: 'BabeBlockWeight',\n      vrfOutput: 'VrfOutput',\n      vrfProof: 'VrfProof'\n    },\n    RawBabePreDigestSecondaryTo159: {\n      authorityIndex: 'u32',\n      slotNumber: 'SlotNumber',\n      weight: 'BabeBlockWeight'\n    },\n    // a cross old/new compatible version of the digest, that is _only_ useful\n    // for partial parsing and extraction of the author. This assumes that all\n    // entries has the authorityIndex in the first position - and that it is all\n    // we are interested in\n    RawBabePreDigestCompat: {\n      _enum: {\n        Zero: 'u32',\n        One: 'u32',\n        Two: 'u32',\n        Three: 'u32'\n      }\n    },\n    SlotNumber: 'u64',\n    VrfData: '[u8; 32]',\n    VrfOutput: '[u8; 32]',\n    VrfProof: '[u8; 64]'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AccountData: {\n      free: 'Balance',\n      reserved: 'Balance',\n      miscFrozen: 'Balance',\n      feeFrozen: 'Balance'\n    },\n    BalanceLockTo212: {\n      id: 'LockIdentifier',\n      amount: 'Balance',\n      until: 'BlockNumber',\n      reasons: 'WithdrawReasons'\n    },\n    BalanceLock: {\n      id: 'LockIdentifier',\n      amount: 'Balance',\n      reasons: 'Reasons'\n    },\n    BalanceStatus: {\n      _enum: ['Free', 'Reserved']\n    },\n    Reasons: {\n      _enum: ['Fee', 'Misc', 'All']\n    },\n    ReserveData: {\n      id: 'ReserveIdentifier',\n      amount: 'Balance'\n    },\n    ReserveIdentifier: '[u8; 8]',\n    VestingSchedule: {\n      offset: 'Balance',\n      perBlock: 'Balance',\n      startingBlock: 'BlockNumber'\n    },\n    WithdrawReasons: {\n      _set: {\n        TransactionPayment: 0b00000001,\n        Transfer: 0b00000010,\n        Reserve: 0b00000100,\n        Fee: 0b00001000,\n        Tip: 0b00010000\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    subscribeJustifications: {\n      description: 'Returns the block most recently finalized by BEEFY, alongside side its justification.',\n      params: [],\n      pubsub: ['justifications', 'subscribeJustifications', 'unsubscribeJustifications'],\n      type: 'BeefySignedCommitment'\n    },\n    getFinalizedHead: {\n      description: 'Returns hash of the latest BEEFY finalized block as seen by this client.',\n      params: [],\n      type: 'H256'\n    }\n  },\n  types: {\n    BeefyCommitment: {\n      payload: 'BeefyPayload',\n      blockNumber: 'BlockNumber',\n      validatorSetId: 'ValidatorSetId'\n    },\n    BeefyId: '[u8; 33]',\n    BeefySignedCommitment: {\n      commitment: 'BeefyCommitment',\n      signatures: 'Vec<Option<EcdsaSignature>>'\n    },\n    BeefyNextAuthoritySet: {\n      id: 'u64',\n      len: 'u32',\n      root: 'H256'\n    },\n    BeefyPayload: 'MmrRootHash',\n    MmrRootHash: 'H256',\n    ValidatorSetId: 'u64'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    CollectiveOrigin: {\n      _enum: {\n        Members: '(MemberCount, MemberCount)',\n        Member: 'AccountId'\n      }\n    },\n    MemberCount: 'u32',\n    ProposalIndex: 'u32',\n    VotesTo230: {\n      index: 'ProposalIndex',\n      threshold: 'MemberCount',\n      ayes: 'Vec<AccountId>',\n      nays: 'Vec<AccountId>'\n    },\n    Votes: {\n      index: 'ProposalIndex',\n      threshold: 'MemberCount',\n      ayes: 'Vec<AccountId>',\n      nays: 'Vec<AccountId>',\n      end: 'BlockNumber'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AuthorityId: 'AccountId',\n    RawVRFOutput: '[u8; 32]'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport rpc from \"./rpc.js\";\nexport default {\n  rpc,\n  types: {\n    AliveContractInfo: {\n      trieId: 'TrieId',\n      storageSize: 'u32',\n      pairCount: 'u32',\n      codeHash: 'CodeHash',\n      rentAllowance: 'Balance',\n      rentPaid: 'Balance',\n      deductBlock: 'BlockNumber',\n      lastWrite: 'Option<BlockNumber>',\n      _reserved: 'Option<Null>'\n    },\n    CodeHash: 'Hash',\n    CodeSource: {\n      _enum: {\n        Upload: 'Bytes',\n        Existing: 'Hash'\n      }\n    },\n    CodeUploadRequest: {\n      origin: 'AccountId',\n      code: 'Bytes',\n      storageDepositLimit: 'Option<Balance>'\n    },\n    CodeUploadResult: {\n      _enum: {\n        Ok: 'CodeUploadResultValue',\n        Err: 'Null'\n      }\n    },\n    CodeUploadResultValue: {\n      codeHash: 'CodeHash',\n      deposit: 'Balance'\n    },\n    ContractCallRequest: {\n      origin: 'AccountId',\n      dest: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'u64',\n      storageDepositLimit: 'Option<Balance>',\n      inputData: 'Bytes'\n    },\n    ContractExecResultSuccessTo255: {\n      status: 'u8',\n      data: 'Raw'\n    },\n    ContractExecResultTo255: {\n      _enum: {\n        Success: 'ContractExecResultSuccessTo255',\n        Error: 'Null'\n      }\n    },\n    ContractExecResultSuccessTo260: {\n      flags: 'ContractReturnFlags',\n      data: 'Bytes',\n      gasConsumed: 'u64'\n    },\n    ContractExecResultTo260: {\n      _enum: {\n        Success: 'ContractExecResultSuccessTo260',\n        Error: 'Null'\n      }\n    },\n    ContractExecResultErrModule: {\n      index: 'u8',\n      error: 'u8',\n      message: 'Option<Text>'\n    },\n    ContractExecResultErr: {\n      _enum: {\n        Other: 'Text',\n        CannotLookup: 'Null',\n        BadOrigin: 'Null',\n        Module: 'ContractExecResultErrModule'\n      }\n    },\n    ContractExecResultOk: {\n      flags: 'ContractReturnFlags',\n      data: 'Bytes'\n    },\n    ContractExecResultResult: {\n      _enum: {\n        Ok: 'ContractExecResultOk',\n        Err: 'ContractExecResultErr'\n      }\n    },\n    ContractExecResultTo267: {\n      gasConsumed: 'u64',\n      debugMessage: 'Text',\n      result: 'ContractExecResultResult'\n    },\n    ContractExecResult: {\n      gasConsumed: 'u64',\n      gasRequired: 'u64',\n      storageDeposit: 'StorageDeposit',\n      debugMessage: 'Text',\n      result: 'ContractExecResultResult'\n    },\n    ContractInfo: {\n      _enum: {\n        Alive: 'AliveContractInfo',\n        Tombstone: 'TombstoneContractInfo'\n      }\n    },\n    ContractCallFlags: {\n      _set: {\n        _bitLength: 32,\n        ForwardInput: 0b00000001,\n        CloneInput: 0b00000010,\n        TailCall: 0b00000100,\n        AllowReentry: 0b00001000\n      }\n    },\n    ContractReturnFlags: {\n      _set: {\n        _bitLength: 32,\n        Revert: 0x00000001\n      }\n    },\n    ContractStorageKey: '[u8; 32]',\n    DeletedContract: {\n      pairCount: 'u32',\n      trieId: 'TrieId'\n    },\n    ExecReturnValue: {\n      flags: 'ContractReturnFlags',\n      data: 'Bytes'\n    },\n    Gas: 'u64',\n    HostFnWeightsTo264: {\n      caller: 'Weight',\n      address: 'Weight',\n      gasLeft: 'Weight',\n      balance: 'Weight',\n      valueTransferred: 'Weight',\n      minimumBalance: 'Weight',\n      tombstoneDeposit: 'Weight',\n      rentAllowance: 'Weight',\n      blockNumber: 'Weight',\n      now: 'Weight',\n      weightToFee: 'Weight',\n      gas: 'Weight',\n      input: 'Weight',\n      inputPerByte: 'Weight',\n      return: 'Weight',\n      returnPerByte: 'Weight',\n      terminate: 'Weight',\n      restoreTo: 'Weight',\n      restoreToPerDelta: 'Weight',\n      random: 'Weight',\n      depositEvent: 'Weight',\n      depositEventPerTopic: 'Weight',\n      depositEventPerByte: 'Weight',\n      setRentAllowance: 'Weight',\n      setStorage: 'Weight',\n      setStoragePerByte: 'Weight',\n      clearStorage: 'Weight',\n      getStorage: 'Weight',\n      getStoragePerByte: 'Weight',\n      transfer: 'Weight',\n      call: 'Weight',\n      callTransferSurcharge: 'Weight',\n      callPerInputByte: 'Weight',\n      callPerOutputByte: 'Weight',\n      instantiate: 'Weight',\n      instantiatePerInputByte: 'Weight',\n      instantiatePerOutputByte: 'Weight',\n      hashSha2256: 'Weight',\n      hashSha2256PerByte: 'Weight',\n      hashKeccak256: 'Weight',\n      hashKeccak256PerByte: 'Weight',\n      hashBlake2256: 'Weight',\n      hashBlake2256PerByte: 'Weight',\n      hashBlake2128: 'Weight',\n      hashBlake2128PerByte: 'Weight'\n    },\n    HostFnWeights: {\n      caller: 'Weight',\n      address: 'Weight',\n      gasLeft: 'Weight',\n      balance: 'Weight',\n      valueTransferred: 'Weight',\n      minimumBalance: 'Weight',\n      tombstoneDeposit: 'Weight',\n      rentAllowance: 'Weight',\n      blockNumber: 'Weight',\n      now: 'Weight',\n      weightToFee: 'Weight',\n      gas: 'Weight',\n      input: 'Weight',\n      inputPerByte: 'Weight',\n      return: 'Weight',\n      returnPerByte: 'Weight',\n      terminate: 'Weight',\n      terminatePerCodeByte: 'Weight',\n      restoreTo: 'Weight',\n      restoreToPerCallerCodeByte: 'Weight',\n      restoreToPerTombstoneCodeByte: 'Weight',\n      restoreToPerDelta: 'Weight',\n      random: 'Weight',\n      depositEvent: 'Weight',\n      depositEventPerTopic: 'Weight',\n      depositEventPerByte: 'Weight',\n      setRentAllowance: 'Weight',\n      setStorage: 'Weight',\n      setStoragePerByte: 'Weight',\n      clearStorage: 'Weight',\n      getStorage: 'Weight',\n      getStoragePerByte: 'Weight',\n      transfer: 'Weight',\n      call: 'Weight',\n      callPerCodeByte: 'Weight',\n      callTransferSurcharge: 'Weight',\n      callPerInputByte: 'Weight',\n      callPerOutputByte: 'Weight',\n      instantiate: 'Weight',\n      instantiatePerCodeByte: 'Weight',\n      instantiatePerInputByte: 'Weight',\n      instantiatePerOutputByte: 'Weight',\n      instantiatePerSaltByte: 'Weight',\n      hashSha2256: 'Weight',\n      hashSha2256PerByte: 'Weight',\n      hashKeccak256: 'Weight',\n      hashKeccak256PerByte: 'Weight',\n      hashBlake2256: 'Weight',\n      hashBlake2256PerByte: 'Weight',\n      hashBlake2128: 'Weight',\n      hashBlake2128PerByte: 'Weight',\n      rentParams: 'Weight'\n    },\n    InstantiateRequestV1: {\n      origin: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'Gas',\n      code: 'Bytes',\n      data: 'Bytes',\n      salt: 'Bytes'\n    },\n    InstantiateRequestV2: {\n      _fallback: 'InstantiateRequestV1',\n      origin: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'Gas',\n      storageDepositLimit: 'Option<Balance>',\n      code: 'Bytes',\n      data: 'Bytes',\n      salt: 'Bytes'\n    },\n    InstantiateRequest: {\n      _fallback: 'InstantiateRequestV2',\n      origin: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'Gas',\n      storageDepositLimit: 'Option<Balance>',\n      code: 'CodeSource',\n      data: 'Bytes',\n      salt: 'Bytes'\n    },\n    ContractInstantiateResultTo267: {\n      _enum: {\n        Ok: 'InstantiateReturnValueTo267',\n        Err: 'Null'\n      }\n    },\n    ContractInstantiateResultTo299: {\n      _enum: {\n        Ok: 'InstantiateReturnValue',\n        Err: 'Null'\n      },\n      _fallback: 'ContractInstantiateResultTo267'\n    },\n    ContractInstantiateResult: {\n      _fallback: 'ContractInstantiateResultTo299',\n      gasConsumed: 'u64',\n      gasRequired: 'u64',\n      storageDeposit: 'StorageDeposit',\n      debugMessage: 'Text',\n      result: 'InstantiateReturnValue'\n    },\n    InstantiateReturnValueTo267: {\n      result: 'ExecReturnValue',\n      accountId: 'AccountId',\n      rentProjection: 'Option<RentProjection>'\n    },\n    InstantiateReturnValueOk: {\n      result: 'ExecReturnValue',\n      accountId: 'AccountId'\n    },\n    InstantiateReturnValue: {\n      _enum: {\n        Ok: 'InstantiateReturnValueOk',\n        Err: 'DispatchError'\n      }\n    },\n    InstructionWeights: {\n      i64const: 'u32',\n      i64load: 'u32',\n      i64store: 'u32',\n      select: 'u32',\n      rIf: 'u32',\n      br: 'u32',\n      brIf: 'u32',\n      brIable: 'u32',\n      brIablePerEntry: 'u32',\n      call: 'u32',\n      callIndirect: 'u32',\n      callIndirectPerParam: 'u32',\n      localGet: 'u32',\n      localSet: 'u32',\n      local_tee: 'u32',\n      globalGet: 'u32',\n      globalSet: 'u32',\n      memoryCurrent: 'u32',\n      memoryGrow: 'u32',\n      i64clz: 'u32',\n      i64ctz: 'u32',\n      i64popcnt: 'u32',\n      i64eqz: 'u32',\n      i64extendsi32: 'u32',\n      i64extendui32: 'u32',\n      i32wrapi64: 'u32',\n      i64eq: 'u32',\n      i64ne: 'u32',\n      i64lts: 'u32',\n      i64ltu: 'u32',\n      i64gts: 'u32',\n      i64gtu: 'u32',\n      i64les: 'u32',\n      i64leu: 'u32',\n      i64ges: 'u32',\n      i64geu: 'u32',\n      i64add: 'u32',\n      i64sub: 'u32',\n      i64mul: 'u32',\n      i64divs: 'u32',\n      i64divu: 'u32',\n      i64rems: 'u32',\n      i64remu: 'u32',\n      i64and: 'u32',\n      i64or: 'u32',\n      i64xor: 'u32',\n      i64shl: 'u32',\n      i64shrs: 'u32',\n      i64shru: 'u32',\n      i64rotl: 'u32',\n      i64rotr: 'u32'\n    },\n    LimitsTo264: {\n      eventTopics: 'u32',\n      stackHeight: 'u32',\n      globals: 'u32',\n      parameters: 'u32',\n      memoryPages: 'u32',\n      tableSize: 'u32',\n      brTableSize: 'u32',\n      subjectLen: 'u32',\n      codeSize: 'u32'\n    },\n    Limits: {\n      eventTopics: 'u32',\n      stackHeight: 'u32',\n      globals: 'u32',\n      parameters: 'u32',\n      memoryPages: 'u32',\n      tableSize: 'u32',\n      brTableSize: 'u32',\n      subjectLen: 'u32'\n    },\n    PrefabWasmModule: {\n      scheduleVersion: 'Compact<u32>',\n      initial: 'Compact<u32>',\n      maximum: 'Compact<u32>',\n      refcount: 'Compact<u64>',\n      _reserved: 'Option<Null>',\n      code: 'Bytes',\n      originalCodeLen: 'u32'\n    },\n    RentProjection: {\n      _enum: {\n        EvictionAt: 'BlockNumber',\n        NoEviction: 'Null'\n      }\n    },\n    ScheduleTo212: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    ScheduleTo258: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      transferCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    ScheduleTo264: {\n      version: 'u32',\n      enablePrintln: 'bool',\n      limits: 'LimitsTo264',\n      instructionWeights: 'InstructionWeights',\n      hostFnWeights: 'HostFnWeightsTo264'\n    },\n    Schedule: {\n      version: 'u32',\n      enablePrintln: 'bool',\n      limits: 'Limits',\n      instructionWeights: 'InstructionWeights',\n      hostFnWeights: 'HostFnWeights'\n    },\n    SeedOf: 'Hash',\n    StorageDeposit: {\n      _enum: {\n        Refund: 'Balance',\n        Charge: 'Balance'\n      }\n    },\n    TombstoneContractInfo: 'Hash',\n    TrieId: 'Bytes'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  call: {\n    description: 'Executes a call to a contract',\n    params: [{\n      name: 'callRequest',\n      type: 'ContractCallRequest'\n    }, {\n      name: 'at',\n      type: 'BlockHash',\n      isHistoric: true,\n      isOptional: true\n    }],\n    type: 'ContractExecResult'\n  },\n  instantiate: {\n    description: 'Instantiate a new contract',\n    params: [{\n      name: 'request',\n      type: 'InstantiateRequest'\n    }, {\n      name: 'at',\n      type: 'BlockHash',\n      isHstoric: true,\n      isOptional: true\n    }],\n    type: 'ContractInstantiateResult'\n  },\n  uploadCode: {\n    // The RPC here is terribly misnamed - somebody forgot how the RPCs\n    // are actually done, ie. <module>_<camelCasedMethod>\n    endpoint: 'contracts_upload_code',\n    description: 'Upload new code without instantiating a contract from it',\n    params: [{\n      name: 'uploadRequest',\n      type: 'CodeUploadRequest'\n    }, {\n      name: 'at',\n      type: 'BlockHash',\n      isHstoric: true,\n      isOptional: true\n    }],\n    type: 'CodeUploadResult'\n  },\n  getStorage: {\n    description: 'Returns the value under a specified storage key in a contract',\n    params: [{\n      name: 'address',\n      type: 'AccountId'\n    }, {\n      name: 'key',\n      type: 'H256'\n    }, {\n      name: 'at',\n      type: 'BlockHash',\n      isHistoric: true,\n      isOptional: true\n    }],\n    type: 'Option<Bytes>'\n  },\n  rentProjection: {\n    description: 'Returns the projected time a given contract will be able to sustain paying its rent',\n    params: [{\n      name: 'address',\n      type: 'AccountId'\n    }, {\n      name: 'at',\n      type: 'BlockHash',\n      isHistoric: true,\n      isOptional: true\n    }],\n    type: 'Option<BlockNumber>'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const AllConvictions = [// 0.1x votes, unlocked.\n'None', // 1x votes, locked for an enactment period following a successful vote.\n'Locked1x', // 2x votes, locked for 2x enactment periods following a successful vote.\n'Locked2x', // 3x votes, locked for 4x...\n'Locked3x', // 4x votes, locked for 8x...\n'Locked4x', // 5x votes, locked for 16x...\n'Locked5x', /// 6x votes, locked for 32x...\n'Locked6x'];\nexport default {\n  rpc: {},\n  types: {\n    AccountVote: {\n      _enum: {\n        Standard: 'AccountVoteStandard',\n        Split: 'AccountVoteSplit'\n      }\n    },\n    AccountVoteSplit: {\n      aye: 'Balance',\n      nay: 'Balance'\n    },\n    AccountVoteStandard: {\n      vote: 'Vote',\n      balance: 'Balance'\n    },\n    Conviction: {\n      _enum: AllConvictions\n    },\n    Delegations: {\n      votes: 'Balance',\n      capital: 'Balance'\n    },\n    PreimageStatus: {\n      _enum: {\n        Missing: 'BlockNumber',\n        Available: 'PreimageStatusAvailable'\n      }\n    },\n    PreimageStatusAvailable: {\n      data: 'Bytes',\n      provider: 'AccountId',\n      deposit: 'Balance',\n      since: 'BlockNumber',\n      expiry: 'Option<BlockNumber>'\n    },\n    PriorLock: '(BlockNumber, Balance)',\n    PropIndex: 'u32',\n    Proposal: 'Call',\n    ProxyState: {\n      _enum: {\n        Open: 'AccountId',\n        Active: 'AccountId'\n      }\n    },\n    ReferendumIndex: 'u32',\n    ReferendumInfoTo239: {\n      end: 'BlockNumber',\n      proposalHash: 'Hash',\n      threshold: 'VoteThreshold',\n      delay: 'BlockNumber'\n    },\n    ReferendumInfo: {\n      _enum: {\n        Ongoing: 'ReferendumStatus',\n        Finished: 'ReferendumInfoFinished'\n      }\n    },\n    ReferendumInfoFinished: {\n      approved: 'bool',\n      end: 'BlockNumber'\n    },\n    ReferendumStatus: {\n      end: 'BlockNumber',\n      proposalHash: 'Hash',\n      threshold: 'VoteThreshold',\n      delay: 'BlockNumber',\n      tally: 'Tally'\n    },\n    Tally: {\n      ayes: 'Balance',\n      nays: 'Balance',\n      turnout: 'Balance'\n    },\n    Voting: {\n      _enum: {\n        Direct: 'VotingDirect',\n        Delegating: 'VotingDelegating'\n      }\n    },\n    VotingDirect: {\n      votes: 'Vec<VotingDirectVote>',\n      delegations: 'Delegations',\n      prior: 'PriorLock'\n    },\n    VotingDirectVote: '(ReferendumIndex, AccountVote)',\n    VotingDelegating: {\n      balance: 'Balance',\n      target: 'AccountId',\n      conviction: 'Conviction',\n      delegations: 'Delegations',\n      prior: 'PriorLock'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    getBlockStats: {\n      description: 'Reexecute the specified `block_hash` and gather statistics while doing so',\n      params: [{\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true\n      }],\n      type: 'Option<BlockStats>'\n    }\n  },\n  types: {\n    BlockStats: {\n      witnessLen: 'u64',\n      witnessCompactLen: 'u64',\n      blockLen: 'u64',\n      blockNumExtrinsics: 'u64'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    ApprovalFlag: 'u32',\n    DefunctVoter: {\n      who: 'AccountId',\n      voteCount: 'Compact<u32>',\n      candidateCount: 'Compact<u32>'\n    },\n    Renouncing: {\n      _enum: {\n        Member: 'Null',\n        RunnerUp: 'Null',\n        Candidate: 'Compact<u32>'\n      }\n    },\n    SetIndex: 'u32',\n    Vote: 'GenericVote',\n    VoteIndex: 'u32',\n    VoterInfo: {\n      lastActive: 'VoteIndex',\n      lastWin: 'VoteIndex',\n      pot: 'Balance',\n      stake: 'Balance'\n    },\n    VoteThreshold: {\n      _enum: ['Super Majority Approve', 'Super Majority Against', 'Simple Majority']\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    createBlock: {\n      description: 'Instructs the manual-seal authorship task to create a new block',\n      params: [{\n        name: 'createEmpty',\n        type: 'bool'\n      }, {\n        name: 'finalize',\n        type: 'bool'\n      }, {\n        name: 'parentHash',\n        type: 'BlockHash',\n        isOptional: true\n      }],\n      type: 'CreatedBlock'\n    },\n    finalizeBlock: {\n      description: 'Instructs the manual-seal authorship task to finalize a block',\n      params: [{\n        name: 'hash',\n        type: 'BlockHash'\n      }, {\n        name: 'justification',\n        type: 'Justification',\n        isOptional: true\n      }],\n      type: 'bool'\n    }\n  },\n  types: {\n    CreatedBlock: {\n      hash: 'BlockHash',\n      aux: 'ImportedAux'\n    },\n    ImportedAux: {\n      headerOnly: 'bool',\n      clearJustificationRequests: 'bool',\n      needsJustification: 'bool',\n      badJustification: 'bool',\n      needsFinalityProof: 'bool',\n      isNewBest: 'bool'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    EvmAccount: {\n      nonce: 'u256',\n      balance: 'u256'\n    },\n    EvmLog: {\n      address: 'H160',\n      topics: 'Vec<H256>',\n      data: 'Bytes'\n    },\n    EvmVicinity: {\n      gasPrice: 'u256',\n      origin: 'H160'\n    },\n    ExitError: {\n      _enum: {\n        StackUnderflow: 'Null',\n        StackOverflow: 'Null',\n        InvalidJump: 'Null',\n        InvalidRange: 'Null',\n        DesignatedInvalid: 'Null',\n        CallTooDeep: 'Null',\n        CreateCollision: 'Null',\n        CreateContractLimit: 'Null',\n        OutOfOffset: 'Null',\n        OutOfGas: 'Null',\n        OutOfFund: 'Null',\n        PCUnderflow: 'Null',\n        CreateEmpty: 'Null',\n        Other: 'Text'\n      }\n    },\n    ExitFatal: {\n      _enum: {\n        NotSupported: 'Null',\n        UnhandledInterrupt: 'Null',\n        CallErrorAsFatal: 'ExitError',\n        Other: 'Text'\n      }\n    },\n    ExitReason: {\n      _enum: {\n        Succeed: 'ExitSucceed',\n        Error: 'ExitError',\n        Revert: 'ExitRevert',\n        Fatal: 'ExitFatal'\n      }\n    },\n    ExitRevert: {\n      _enum: ['Reverted']\n    },\n    ExitSucceed: {\n      _enum: ['Stopped', 'Returned', 'Suicided']\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Extrinsic: 'GenericExtrinsic',\n    ExtrinsicEra: 'GenericExtrinsicEra',\n    ExtrinsicPayload: 'GenericExtrinsicPayload',\n    ExtrinsicSignature: 'MultiSignature',\n    ExtrinsicV4: 'GenericExtrinsicV4',\n    ExtrinsicPayloadV4: 'GenericExtrinsicPayloadV4',\n    ExtrinsicSignatureV4: 'GenericExtrinsicSignatureV4',\n    ExtrinsicUnknown: 'GenericExtrinsicUnknown',\n    ExtrinsicPayloadUnknown: 'GenericExtrinsicPayloadUnknown',\n    // eras\n    Era: 'ExtrinsicEra',\n    ImmortalEra: 'GenericImmortalEra',\n    MortalEra: 'GenericMortalEra',\n    // signatures & signer\n    AnySignature: 'H512',\n    MultiSignature: {\n      _enum: {\n        Ed25519: 'Ed25519Signature',\n        Sr25519: 'Sr25519Signature',\n        Ecdsa: 'EcdsaSignature'\n      }\n    },\n    Signature: 'H512',\n    SignerPayload: 'GenericSignerPayload',\n    EcdsaSignature: '[u8; 65]',\n    Ed25519Signature: 'H512',\n    Sr25519Signature: 'H512'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AssetOptions: {\n      initalIssuance: 'Compact<Balance>',\n      permissions: 'PermissionLatest'\n    },\n    Owner: {\n      _enum: {\n        None: 'Null',\n        Address: 'AccountId'\n      }\n    },\n    PermissionsV1: {\n      update: 'Owner',\n      mint: 'Owner',\n      burn: 'Owner'\n    },\n    PermissionVersions: {\n      _enum: {\n        V1: 'PermissionsV1'\n      }\n    },\n    PermissionLatest: 'PermissionsV1'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    ActiveGilt: {\n      proportion: 'Perquintill',\n      amount: 'Balance',\n      who: 'AccountId',\n      expiry: 'BlockNumber'\n    },\n    ActiveGiltsTotal: {\n      frozen: 'Balance',\n      proportion: 'Perquintill',\n      index: 'ActiveIndex',\n      target: 'Perquintill'\n    },\n    ActiveIndex: 'u32',\n    GiltBid: {\n      amount: 'Balance',\n      who: 'AccountId'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    proveFinality: {\n      description: 'Prove finality for the given block number, returning the Justification for the last block in the set.',\n      params: [{\n        name: 'blockNumber',\n        type: 'BlockNumber'\n      }],\n      type: 'Option<EncodedFinalityProofs>'\n    },\n    roundState: {\n      description: 'Returns the state of the current best round state as well as the ongoing background rounds',\n      params: [],\n      type: 'ReportedRoundStates'\n    },\n    subscribeJustifications: {\n      description: 'Subscribes to grandpa justifications',\n      params: [],\n      pubsub: ['justifications', 'subscribeJustifications', 'unsubscribeJustifications'],\n      type: 'JustificationNotification'\n    }\n  },\n  types: {\n    AuthorityIndex: 'u64',\n    AuthorityList: 'Vec<NextAuthority>',\n    AuthoritySet: {\n      currentAuthorities: 'AuthorityList',\n      setId: 'u64',\n      pendingStandardChanges: 'ForkTreePendingChange',\n      pendingForcedChanges: 'Vec<PendingChange>',\n      authoritySetChanges: 'AuthoritySetChanges'\n    },\n    ForkTreePendingChange: {\n      roots: 'Vec<ForkTreePendingChangeNode>',\n      bestFinalizedNumber: 'Option<BlockNumber>'\n    },\n    ForkTreePendingChangeNode: {\n      hash: 'BlockHash',\n      number: 'BlockNumber',\n      data: 'PendingChange',\n      // actual data, here PendingChange\n      children: 'Vec<ForkTreePendingChangeNode>'\n    },\n    AuthoritySetChange: '(U64, BlockNumber)',\n    AuthoritySetChanges: 'Vec<AuthoritySetChange>',\n    AuthorityWeight: 'u64',\n    DelayKind: {\n      _enum: {\n        Finalized: 'Null',\n        Best: 'DelayKindBest'\n      }\n    },\n    DelayKindBest: {\n      medianLastFinalized: 'BlockNumber'\n    },\n    EncodedFinalityProofs: 'Bytes',\n    GrandpaEquivocation: {\n      _enum: {\n        Prevote: 'GrandpaEquivocationValue',\n        Precommit: 'GrandpaEquivocationValue'\n      }\n    },\n    GrandpaEquivocationProof: {\n      setId: 'SetId',\n      equivocation: 'GrandpaEquivocation'\n    },\n    GrandpaEquivocationValue: {\n      roundNumber: 'u64',\n      identity: 'AuthorityId',\n      first: '(GrandpaPrevote, AuthoritySignature)',\n      second: '(GrandpaPrevote, AuthoritySignature)'\n    },\n    GrandpaPrevote: {\n      targetHash: 'Hash',\n      targetNumber: 'BlockNumber'\n    },\n    GrandpaCommit: {\n      targetHash: 'BlockHash',\n      targetNumber: 'BlockNumber',\n      precommits: 'Vec<GrandpaSignedPrecommit>'\n    },\n    GrandpaPrecommit: {\n      targetHash: 'BlockHash',\n      targetNumber: 'BlockNumber'\n    },\n    GrandpaSignedPrecommit: {\n      precommit: 'GrandpaPrecommit',\n      signature: 'AuthoritySignature',\n      id: 'AuthorityId'\n    },\n    GrandpaJustification: {\n      round: 'u64',\n      commit: 'GrandpaCommit',\n      votesAncestries: 'Vec<Header>'\n    },\n    JustificationNotification: 'Bytes',\n    KeyOwnerProof: 'MembershipProof',\n    NextAuthority: '(AuthorityId, AuthorityWeight)',\n    PendingChange: {\n      nextAuthorities: 'AuthorityList',\n      delay: 'BlockNumber',\n      canonHeight: 'BlockNumber',\n      canonHash: 'BlockHash',\n      delayKind: 'DelayKind'\n    },\n    PendingPause: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber'\n    },\n    PendingResume: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber'\n    },\n    Precommits: {\n      currentWeight: 'u32',\n      missing: 'BTreeSet<AuthorityId>'\n    },\n    Prevotes: {\n      currentWeight: 'u32',\n      missing: 'BTreeSet<AuthorityId>'\n    },\n    ReportedRoundStates: {\n      setId: 'u32',\n      best: 'RoundState',\n      background: 'Vec<RoundState>'\n    },\n    RoundState: {\n      round: 'u32',\n      totalWeight: 'u32',\n      thresholdWeight: 'u32',\n      prevotes: 'Prevotes',\n      precommits: 'Precommits'\n    },\n    SetId: 'u64',\n    StoredPendingChange: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber',\n      nextAuthorities: 'AuthorityList'\n    },\n    StoredState: {\n      _enum: {\n        Live: 'Null',\n        PendingPause: 'PendingPause',\n        Paused: 'Null',\n        PendingResume: 'PendingResume'\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    IdentityFields: {\n      _set: {\n        _bitLength: 64,\n        // Mapped here to 32 bits, in Rust these are 64-bit values\n        Display: 0b00000000000000000000000000000001,\n        Legal: 0b00000000000000000000000000000010,\n        Web: 0b00000000000000000000000000000100,\n        Riot: 0b00000000000000000000000000001000,\n        Email: 0b00000000000000000000000000010000,\n        PgpFingerprint: 0b00000000000000000000000000100000,\n        Image: 0b00000000000000000000000001000000,\n        Twitter: 0b00000000000000000000000010000000\n      }\n    },\n    IdentityInfoAdditional: '(Data, Data)',\n    IdentityInfoTo198: {\n      additional: 'Vec<IdentityInfoAdditional>',\n      display: 'Data',\n      legal: 'Data',\n      web: 'Data',\n      riot: 'Data',\n      email: 'Data',\n      pgpFingerprint: 'Option<H160>',\n      image: 'Data'\n    },\n    IdentityInfo: {\n      _fallback: 'IdentityInfoTo198',\n      additional: 'Vec<IdentityInfoAdditional>',\n      display: 'Data',\n      legal: 'Data',\n      web: 'Data',\n      riot: 'Data',\n      email: 'Data',\n      pgpFingerprint: 'Option<H160>',\n      image: 'Data',\n      twitter: 'Data'\n    },\n    IdentityJudgement: {\n      _enum: {\n        Unknown: 'Null',\n        FeePaid: 'Balance',\n        Reasonable: 'Null',\n        KnownGood: 'Null',\n        OutOfDate: 'Null',\n        LowQuality: 'Null',\n        Erroneous: 'Null'\n      }\n    },\n    RegistrationJudgement: '(RegistrarIndex, IdentityJudgement)',\n    RegistrationTo198: {\n      judgements: 'Vec<RegistrationJudgement>',\n      deposit: 'Balance',\n      info: 'IdentityInfoTo198'\n    },\n    Registration: {\n      _fallback: 'RegistrationTo198',\n      judgements: 'Vec<RegistrationJudgement>',\n      deposit: 'Balance',\n      info: 'IdentityInfo'\n    },\n    RegistrarIndex: 'u32',\n    RegistrarInfo: {\n      account: 'AccountId',\n      fee: 'Balance',\n      fields: 'IdentityFields'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AuthIndex: 'u32',\n    AuthoritySignature: 'Signature',\n    Heartbeat: {\n      blockNumber: 'BlockNumber',\n      networkState: 'OpaqueNetworkState',\n      sessionIndex: 'SessionIndex',\n      authorityIndex: 'AuthIndex',\n      validatorsLen: 'u32'\n    },\n    HeartbeatTo244: {\n      blockNumber: 'BlockNumber',\n      networkState: 'OpaqueNetworkState',\n      sessionIndex: 'SessionIndex',\n      authorityIndex: 'AuthIndex'\n    },\n    OpaqueMultiaddr: 'Bytes',\n    OpaquePeerId: 'Bytes',\n    OpaqueNetworkState: {\n      peerId: 'OpaquePeerId',\n      externalAddresses: 'Vec<OpaqueMultiaddr>'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    CallIndex: '(u8, u8)',\n    LotteryConfig: {\n      price: 'Balance',\n      start: 'BlockNumber',\n      length: 'BlockNumber',\n      delay: 'BlockNumber',\n      repeat: 'bool'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    generateProof: {\n      description: 'Generate MMR proof for given leaf index.',\n      params: [{\n        name: 'leafIndex',\n        type: 'u64'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'MmrLeafProof'\n    }\n  },\n  types: {\n    MmrLeafProof: {\n      blockHash: 'BlockHash',\n      leaf: 'Bytes',\n      proof: 'Bytes'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    DeferredOffenceOf: '(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)',\n    Kind: '[u8; 16]',\n    OffenceDetails: {\n      offender: 'Offender',\n      reporters: 'Vec<Reporter>'\n    },\n    Offender: 'IdentificationTuple',\n    OpaqueTimeSlot: 'Bytes',\n    ReportIdOf: 'Hash',\n    Reporter: 'AccountId'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    ProxyDefinition: {\n      delegate: 'AccountId',\n      proxyType: 'ProxyType',\n      delay: 'BlockNumber'\n    },\n    ProxyType: {\n      _enum: ['Any', 'NonTransfer', 'Governance', 'Staking']\n    },\n    ProxyAnnouncement: {\n      real: 'AccountId',\n      callHash: 'Hash',\n      height: 'BlockNumber'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    ActiveRecovery: {\n      created: 'BlockNumber',\n      deposit: 'Balance',\n      friends: 'Vec<AccountId>'\n    },\n    RecoveryConfig: {\n      delayPeriod: 'BlockNumber',\n      deposit: 'Balance',\n      friends: 'Vec<AccountId>',\n      threshold: 'u16'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Period: '(BlockNumber, u32)',\n    Priority: 'u8',\n    SchedulePeriod: 'Period',\n    SchedulePriority: 'Priority',\n    Scheduled: {\n      maybeId: 'Option<Bytes>',\n      priority: 'SchedulePriority',\n      call: 'Call',\n      maybePeriodic: 'Option<SchedulePeriod>',\n      origin: 'PalletsOrigin'\n    },\n    ScheduledTo254: {\n      maybeId: 'Option<Bytes>',\n      priority: 'SchedulePriority',\n      call: 'Call',\n      maybePeriodic: 'Option<SchedulePeriod>'\n    },\n    TaskAddress: '(BlockNumber, u32)'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util'; // The runtime definition of SessionKeys are passed as a Trait to session\n// Defined in `node/runtime/src/lib.rs` as follow\n//   impl_opaque_keys! {\n//     pub struct SessionKeys {\n// Here we revert to tuples to keep the interfaces \"opaque\", as per the use\n\nconst keyTypes = {\n  // key for beefy\n  BeefyKey: '[u8; 33]',\n  // default to Substrate master defaults, 4 keys (polkadot master, 5 keys)\n  Keys: 'SessionKeys4',\n  SessionKeys1: '(AccountId)',\n  SessionKeys2: '(AccountId, AccountId)',\n  SessionKeys3: '(AccountId, AccountId, AccountId)',\n  SessionKeys4: '(AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys5: '(AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys6: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys6B: '(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n  SessionKeys7: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys7B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n  SessionKeys8: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys8B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n  SessionKeys9: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys9B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n  SessionKeys10: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys10B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)'\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, keyTypes, {\n    FullIdentification: 'Exposure',\n    IdentificationTuple: '(ValidatorId, FullIdentification)',\n    MembershipProof: {\n      session: 'SessionIndex',\n      trieNodes: 'Vec<Vec<u8>>',\n      validatorCount: 'ValidatorCount'\n    },\n    SessionIndex: 'u32',\n    ValidatorCount: 'u32'\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Bid: {\n      who: 'AccountId',\n      kind: 'BidKind',\n      value: 'Balance'\n    },\n    BidKind: {\n      _enum: {\n        Deposit: 'Balance',\n        Vouch: '(AccountId, Balance)'\n      }\n    },\n    // a society-specific Judgement (not the same as identity Judgement)\n    SocietyJudgement: {\n      _enum: ['Rebid', 'Reject', 'Approve']\n    },\n    // a society-specific Vote\n    SocietyVote: {\n      _enum: ['Skeptic', 'Reject', 'Approve']\n    },\n    StrikeCount: 'u32',\n    VouchingStatus: {\n      _enum: ['Vouching', 'Banned']\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util';\nconst deprecated = {\n  Points: 'u32',\n  EraPoints: {\n    total: 'Points',\n    individual: 'Vec<Points>'\n  }\n};\nconst phragmen = {\n  CompactAssignments: 'CompactAssignmentsWith16',\n  CompactAssignmentsWith16: {\n    votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',\n    votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',\n    votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',\n    votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',\n    votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',\n    votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',\n    votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',\n    votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',\n    votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',\n    votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',\n    votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',\n    votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',\n    votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',\n    votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',\n    votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',\n    votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>'\n  },\n  CompactAssignmentsWith24: {\n    votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',\n    votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',\n    votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',\n    votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',\n    votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',\n    votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',\n    votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',\n    votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',\n    votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',\n    votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',\n    votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',\n    votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',\n    votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',\n    votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',\n    votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',\n    votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>',\n    votes17: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>',\n    votes18: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>',\n    votes19: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>',\n    votes20: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>',\n    votes21: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>',\n    votes22: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>',\n    votes23: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>',\n    votes24: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>'\n  },\n  CompactAssignmentsTo265: 'CompactAssignmentsWith16',\n  CompactAssignmentsTo257: {\n    votes1: 'Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>',\n    votes2: 'Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>',\n    votes3: 'Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>',\n    votes4: 'Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>',\n    votes5: 'Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>',\n    votes6: 'Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>',\n    votes7: 'Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>',\n    votes8: 'Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>',\n    votes9: 'Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>',\n    votes10: 'Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>',\n    votes11: 'Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>',\n    votes12: 'Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>',\n    votes13: 'Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>',\n    votes14: 'Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>',\n    votes15: 'Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>',\n    votes16: 'Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>'\n  },\n  CompactScore: '(ValidatorIndex, OffchainAccuracy)',\n  CompactScoreCompact: '(ValidatorIndexCompact, OffchainAccuracyCompact)',\n  ElectionCompute: {\n    // in previous versions the last entry was \"AuthorityId\"\n    // (since no data attached, and it is via SCALE can rename)\n    _enum: ['OnChain', 'Signed', 'Unsigned']\n  },\n  ElectionPhase: {\n    _enum: {\n      Off: null,\n      Signed: null,\n      Unsigned: '(bool, BlockNumber)',\n      Emergency: null\n    }\n  },\n  ElectionResult: {\n    compute: 'ElectionCompute',\n    slotStake: 'Balance',\n    electedStashes: 'Vec<AccountId>',\n    exposures: 'Vec<(AccountId, Exposure)>'\n  },\n  ElectionScore: '[u128; 3]',\n  ElectionSize: {\n    validators: 'Compact<ValidatorIndex>',\n    nominators: 'Compact<NominatorIndex>'\n  },\n  ElectionStatus: {\n    _enum: {\n      Close: 'Null',\n      Open: 'BlockNumber'\n    }\n  },\n  ExtendedBalance: 'u128',\n  RawSolution: 'RawSolutionWith16',\n  RawSolutionWith16: {\n    compact: 'CompactAssignmentsWith16',\n    score: 'ElectionScore',\n    round: 'u32'\n  },\n  RawSolutionWith24: {\n    compact: 'CompactAssignmentsWith24',\n    score: 'ElectionScore',\n    round: 'u32'\n  },\n  RawSolutionTo265: 'RawSolutionWith16',\n  ReadySolution: {\n    supports: 'SolutionSupports',\n    score: 'ElectionScore',\n    compute: 'ElectionCompute'\n  },\n  RoundSnapshot: {\n    voters: 'Vec<(AccountId, VoteWeight, Vec<AccountId>)>',\n    targets: 'Vec<AccountId>'\n  },\n  SeatHolder: {\n    who: 'AccountId',\n    stake: 'Balance',\n    deposit: 'Balance'\n  },\n  SignedSubmission: {\n    _fallback: 'SignedSubmissionTo276',\n    who: 'AccountId',\n    deposit: 'Balance',\n    solution: 'RawSolution',\n    reward: 'Balance'\n  },\n  SignedSubmissionTo276: {\n    who: 'AccountId',\n    deposit: 'Balance',\n    solution: 'RawSolution'\n  },\n  SignedSubmissionOf: 'SignedSubmission',\n  SolutionOrSnapshotSize: {\n    voters: 'Compact<u32>',\n    targets: 'Compact<u32>'\n  },\n  SolutionSupport: {\n    total: 'ExtendedBalance',\n    voters: 'Vec<(AccountId, ExtendedBalance)>'\n  },\n  SolutionSupports: 'Vec<(AccountId, SolutionSupport)>',\n  Supports: 'SolutionSupports',\n  SubmissionIndicesOf: 'BTreeMap<ElectionScore, u32>',\n  Voter: {\n    votes: 'Vec<AccountId>',\n    stake: 'Balance',\n    deposit: 'Balance'\n  },\n  VoteWeight: 'u64'\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, deprecated, phragmen, {\n    ActiveEraInfo: {\n      index: 'EraIndex',\n      start: 'Option<Moment>'\n    },\n    EraIndex: 'u32',\n    EraRewardPoints: {\n      total: 'RewardPoint',\n      individual: 'BTreeMap<AccountId, RewardPoint>'\n    },\n    EraRewards: {\n      total: 'u32',\n      rewards: 'Vec<u32>'\n    },\n    Exposure: {\n      total: 'Compact<Balance>',\n      own: 'Compact<Balance>',\n      others: 'Vec<IndividualExposure>'\n    },\n    Forcing: {\n      _enum: ['NotForcing', 'ForceNew', 'ForceNone', 'ForceAlways']\n    },\n    IndividualExposure: {\n      who: 'AccountId',\n      value: 'Compact<Balance>'\n    },\n    KeyType: 'AccountId',\n    MomentOf: 'Moment',\n    Nominations: {\n      targets: 'Vec<AccountId>',\n      submittedIn: 'EraIndex',\n      suppressed: 'bool'\n    },\n    NominatorIndex: 'u32',\n    NominatorIndexCompact: 'Compact<NominatorIndex>',\n    OffchainAccuracy: 'PerU16',\n    OffchainAccuracyCompact: 'Compact<OffchainAccuracy>',\n    PhragmenScore: '[u128; 3]',\n    Points: 'u32',\n    RewardDestination: {\n      _enum: {\n        Staked: 'Null',\n        Stash: 'Null',\n        Controller: 'Null',\n        Account: 'AccountId',\n        None: 'Null'\n      }\n    },\n    RewardPoint: 'u32',\n    SlashJournalEntry: {\n      who: 'AccountId',\n      amount: 'Balance',\n      ownSlash: 'Balance'\n    },\n    SlashingSpansTo204: {\n      spanIndex: 'SpanIndex',\n      lastStart: 'EraIndex',\n      prior: 'Vec<EraIndex>'\n    },\n    SlashingSpans: {\n      spanIndex: 'SpanIndex',\n      lastStart: 'EraIndex',\n      lastNonzeroSlash: 'EraIndex',\n      prior: 'Vec<EraIndex>'\n    },\n    SpanIndex: 'u32',\n    SpanRecord: {\n      slashed: 'Balance',\n      paidOut: 'Balance'\n    },\n    StakingLedgerTo223: {\n      stash: 'AccountId',\n      total: 'Compact<Balance>',\n      active: 'Compact<Balance>',\n      unlocking: 'Vec<UnlockChunk>'\n    },\n    StakingLedgerTo240: {\n      stash: 'AccountId',\n      total: 'Compact<Balance>',\n      active: 'Compact<Balance>',\n      unlocking: 'Vec<UnlockChunk>',\n      lastReward: 'Option<EraIndex>'\n    },\n    StakingLedger: {\n      stash: 'AccountId',\n      total: 'Compact<Balance>',\n      active: 'Compact<Balance>',\n      unlocking: 'Vec<UnlockChunk>',\n      claimedRewards: 'Vec<EraIndex>'\n    },\n    UnappliedSlashOther: '(AccountId, Balance)',\n    UnappliedSlash: {\n      validator: 'AccountId',\n      own: 'Balance',\n      others: 'Vec<UnappliedSlashOther>',\n      reporters: 'Vec<AccountId>',\n      payout: 'Balance'\n    },\n    UnlockChunk: {\n      value: 'Compact<Balance>',\n      era: 'Compact<BlockNumber>'\n    },\n    ValidatorIndex: 'u16',\n    ValidatorIndexCompact: 'Compact<ValidatorIndex>',\n    ValidatorPrefs: 'ValidatorPrefsWithBlocked',\n    ValidatorPrefsWithCommission: {\n      commission: 'Compact<Perbill>'\n    },\n    ValidatorPrefsWithBlocked: {\n      commission: 'Compact<Perbill>',\n      blocked: 'bool'\n    },\n    ValidatorPrefsTo196: {\n      validatorPayment: 'Compact<Balance>'\n    },\n    ValidatorPrefsTo145: {\n      unstakeThreshold: 'Compact<u32>',\n      validatorPayment: 'Compact<Balance>'\n    }\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    WeightToFeeCoefficient: {\n      coeffInteger: 'Balance',\n      coeffFrac: 'Perbill',\n      negative: 'bool',\n      degree: 'u8'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    genSyncSpec: {\n      endpoint: 'sync_state_genSyncSpec',\n      description: 'Returns the json-serialized chainspec running the node, with a sync state.',\n      params: [{\n        name: 'raw',\n        type: 'bool'\n      }],\n      type: 'Json'\n    }\n  },\n  types: {}\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    accountNextIndex: {\n      alias: ['account_nextIndex'],\n      description: 'Retrieves the next accountIndex as available on the node',\n      params: [{\n        name: 'accountId',\n        type: 'AccountId'\n      }],\n      type: 'Index'\n    },\n    dryRun: {\n      alias: ['system_dryRunAt'],\n      description: 'Dry run an extrinsic at a given block',\n      params: [{\n        name: 'extrinsic',\n        type: 'Bytes'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'ApplyExtrinsicResult'\n    },\n    name: {\n      description: 'Retrieves the node name',\n      params: [],\n      type: 'Text'\n    },\n    version: {\n      description: 'Retrieves the version of the node',\n      params: [],\n      type: 'Text'\n    },\n    chain: {\n      description: 'Retrieves the chain',\n      params: [],\n      type: 'Text'\n    },\n    chainType: {\n      description: 'Retrieves the chain type',\n      params: [],\n      type: 'ChainType'\n    },\n    properties: {\n      description: 'Get a custom set of properties as a JSON object, defined in the chain spec',\n      params: [],\n      type: 'ChainProperties'\n    },\n    health: {\n      description: 'Return health status of the node',\n      params: [],\n      type: 'Health'\n    },\n    localPeerId: {\n      description: 'Returns the base58-encoded PeerId of the node',\n      params: [],\n      type: 'Text'\n    },\n    localListenAddresses: {\n      description: 'The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example',\n      params: [],\n      type: 'Vec<Text>'\n    },\n    peers: {\n      description: 'Returns the currently connected peers',\n      params: [],\n      type: 'Vec<PeerInfo>'\n    },\n    networkState: {\n      alias: ['system_unstable_networkState'],\n      description: 'Returns current state of the network',\n      params: [],\n      type: 'NetworkState'\n    },\n    addReservedPeer: {\n      description: 'Adds a reserved peer',\n      params: [{\n        name: 'peer',\n        type: 'Text'\n      }],\n      type: 'Text'\n    },\n    removeReservedPeer: {\n      description: 'Remove a reserved peer',\n      params: [{\n        name: 'peerId',\n        type: 'Text'\n      }],\n      type: 'Text'\n    },\n    reservedPeers: {\n      description: 'Returns the list of reserved peers',\n      params: [],\n      type: 'Vec<Text>'\n    },\n    nodeRoles: {\n      description: 'Returns the roles the node is running as',\n      params: [],\n      type: 'Vec<NodeRole>'\n    },\n    syncState: {\n      description: 'Returns the state of the syncing of the node',\n      params: [],\n      type: 'SyncState'\n    },\n    addLogFilter: {\n      description: 'Adds the supplied directives to the current log filter',\n      params: [{\n        name: 'directives',\n        type: 'Text'\n      }],\n      type: 'Null'\n    },\n    resetLogFilter: {\n      description: 'Resets the log filter to Substrate defaults',\n      params: [],\n      type: 'Null'\n    }\n  },\n  types: {\n    AccountInfo: 'AccountInfoWithTripleRefCount',\n    AccountInfoWithRefCountU8: {\n      nonce: 'Index',\n      refcount: 'u8',\n      data: 'AccountData'\n    },\n    AccountInfoWithRefCount: {\n      _fallback: 'AccountInfoWithRefCountU8',\n      nonce: 'Index',\n      refcount: 'RefCount',\n      data: 'AccountData'\n    },\n    AccountInfoWithDualRefCount: {\n      _fallback: 'AccountInfoWithRefCount',\n      nonce: 'Index',\n      consumers: 'RefCount',\n      providers: 'RefCount',\n      data: 'AccountData'\n    },\n    // original naming\n    AccountInfoWithProviders: 'AccountInfoWithDualRefCount',\n    AccountInfoWithTripleRefCount: {\n      _fallback: 'AccountInfoWithDualRefCount',\n      nonce: 'Index',\n      consumers: 'RefCount',\n      providers: 'RefCount',\n      sufficients: 'RefCount',\n      data: 'AccountData'\n    },\n    ApplyExtrinsicResult: 'Result<DispatchOutcome, TransactionValidityError>',\n    ArithmeticError: {\n      _enum: ['Underflow', 'Overflow', 'DivisionByZero']\n    },\n    BlockLength: {\n      max: 'PerDispatchClassU32'\n    },\n    BlockWeights: {\n      baseBlock: 'Weight',\n      maxBlock: 'Weight',\n      perClass: 'PerDispatchClassWeightsPerClass'\n    },\n    ChainProperties: 'GenericChainProperties',\n    ChainType: {\n      _enum: {\n        Development: 'Null',\n        Local: 'Null',\n        Live: 'Null',\n        Custom: 'Text'\n      }\n    },\n    ConsumedWeight: 'PerDispatchClassWeight',\n    DigestOf: 'Digest',\n    DispatchClass: {\n      _enum: ['Normal', 'Operational', 'Mandatory']\n    },\n    DispatchError: {\n      _enum: {\n        Other: 'Null',\n        CannotLookup: 'Null',\n        BadOrigin: 'Null',\n        Module: 'DispatchErrorModule',\n        ConsumerRemaining: 'Null',\n        NoProviders: 'Null',\n        Token: 'TokenError',\n        Arithmetic: 'ArithmeticError'\n      }\n    },\n    DispatchErrorModule: {\n      index: 'u8',\n      error: 'u8'\n    },\n    DispatchErrorModuleU8a: {\n      index: 'u8',\n      error: '[u8; 4]'\n    },\n    DispatchErrorTo198: {\n      module: 'Option<u8>',\n      error: 'u8'\n    },\n    DispatchInfo: {\n      weight: 'Weight',\n      class: 'DispatchClass',\n      paysFee: 'Pays'\n    },\n    DispatchInfoTo190: {\n      weight: 'Weight',\n      class: 'DispatchClass'\n    },\n    DispatchInfoTo244: {\n      weight: 'Weight',\n      class: 'DispatchClass',\n      paysFee: 'bool'\n    },\n    DispatchOutcome: 'Result<(), DispatchError>',\n    DispatchResult: 'Result<(), DispatchError>',\n    DispatchResultOf: 'DispatchResult',\n    DispatchResultTo198: 'Result<(), Text>',\n    Event: 'GenericEvent',\n    EventId: '[u8; 2]',\n    EventIndex: 'u32',\n    EventRecord: {\n      phase: 'Phase',\n      event: 'Event',\n      topics: 'Vec<Hash>'\n    },\n    Health: {\n      peers: 'u64',\n      isSyncing: 'bool',\n      shouldHavePeers: 'bool'\n    },\n    InvalidTransaction: {\n      _enum: {\n        Call: 'Null',\n        Payment: 'Null',\n        Future: 'Null',\n        Stale: 'Null',\n        BadProof: 'Null',\n        AncientBirthBlock: 'Null',\n        ExhaustsResources: 'Null',\n        Custom: 'u8',\n        BadMandatory: 'Null',\n        MandatoryDispatch: 'Null'\n      }\n    },\n    Key: 'Bytes',\n    LastRuntimeUpgradeInfo: {\n      specVersion: 'Compact<u32>',\n      specName: 'Text'\n    },\n    NetworkState: {\n      peerId: 'Text',\n      listenedAddresses: 'Vec<Text>',\n      externalAddresses: 'Vec<Text>',\n      connectedPeers: 'HashMap<Text, Peer>',\n      notConnectedPeers: 'HashMap<Text, NotConnectedPeer>',\n      averageDownloadPerSec: 'u64',\n      averageUploadPerSec: 'u64',\n      peerset: 'NetworkStatePeerset'\n    },\n    NetworkStatePeerset: {\n      messageQueue: 'u64',\n      nodes: 'HashMap<Text, NetworkStatePeersetInfo>'\n    },\n    NetworkStatePeersetInfo: {\n      connected: 'bool',\n      reputation: 'i32'\n    },\n    NodeRole: {\n      _enum: {\n        Full: 'Null',\n        LightClient: 'Null',\n        Authority: 'Null',\n        UnknownRole: 'u8'\n      }\n    },\n    NotConnectedPeer: {\n      knownAddresses: 'Vec<Text>',\n      latestPingTime: 'Option<PeerPing>',\n      versionString: 'Option<Text>'\n    },\n    Peer: {\n      enabled: 'bool',\n      endpoint: 'PeerEndpoint',\n      knownAddresses: 'Vec<Text>',\n      latestPingTime: 'PeerPing',\n      open: 'bool',\n      versionString: 'Text'\n    },\n    PeerEndpoint: {\n      listening: 'PeerEndpointAddr'\n    },\n    PeerEndpointAddr: {\n      _alias: {\n        localAddr: 'local_addr',\n        sendBackAddr: 'send_back_addr'\n      },\n      localAddr: 'Text',\n      sendBackAddr: 'Text'\n    },\n    PeerPing: {\n      nanos: 'u64',\n      secs: 'u64'\n    },\n    PeerInfo: {\n      peerId: 'Text',\n      roles: 'Text',\n      protocolVersion: 'u32',\n      bestHash: 'Hash',\n      bestNumber: 'BlockNumber'\n    },\n    PerDispatchClassU32: {\n      normal: 'u32',\n      operational: 'u32',\n      mandatory: 'u32'\n    },\n    PerDispatchClassWeight: {\n      normal: 'Weight',\n      operational: 'Weight',\n      mandatory: 'Weight'\n    },\n    PerDispatchClassWeightsPerClass: {\n      normal: 'WeightPerClass',\n      operational: 'WeightPerClass',\n      mandatory: 'WeightPerClass'\n    },\n    Phase: {\n      _enum: {\n        ApplyExtrinsic: 'u32',\n        Finalization: 'Null',\n        Initialization: 'Null'\n      }\n    },\n    RawOrigin: {\n      _enum: {\n        Root: 'Null',\n        Signed: 'AccountId',\n        None: 'Null'\n      }\n    },\n    RefCount: 'u32',\n    RefCountTo259: 'u8',\n    SyncState: {\n      startingBlock: 'BlockNumber',\n      currentBlock: 'BlockNumber',\n      highestBlock: 'Option<BlockNumber>'\n    },\n    SystemOrigin: 'RawOrigin',\n    TokenError: {\n      _enum: ['NoFunds', 'WouldDie', 'BelowMinimum', 'CannotCreate', 'UnknownAsset', 'Frozen', // these are dropped, but still in older versions\n      // (if this adjusts, will need to take a re-look)\n      'Underflow', 'Overflow']\n    },\n    TransactionValidityError: {\n      _enum: {\n        Invalid: 'InvalidTransaction',\n        Unknown: 'UnknownTransaction'\n      }\n    },\n    UnknownTransaction: {\n      _enum: {\n        CannotLookup: 'Null',\n        NoUnsignedValidator: 'Null',\n        Custom: 'u8'\n      }\n    },\n    WeightPerClass: {\n      baseExtrinsic: 'Weight',\n      maxExtrinsic: 'Option<Weight>',\n      maxTotal: 'Option<Weight>',\n      reserved: 'Option<Weight>'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Bounty: {\n      proposer: 'AccountId',\n      value: 'Balance',\n      fee: 'Balance',\n      curatorDeposit: 'Balance',\n      bond: 'Balance',\n      status: 'BountyStatus'\n    },\n    BountyIndex: 'u32',\n    BountyStatus: {\n      _enum: {\n        Proposed: 'Null',\n        Approved: 'Null',\n        Funded: 'Null',\n        CuratorProposed: 'BountyStatusCuratorProposed',\n        Active: 'BountyStatusActive',\n        PendingPayout: 'BountyStatusPendingPayout'\n      }\n    },\n    BountyStatusActive: {\n      curator: 'AccountId',\n      updateDue: 'BlockNumber'\n    },\n    BountyStatusCuratorProposed: {\n      curator: 'AccountId'\n    },\n    BountyStatusPendingPayout: {\n      curator: 'AccountId',\n      beneficiary: 'AccountId',\n      unlockAt: 'BlockNumber'\n    },\n    OpenTip: {\n      reason: 'Hash',\n      who: 'AccountId',\n      finder: 'AccountId',\n      deposit: 'Balance',\n      closes: 'Option<BlockNumber>',\n      tips: 'Vec<OpenTipTip>',\n      findersFee: 'bool'\n    },\n    OpenTipTo225: {\n      reason: 'Hash',\n      who: 'AccountId',\n      finder: 'Option<OpenTipFinderTo225>',\n      closes: 'Option<BlockNumber>',\n      tips: 'Vec<OpenTipTip>'\n    },\n    OpenTipFinderTo225: '(AccountId, Balance)',\n    OpenTipTip: '(AccountId, Balance)',\n    TreasuryProposal: {\n      proposer: 'AccountId',\n      value: 'Balance',\n      beneficiary: 'AccountId',\n      bond: 'Balance'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport default {\n  rpc: {},\n  types: {\n    Multiplier: 'Fixed128'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    ClassId: 'u32',\n    InstanceId: 'u32',\n    DepositBalance: 'Balance',\n    DepositBalanceOf: 'Balance',\n    ClassDetails: {\n      owner: 'AccountId',\n      issuer: 'AccountId',\n      admin: 'AccountId',\n      freezer: 'AccountId',\n      totalDeposit: 'DepositBalance',\n      freeHolding: 'bool',\n      instances: 'u32',\n      instanceMetadatas: 'u32',\n      attributes: 'u32',\n      isFrozen: 'bool'\n    },\n    DestroyWitness: {\n      instances: 'Compact<u32>',\n      instanceMetadatas: 'Compact<u32>',\n      attributes: 'Compact<u32>'\n    },\n    InstanceDetails: {\n      owner: 'AccountId',\n      approved: 'Option<AccountId>',\n      isFrozen: 'bool',\n      deposit: 'DepositBalance'\n    },\n    ClassMetadata: {\n      deposit: 'DepositBalance',\n      data: 'Vec<u8>',\n      isFrozen: 'bool'\n    },\n    InstanceMetadata: {\n      deposit: 'DepositBalance',\n      data: 'Vec<u8>',\n      isFrozen: 'bool'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Multisig: {\n      when: 'Timepoint',\n      deposit: 'Balance',\n      depositor: 'AccountId',\n      approvals: 'Vec<AccountId>'\n    },\n    Timepoint: {\n      height: 'BlockNumber',\n      index: 'u32'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    VestingInfo: {\n      locked: 'Balance',\n      perBlock: 'Balance',\n      startingBlock: 'BlockNumber'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    BlockAttestations: {\n      receipt: 'CandidateReceipt',\n      valid: 'Vec<AccountId>',\n      invalid: 'Vec<AccountId>'\n    },\n    IncludedBlocks: {\n      actualNumber: 'BlockNumber',\n      session: 'SessionIndex',\n      randomSeed: 'H256',\n      activeParachains: 'Vec<ParaId>',\n      paraBlocks: 'Vec<Hash>'\n    },\n    MoreAttestations: {}\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    BridgedBlockHash: 'H256',\n    BridgedBlockNumber: 'BlockNumber',\n    BridgedHeader: 'Header',\n    BridgeMessageId: '(LaneId, MessageNonce)',\n    CallOrigin: {\n      _enum: {\n        SourceRoot: 'Null',\n        TargetAccount: '(AccountId, MultiSigner, MultiSignature)',\n        SourceAccount: 'AccountId'\n      }\n    },\n    ChainId: '[u8; 4]',\n    DeliveredMessages: {\n      begin: 'MessageNonce',\n      end: 'MessageNonce',\n      // pub type DispatchResultsBitVec = BitVec<Msb0, u8>;\n      dispatchResults: 'BitVec'\n    },\n    DispatchFeePayment: {\n      _enum: ['AtSourceChain', 'AtTargetChain']\n    },\n    InboundLaneData: {\n      relayers: 'Vec<UnrewardedRelayer>',\n      lastConfirmedNonce: 'MessageNonce'\n    },\n    InboundRelayer: 'AccountId',\n    InitializationData: {\n      header: 'Header',\n      authorityList: 'AuthorityList',\n      setId: 'SetId',\n      isHalted: 'bool'\n    },\n    LaneId: '[u8; 4]',\n    MessageData: {\n      payload: 'Bytes',\n      fee: 'Balance'\n    },\n    MessagesDeliveryProofOf: {\n      bridgedHeaderHash: 'BlockHash',\n      storageProof: 'Vec<Bytes>',\n      lane: 'LaneId'\n    },\n    MessageKey: {\n      laneId: 'LaneId',\n      nonce: 'MessageNonce'\n    },\n    MessageNonce: 'u64',\n    MessagesProofOf: {\n      bridgedHeaderHash: 'BridgedBlockHash',\n      storageProof: 'Vec<Bytes>',\n      lane: 'LaneId',\n      noncesStart: 'MessageNonce',\n      noncesEnd: 'MessageNonce'\n    },\n    OperatingMode: {\n      _enum: ['Normal', 'RejectingOutboundMessages', 'Halted']\n    },\n    OutboundLaneData: {\n      oldestUnprunedNonce: 'MessageNonce',\n      latestReceivedNonce: 'MessageNonce',\n      latestGeneratedNonce: 'MessageNonce'\n    },\n    OutboundMessageFee: 'Balance',\n    OutboundPayload: {\n      specVersion: 'u32',\n      weight: 'Weight',\n      origin: 'CallOrigin',\n      dispatchFeePayment: 'DispatchFeePayment',\n      call: 'Bytes'\n    },\n    Parameter: 'Null',\n    RelayerId: 'AccountId',\n    UnrewardedRelayer: {\n      relayer: 'RelayerId',\n      messages: 'DeliveredMessages'\n    },\n    UnrewardedRelayersState: {\n      unrewardedRelayer_Entries: 'MessageNonce',\n      messagesInOldestEntry: 'MessageNonce',\n      totalMessages: 'MessageNonce'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    StatementKind: {\n      _enum: ['Regular', 'Saft']\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    FundIndex: 'u32',\n    LastContribution: {\n      _enum: {\n        Never: 'Null',\n        PreEnding: 'u32',\n        Ending: 'BlockNumber'\n      }\n    },\n    FundInfo: {\n      depositor: 'AccountId',\n      verifier: 'Option<MultiSigner>',\n      deposit: 'Balance',\n      raised: 'Balance',\n      end: 'BlockNumber',\n      cap: 'Balance',\n      lastContribution: 'LastContribution',\n      firstPeriod: 'LeasePeriod',\n      lastPeriod: 'LeasePeriod',\n      trieIndex: 'TrieIndex'\n    },\n    TrieIndex: 'u32'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nconst dmpQueue = {\n  ConfigData: {\n    maxIndividual: 'Weight'\n  },\n  MessageId: '[u8; 32]',\n  OverweightIndex: 'u64',\n  PageCounter: 'u32',\n  PageIndexData: {\n    beginUsed: 'PageCounter',\n    endUsed: 'PageCounter',\n    overweightCount: 'OverweightIndex'\n  }\n};\nexport default {\n  rpc: {},\n  types: dmpQueue\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util'; // order important in structs... :)\n\n/* eslint-disable sort-keys */\n\nconst SlotRange10 = {\n  _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'OneOne', 'OneTwo', 'OneThree', 'TwoTwo', 'TwoThree', 'ThreeThree']\n};\nconst SlotRange = {\n  _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'ZeroFour', 'ZeroFive', 'ZeroSix', 'ZeroSeven', 'OneOne', 'OneTwo', 'OneThree', 'OneFour', 'OneFive', 'OneSix', 'OneSeven', 'TwoTwo', 'TwoThree', 'TwoFour', 'TwoFive', 'TwoSix', 'TwoSeven', 'ThreeThree', 'ThreeFour', 'ThreeFive', 'ThreeSix', 'ThreeSeven', 'FourFour', 'FourFive', 'FourSix', 'FourSeven', 'FiveFive', 'FiveSix', 'FiveSeven', 'SixSix', 'SixSeven', 'SevenSeven']\n};\nconst oldTypes = {\n  Bidder: {\n    _enum: {\n      New: 'NewBidder',\n      Existing: 'ParaId'\n    }\n  },\n  IncomingParachain: {\n    _enum: {\n      Unset: 'NewBidder',\n      Fixed: 'IncomingParachainFixed',\n      Deploy: 'IncomingParachainDeploy'\n    }\n  },\n  IncomingParachainDeploy: {\n    code: 'ValidationCode',\n    initialHeadData: 'HeadData'\n  },\n  IncomingParachainFixed: {\n    codeHash: 'Hash',\n    codeSize: 'u32',\n    initialHeadData: 'HeadData'\n  },\n  NewBidder: {\n    who: 'AccountId',\n    sub: 'SubId'\n  },\n  SubId: 'u32'\n};\nexport default objectSpread({}, oldTypes, {\n  AuctionIndex: 'u32',\n  LeasePeriod: 'BlockNumber',\n  LeasePeriodOf: 'BlockNumber',\n  SlotRange10,\n  SlotRange,\n  WinningData10: `[WinningDataEntry; ${SlotRange10._enum.length}]`,\n  WinningData: `[WinningDataEntry; ${SlotRange._enum.length}]`,\n  WinningDataEntry: 'Option<(AccountId, ParaId, BalanceOf)>',\n  WinnersData10: 'Vec<WinnersDataTuple10>',\n  WinnersData: 'Vec<WinnersDataTuple>',\n  WinnersDataTuple10: '(AccountId, ParaId, BalanceOf, SlotRange10)',\n  WinnersDataTuple: '(AccountId, ParaId, BalanceOf, SlotRange)'\n});","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util';\nimport hrmpTypes from \"./hrmp.js\";\nimport slotTypes from \"./slots.js\"; // proposeParachain\n\nconst proposeTypes = {\n  ParachainProposal: {\n    proposer: 'AccountId',\n    genesisHead: 'HeadData',\n    validators: 'Vec<ValidatorId>',\n    name: 'Bytes',\n    balance: 'Balance'\n  },\n  RegisteredParachainInfo: {\n    validators: 'Vec<ValidatorId>',\n    proposer: 'AccountId'\n  }\n};\nconst cumulusTypes = {\n  ServiceQuality: {\n    _enum: ['Ordered', 'Fast']\n  }\n};\nconst disputeTypes = {\n  DisputeLocation: {\n    _enum: ['Local', 'Remote']\n  },\n  DisputeResult: {\n    _enum: ['Valid', 'Invalid']\n  },\n  DisputeState: {\n    validatorsFor: 'BitVec',\n    validatorsAgainst: 'BitVec',\n    start: 'BlockNumber',\n    concludedAt: 'Option<BlockNumber>'\n  },\n  DisputeStatement: {\n    _enum: {\n      Valid: 'ValidDisputeStatementKind',\n      Invalid: 'InvalidDisputeStatementKind'\n    }\n  },\n  DisputeStatementSet: {\n    candidateHash: 'CandidateHash',\n    session: 'SessionIndex',\n    statements: 'Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>'\n  },\n  ExplicitDisputeStatement: {\n    valid: 'bool',\n    candidateHash: 'CandidateHash',\n    session: 'SessionIndex'\n  },\n  InvalidDisputeStatementKind: {\n    _enum: ['Explicit']\n  },\n  MultiDisputeStatementSet: 'Vec<DisputeStatementSet>',\n  ValidDisputeStatementKind: {\n    _enum: {\n      Explicit: 'Null',\n      BackingSeconded: 'Hash',\n      BackingValid: 'Hash',\n      ApprovalChecking: 'Null'\n    }\n  }\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, cumulusTypes, disputeTypes, hrmpTypes, proposeTypes, slotTypes, {\n    AbridgedCandidateReceipt: {\n      parachainIndex: 'ParaId',\n      relayParent: 'Hash',\n      headData: 'HeadData',\n      collator: 'CollatorId',\n      signature: 'CollatorSignature',\n      povBlockHash: 'Hash',\n      commitments: 'CandidateCommitments'\n    },\n    AbridgedHostConfiguration: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      maxUpwardQueueCount: 'u32',\n      maxUpwardQueueSize: 'u32',\n      maxUpwardMessageSize: 'u32',\n      maxUpwardMessageNumPerCandidate: 'u32',\n      hrmpMaxMessageNumPerCandidate: 'u32',\n      validationUpgradeFrequency: 'BlockNumber',\n      validationUpgradeDelay: 'BlockNumber'\n    },\n    AbridgedHrmpChannel: {\n      maxCapacity: 'u32',\n      maxTotalSize: 'u32',\n      maxMessageSize: 'u32',\n      msgCount: 'u32',\n      totalSize: 'u32',\n      mqcHead: 'Option<Hash>'\n    },\n    AssignmentId: 'AccountId',\n    AssignmentKind: {\n      _enum: {\n        Parachain: 'Null',\n        Parathread: '(CollatorId, u32)'\n      }\n    },\n    AttestedCandidate: {\n      candidate: 'AbridgedCandidateReceipt',\n      validityVotes: 'Vec<ValidityAttestation>',\n      validatorIndices: 'BitVec'\n    },\n    AuthorityDiscoveryId: 'AccountId',\n    AvailabilityBitfield: 'BitVec',\n    AvailabilityBitfieldRecord: {\n      bitfield: 'AvailabilityBitfield',\n      submittedTt: 'BlockNumber'\n    },\n    BackedCandidate: {\n      candidate: 'CommittedCandidateReceipt',\n      validityVotes: 'Vec<ValidityAttestation>',\n      validatorIndices: 'BitVec'\n    },\n    BufferedSessionChange: {\n      applyAt: 'BlockNumber',\n      validators: 'Vec<ValidatorId>',\n      queued: 'Vec<ValidatorId>',\n      sessionIndex: 'SessionIndex'\n    },\n    CandidateCommitments: {\n      upwardMessages: 'Vec<UpwardMessage>',\n      horizontalMessages: 'Vec<OutboundHrmpMessage>',\n      newValidationCode: 'Option<ValidationCode>',\n      headData: 'HeadData',\n      processedDownwardMessages: 'u32',\n      hrmpWatermark: 'BlockNumber'\n    },\n    CandidateDescriptor: {\n      paraId: 'ParaId',\n      relayParent: 'RelayChainHash',\n      collatorId: 'CollatorId',\n      persistedValidationDataHash: 'Hash',\n      povHash: 'Hash',\n      erasureRoot: 'Hash',\n      signature: 'CollatorSignature',\n      paraHead: 'Hash',\n      validationCodeHash: 'ValidationCodeHash'\n    },\n    CandidateHash: 'Hash',\n    CandidateInfo: {\n      who: 'AccountId',\n      deposit: 'Balance'\n    },\n    CandidatePendingAvailability: {\n      core: 'CoreIndex',\n      hash: 'CandidateHash',\n      descriptor: 'CandidateDescriptor',\n      availabilityVotes: 'BitVec',\n      backers: 'BitVec',\n      relayParentNumber: 'BlockNumber',\n      backedInNumber: 'BlockNumber',\n      backingGroup: 'GroupIndex'\n    },\n    CandidateReceipt: {\n      descriptor: 'CandidateDescriptor',\n      commitmentsHash: 'Hash'\n    },\n    GlobalValidationData: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      blockNumber: 'BlockNumber'\n    },\n    CollatorId: 'H256',\n    CollatorSignature: 'Signature',\n    CommittedCandidateReceipt: {\n      descriptor: 'CandidateDescriptor',\n      commitments: 'CandidateCommitments'\n    },\n    CoreAssignment: {\n      core: 'CoreIndex',\n      paraId: 'ParaId',\n      kind: 'AssignmentKind',\n      groupIdx: 'GroupIndex'\n    },\n    CoreIndex: 'u32',\n    CoreOccupied: {\n      _enum: {\n        Parathread: 'ParathreadEntry',\n        Parachain: 'Null'\n      }\n    },\n    DoubleVoteReport: {\n      identity: 'ValidatorId',\n      first: '(Statement, ValidatorSignature)',\n      second: '(Statement, ValidatorSignature)',\n      proof: 'MembershipProof',\n      signingContext: 'SigningContext'\n    },\n    DownwardMessage: 'Bytes',\n    GroupIndex: 'u32',\n    GlobalValidationSchedule: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      blockNumber: 'BlockNumber'\n    },\n    HeadData: 'Bytes',\n    HostConfiguration: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      maxUpwardQueueCount: 'u32',\n      maxUpwardQueueSize: 'u32',\n      maxUpwardMessageSize: 'u32',\n      maxUpwardMessageNumPerCandidate: 'u32',\n      hrmpMaxMessageNumPerCandidate: 'u32',\n      validationUpgradeFrequency: 'BlockNumber',\n      validationUpgradeDelay: 'BlockNumber',\n      maxPovSize: 'u32',\n      maxDownwardMessageSize: 'u32',\n      preferredDispatchableUpwardMessagesStepWeight: 'Weight',\n      hrmpMaxParachainOutboundChannels: 'u32',\n      hrmpMaxParathreadOutboundChannels: 'u32',\n      hrmpOpenRequestTtl: 'u32',\n      hrmpSenderDeposit: 'Balance',\n      hrmpRecipientDeposit: 'Balance',\n      hrmpChannelMaxCapacity: 'u32',\n      hrmpChannelMaxTotalSize: 'u32',\n      hrmpMaxParachainInboundChannels: 'u32',\n      hrmpMaxParathreadInboundChannels: 'u32',\n      hrmpChannelMaxMessageSize: 'u32',\n      codeRetentionPeriod: 'BlockNumber',\n      parathreadCores: 'u32',\n      parathreadRetries: 'u32',\n      groupRotationFrequency: 'BlockNumber',\n      chainAvailabilityPeriod: 'BlockNumber',\n      threadAvailabilityPeriod: 'BlockNumber',\n      schedulingLookahead: 'u32',\n      maxValidatorsPerCore: 'Option<u32>',\n      maxValidators: 'Option<u32>',\n      disputePeriod: 'SessionIndex',\n      disputePostConclusionAcceptancePeriod: 'BlockNumber',\n      disputeMaxSpamSlots: 'u32',\n      disputeConclusionByTimeOutPeriod: 'BlockNumber',\n      noShowSlots: 'u32',\n      nDelayTranches: 'u32',\n      zerothDelayTrancheWidth: 'u32',\n      neededApprovals: 'u32',\n      relayVrfModuloSamples: 'u32'\n    },\n    InboundDownwardMessage: {\n      pubSentAt: 'BlockNumber',\n      pubMsg: 'DownwardMessage'\n    },\n    InboundHrmpMessage: {\n      sentAt: 'BlockNumber',\n      data: 'Bytes'\n    },\n    InboundHrmpMessages: 'Vec<InboundHrmpMessage>',\n    LocalValidationData: {\n      parentHead: 'HeadData',\n      balance: 'Balance',\n      codeUpgradeAllowed: 'Option<BlockNumber>'\n    },\n    MessageIngestionType: {\n      downwardMessages: 'Vec<InboundDownwardMessage>',\n      horizontalMessages: 'BTreeMap<ParaId, InboundHrmpMessages>'\n    },\n    MessageQueueChain: 'RelayChainHash',\n    OutboundHrmpMessage: {\n      recipient: 'u32',\n      data: 'Bytes'\n    },\n    ParachainDispatchOrigin: {\n      _enum: ['Signed', 'Parachain', 'Root']\n    },\n    ParachainInherentData: {\n      validationData: 'PersistedValidationData',\n      relayChainState: 'StorageProof',\n      downwardMessages: 'Vec<InboundDownwardMessage>',\n      horizontalMessages: 'BTreeMap<ParaId, VecInboundHrmpMessage>'\n    },\n    ParachainsInherentData: {\n      bitfields: 'SignedAvailabilityBitfields',\n      backedCandidates: 'Vec<BackedCandidate>',\n      disputes: 'MultiDisputeStatementSet',\n      parentHeader: 'Header'\n    },\n    ParaGenesisArgs: {\n      genesisHead: 'Bytes',\n      validationCode: 'Bytes',\n      parachain: 'bool'\n    },\n    ParaId: 'u32',\n    ParaInfo: {\n      manager: 'AccountId',\n      deposit: 'Balance',\n      locked: 'bool'\n    },\n    ParaLifecycle: {\n      _enum: ['Onboarding', 'Parathread', 'Parachain', 'UpgradingToParachain', 'DowngradingToParathread', 'OutgoingParathread', 'OutgoingParachain']\n    },\n    ParaPastCodeMeta: {\n      upgradeTimes: 'Vec<ReplacementTimes>',\n      lastPruned: 'Option<BlockNumber>'\n    },\n    ParaScheduling: {\n      _enum: ['Always', 'Dynamic']\n    },\n    ParathreadClaim: '(ParaId, CollatorId)',\n    ParathreadClaimQueue: {\n      queue: 'Vec<QueuedParathread>',\n      nextCoreOffset: 'u32'\n    },\n    ParathreadEntry: {\n      claim: 'ParathreadClaim',\n      retries: 'u32'\n    },\n    ParaValidatorIndex: 'u32',\n    PersistedValidationData: {\n      parentHead: 'HeadData',\n      relayParentNumber: 'RelayChainBlockNumber',\n      relayParentStorageRoot: 'Hash',\n      maxPovSize: 'u32'\n    },\n    QueuedParathread: {\n      claim: 'ParathreadEntry',\n      coreOffset: 'u32'\n    },\n    RelayBlockNumber: 'u32',\n    RelayChainBlockNumber: 'RelayBlockNumber',\n    RelayHash: 'Hash',\n    RelayChainHash: 'RelayHash',\n    Remark: '[u8; 32]',\n    ReplacementTimes: {\n      expectedAt: 'BlockNumber',\n      activatedAt: 'BlockNumber'\n    },\n    Retriable: {\n      _enum: {\n        Never: 'Null',\n        WithRetries: 'u32'\n      }\n    },\n    Scheduling: {\n      _enum: ['Always', 'Dynamic']\n    },\n    SessionInfo: {\n      validators: 'Vec<ValidatorId>',\n      discoveryKeys: 'Vec<AuthorityDiscoveryId>',\n      assignmentKeys: 'Vec<AssignmentId>',\n      validatorGroups: 'Vec<SessionInfoValidatorGroup>',\n      nCores: 'u32',\n      zerothDelayTrancheWidth: 'u32',\n      relayVrfModuloSamples: 'u32',\n      nDelayTranches: 'u32',\n      noShowSlots: 'u32',\n      neededApprovals: 'u32'\n    },\n    SessionInfoValidatorGroup: 'Vec<ParaValidatorIndex>',\n    SignedAvailabilityBitfield: {\n      payload: 'BitVec',\n      validatorIndex: 'ParaValidatorIndex',\n      signature: 'ValidatorSignature'\n    },\n    SignedAvailabilityBitfields: 'Vec<SignedAvailabilityBitfield>',\n    SigningContext: {\n      sessionIndex: 'SessionIndex',\n      parentHash: 'Hash'\n    },\n    Statement: {\n      _enum: {\n        Never: 'Null',\n        // starts at 1\n        Candidate: 'Hash',\n        Valid: 'Hash',\n        Invalid: 'Hash'\n      }\n    },\n    TransientValidationData: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      balance: 'Balance',\n      codeUpgradeAllowed: 'Option<BlockNumber>',\n      dmqLength: 'u32'\n    },\n    UpgradeGoAhead: {\n      _enum: ['Abort', 'GoAhead']\n    },\n    UpgradeRestriction: {\n      _enum: ['Present']\n    },\n    UpwardMessage: 'Bytes',\n    ValidationFunctionParams: {\n      maxCodeSize: 'u32',\n      relayChainHeight: 'RelayChainBlockNumber',\n      codeUpgradeAllowed: 'Option<RelayChainBlockNumber>'\n    },\n    ValidationCode: 'Bytes',\n    ValidationCodeHash: 'Hash',\n    ValidationData: {\n      persisted: 'PersistedValidationData',\n      transient: 'TransientValidationData'\n    },\n    ValidationDataType: {\n      validationData: 'ValidationData',\n      relayChainState: 'Vec<Bytes>'\n    },\n    ValidatorSignature: 'Signature',\n    ValidityAttestation: {\n      _enum: {\n        Never: 'Null',\n        // starts at 1\n        Implicit: 'ValidatorSignature',\n        Explicit: 'ValidatorSignature'\n      }\n    },\n    MessagingStateSnapshot: {\n      relayDispatchQueueSize: '(u32, u32)',\n      egressChannels: 'Vec<MessagingStateSnapshotEgressEntry>'\n    },\n    MessagingStateSnapshotEgressEntry: '(ParaId, AbridgedHrmpChannel)',\n    SystemInherentData: 'ParachainInherentData',\n    VecInboundHrmpMessage: 'Vec<InboundHrmpMessage>'\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  HrmpChannel: {\n    maxCapacity: 'u32',\n    maxTotalSize: 'u32',\n    maxMessageSize: 'u32',\n    msgCount: 'u32',\n    totalSize: 'u32',\n    mqcHead: 'Option<Hash>',\n    senderDeposit: 'Balance',\n    recipientDeposit: 'Balance'\n  },\n  HrmpChannelId: {\n    sender: 'u32',\n    receiver: 'u32'\n  },\n  HrmpOpenChannelRequest: {\n    confirmed: 'bool',\n    age: 'SessionIndex',\n    senderDeposit: 'Balance',\n    maxMessageSize: 'u32',\n    maxCapacity: 'u32',\n    maxTotalSize: 'u32'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Approvals: '[bool; 4]'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AccountStatus: {\n      validity: 'AccountValidity',\n      freeBalance: 'Balance',\n      lockedBalance: 'Balance',\n      signature: 'Vec<u8>',\n      vat: 'Permill'\n    },\n    AccountValidity: {\n      _enum: ['Invalid', 'Initiated', 'Pending', 'ValidLow', 'ValidHigh', 'Completed']\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v0 = {\n  FungibilityV0: 'FungibilityV1',\n  WildFungibilityV0: 'WildFungibilityV1',\n  AssetInstanceV0: {\n    _enum: {\n      Undefined: 'Null',\n      Index8: 'u8',\n      Index16: 'Compact<u16>',\n      Index32: 'Compact<u32>',\n      Index64: 'Compact<u64>',\n      Index128: 'Compact<u128>',\n      Array4: '[u8; 4]',\n      Array8: '[u8; 8]',\n      Array16: '[u8; 16]',\n      Array32: '[u8; 32]',\n      Blob: 'Vec<u8>'\n    }\n  },\n  JunctionV0: {\n    _enum: {\n      Parent: 'Null',\n      Parachain: 'Compact<u32>',\n      AccountId32: {\n        network: 'NetworkId',\n        id: 'AccountId'\n      },\n      AccountIndex64: {\n        network: 'NetworkId',\n        index: 'Compact<u64>'\n      },\n      AccountKey20: {\n        network: 'NetworkId',\n        key: '[u8; 20]'\n      },\n      PalletInstance: 'u8',\n      GeneralIndex: 'Compact<u128>',\n      GeneralKey: 'Vec<u8>',\n      OnlyChild: 'Null',\n      Plurality: {\n        id: 'BodyId',\n        part: 'BodyPart'\n      }\n    }\n  },\n  MultiAssetV0: {\n    _enum: {\n      None: 'Null',\n      All: 'Null',\n      AllFungible: 'Null',\n      AllNonFungible: 'Null',\n      AllAbstractFungible: 'Vec<u8>',\n      AllAbstractNonFungible: 'Vec<u8>',\n      AllConcreteFungible: 'MultiLocationV0',\n      AllConcreteNonFungible: 'MultiLocationV0',\n      AbstractFungible: {\n        id: 'Vec<u8>',\n        instance: 'Compact<u128>'\n      },\n      AbstractNonFungible: {\n        class: 'Vec<u8>',\n        instance: 'AssetInstanceV0'\n      },\n      ConcreteFungible: {\n        id: 'MultiLocationV0',\n        amount: 'Compact<u128>'\n      },\n      ConcreteNonFungible: {\n        class: 'MultiLocationV0',\n        instance: 'AssetInstanceV0'\n      }\n    }\n  },\n  MultiLocationV0: {\n    _enum: {\n      Here: 'Null',\n      X1: 'JunctionV0',\n      X2: '(JunctionV0, JunctionV0)',\n      X3: '(JunctionV0, JunctionV0, JunctionV0)',\n      X4: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n      X5: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n      X6: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n      X7: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n      X8: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)'\n    }\n  },\n  OriginKindV0: {\n    _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']\n  },\n  ResponseV0: {\n    _enum: {\n      Assets: 'Vec<MultiAssetV0>'\n    }\n  },\n  XcmV0: {\n    _enum: {\n      WithdrawAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      ReserveAssetDeposit: {\n        assets: 'Vec<MultiAssetV0>',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      ReceiveTeleportedAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      QueryResponse: {\n        queryId: 'Compact<u64>',\n        response: 'ResponseV0'\n      },\n      TransferAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        dest: 'MultiLocationV0'\n      },\n      TransferReserveAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        dest: 'MultiLocationV0',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      Transact: {\n        originType: 'XcmOriginKind',\n        requireWeightAtMost: 'u64',\n        call: 'DoubleEncodedCall'\n      },\n      HrmpNewChannelOpenRequest: {\n        sender: 'Compact<u32>',\n        maxMessageSize: 'Compact<u32>',\n        maxCapacity: 'Compact<u32>'\n      },\n      HrmpChannelAccepted: {\n        recipient: 'Compact<u32>'\n      },\n      HrmpChannelClosing: {\n        initiator: 'Compact<u32>',\n        sender: 'Compact<u32>',\n        recipient: 'Compact<u32>'\n      },\n      RelayedFrom: {\n        who: 'MultiLocationV0',\n        message: 'XcmV0'\n      }\n    }\n  },\n  XcmErrorV0: {\n    _enum: {\n      Undefined: 'Null',\n      Overflow: 'Null',\n      Unimplemented: 'Null',\n      UnhandledXcmVersion: 'Null',\n      UnhandledXcmMessage: 'Null',\n      UnhandledEffect: 'Null',\n      EscalationOfPrivilege: 'Null',\n      UntrustedReserveLocation: 'Null',\n      UntrustedTeleportLocation: 'Null',\n      DestinationBufferOverflow: 'Null',\n      SendFailed: 'Null',\n      CannotReachDestination: '(MultiLocation, Xcm)',\n      MultiLocationFull: 'Null',\n      FailedToDecode: 'Null',\n      BadOrigin: 'Null',\n      ExceedsMaxMessageSize: 'Null',\n      FailedToTransactAsset: 'Null',\n      WeightLimitReached: 'Weight',\n      Wildcard: 'Null',\n      TooMuchWeightRequired: 'Null',\n      NotHoldingFees: 'Null',\n      WeightNotComputable: 'Null',\n      Barrier: 'Null',\n      NotWithdrawable: 'Null',\n      LocationCannotHold: 'Null',\n      TooExpensive: 'Null',\n      AssetNotFound: 'Null',\n      RecursionLimitReached: 'Null'\n    }\n  },\n  XcmOrderV0: {\n    _enum: {\n      Null: 'Null',\n      DepositAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        dest: 'MultiLocationV0'\n      },\n      DepositReserveAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        dest: 'MultiLocationV0',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      ExchangeAsset: {\n        give: 'Vec<MultiAssetV0>',\n        receive: 'Vec<MultiAssetV0>'\n      },\n      InitiateReserveWithdraw: {\n        assets: 'Vec<MultiAssetV0>',\n        reserve: 'MultiLocationV0',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      InitiateTeleport: {\n        assets: 'Vec<MultiAsset>',\n        dest: 'MultiLocationV0',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      QueryHolding: {\n        queryId: 'Compact<u64>',\n        dest: 'MultiLocationV0',\n        assets: 'Vec<MultiAssetV0>'\n      },\n      BuyExecution: {\n        fees: 'MultiAsset',\n        weight: 'u64',\n        debt: 'u64',\n        haltOnError: 'bool',\n        xcm: 'Vec<XcmV0>'\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { mapXcmTypes } from '@polkadot/types-create';\nimport { objectSpread } from '@polkadot/util';\nimport { v0 } from \"./v0.js\";\nimport { v1 } from \"./v1.js\";\nimport { v2 } from \"./v2.js\";\nconst XCM_LATEST = 'V2';\nconst xcm = {\n  XcmOrigin: {\n    _enum: {\n      Xcm: 'MultiLocation'\n    }\n  },\n  XcmpMessageFormat: {\n    _enum: ['ConcatenatedVersionedXcm', 'ConcatenatedEncodedBlob', 'Signals']\n  },\n  XcmAssetId: {\n    _enum: {\n      Concrete: 'MultiLocation',\n      Abstract: 'Bytes'\n    }\n  },\n  InboundStatus: {\n    _enum: ['Ok', 'Suspended']\n  },\n  OutboundStatus: {\n    _enum: ['Ok', 'Suspended']\n  },\n  MultiAssets: 'Vec<MultiAsset>'\n};\nconst location = {\n  BodyId: {\n    _enum: {\n      Unit: 'Null',\n      Named: 'Vec<u8>',\n      Index: 'Compact<u32>',\n      Executive: 'Null',\n      Technical: 'Null',\n      Legislative: 'Null',\n      Judicial: 'Null'\n    }\n  },\n  BodyPart: {\n    _enum: {\n      Voice: 'Null',\n      Members: 'Compact<u32>',\n      Fraction: {\n        nom: 'Compact<u32>',\n        denom: 'Compact<u32>'\n      },\n      AtLeastProportion: {\n        nom: 'Compact<u32>',\n        denom: 'Compact<u32>'\n      },\n      MoreThanProportion: {\n        nom: 'Compact<u32>',\n        denom: 'Compact<u32>'\n      }\n    }\n  },\n  InteriorMultiLocation: 'Junctions',\n  NetworkId: {\n    _enum: {\n      Any: 'Null',\n      Named: 'Vec<u8>',\n      Polkadot: 'Null',\n      Kusama: 'Null'\n    }\n  }\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, location, xcm, v0, v1, v2, mapXcmTypes(XCM_LATEST), {\n    DoubleEncodedCall: {\n      encoded: 'Vec<u8>'\n    },\n    XcmOriginKind: {\n      _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']\n    },\n    Outcome: {\n      _enum: {\n        Complete: 'Weight',\n        Incomplete: '(Weight, XcmErrorV0)',\n        Error: 'XcmErrorV0'\n      }\n    },\n    QueryId: 'u64',\n    QueryStatus: {\n      _enum: {\n        Pending: {\n          responder: 'VersionedMultiLocation',\n          maybeNotify: 'Option<(u8, u8)>',\n          timeout: 'BlockNumber'\n        },\n        Ready: {\n          response: 'VersionedResponse',\n          at: 'BlockNumber'\n        }\n      }\n    },\n    QueueConfigData: {\n      suspendThreshold: 'u32',\n      dropThreshold: 'u32',\n      resumeThreshold: 'u32',\n      thresholdWeight: 'Weight',\n      weightRestrictDecay: 'Weight'\n    },\n    VersionMigrationStage: {\n      _enum: {\n        MigrateSupportedVersion: 'Null',\n        MigrateVersionNotifiers: 'Null',\n        NotifyCurrentTargets: 'Option<Bytes>',\n        MigrateAndNotifyOldTargets: 'Null'\n      }\n    },\n    VersionedMultiAsset: {\n      _enum: {\n        V0: 'MultiAssetV0',\n        V1: 'MultiAssetV1',\n        V2: 'MultiAssetV2'\n      }\n    },\n    VersionedMultiAssets: {\n      _enum: {\n        V0: 'Vec<MultiAssetV0>',\n        V1: 'MultiAssetsV1',\n        V2: 'MultiAssetsV2'\n      }\n    },\n    VersionedMultiLocation: {\n      _enum: {\n        V0: 'MultiLocationV0',\n        V1: 'MultiLocationV1',\n        V2: 'MultiLocationV2'\n      }\n    },\n    VersionedResponse: {\n      V0: 'ResponseV0',\n      V1: 'ResponseV1',\n      V2: 'ResponseV2'\n    },\n    VersionedXcm: {\n      _enum: {\n        V0: 'XcmV0',\n        V1: 'XcmV1',\n        V2: 'XcmV2'\n      }\n    },\n    XcmVersion: 'u32'\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v1 = {\n  AssetInstanceV1: {\n    _enum: {\n      Undefined: 'Null',\n      Index: 'Compact<u128>',\n      Array4: '[u8; 4]',\n      Array8: '[u8; 8]',\n      Array16: '[u8; 16]',\n      Array32: '[u8; 32]',\n      Blob: 'Bytes'\n    }\n  },\n  FungibilityV1: {\n    _enum: {\n      Fungible: 'Compact<u128>',\n      NonFungible: 'AssetInstanceV1'\n    }\n  },\n  JunctionV1: {\n    _enum: {\n      Parachain: 'Compact<u32>',\n      AccountId32: {\n        network: 'NetworkId',\n        id: 'AccountId'\n      },\n      AccountIndex64: {\n        network: 'NetworkId',\n        index: 'Compact<u64>'\n      },\n      AccountKey20: {\n        network: 'NetworkId',\n        key: '[u8; 20]'\n      },\n      PalletInstance: 'u8',\n      GeneralIndex: 'Compact<u128>',\n      GeneralKey: 'Vec<u8>',\n      OnlyChild: 'Null',\n      Plurality: {\n        id: 'BodyId',\n        part: 'BodyPart'\n      }\n    }\n  },\n  JunctionsV1: {\n    _enum: {\n      Here: 'Null',\n      X1: 'JunctionV1',\n      X2: '(JunctionV1, JunctionV1)',\n      X3: '(JunctionV1, JunctionV1, JunctionV1)',\n      X4: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n      X5: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n      X6: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n      X7: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n      X8: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)'\n    }\n  },\n  MultiAssetsV1: 'Vec<MultiAssetV1>',\n  MultiAssetV1: {\n    id: 'XcmAssetId',\n    fungibility: 'FungibilityV1'\n  },\n  MultiAssetFilterV1: {\n    _enum: {\n      Definite: 'MultiAssetsV1',\n      Wild: 'WildMultiAssetV1'\n    }\n  },\n  MultiLocationV1: {\n    parents: 'u8',\n    interior: 'JunctionsV1'\n  },\n  OriginKindV1: 'OriginKindV0',\n  ResponseV1: {\n    _enum: {\n      Assets: 'MultiAssetsV1'\n    }\n  },\n  WildFungibilityV1: {\n    _enum: ['Fungible', 'NonFungible']\n  },\n  WildMultiAssetV1: {\n    _enum: {\n      All: 'Null',\n      AllOf: {\n        id: 'XcmAssetId',\n        fungibility: 'WildFungibilityV1'\n      }\n    }\n  },\n  XcmV1: {\n    _enum: {\n      WithdrawAsset: {\n        assets: 'MultiAssetsV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      ReserveAssetDeposit: {\n        assets: 'MultiAssetsV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      ReceiveTeleportedAsset: {\n        assets: 'MultiAssetsV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      QueryResponse: {\n        queryId: 'Compact<u64>',\n        response: 'ResponseV1'\n      },\n      TransferAsset: {\n        assets: 'MultiAssetsV1',\n        dest: 'MultiLocationV1'\n      },\n      TransferReserveAsset: {\n        assets: 'MultiAssetsV1',\n        dest: 'MultiLocationV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      Transact: {\n        originType: 'XcmOriginKind',\n        requireWeightAtMost: 'u64',\n        call: 'DoubleEncodedCall'\n      },\n      HrmpNewChannelOpenRequest: {\n        sender: 'Compact<u32>',\n        maxMessageSize: 'Compact<u32>',\n        maxCapacity: 'Compact<u32>'\n      },\n      HrmpChannelAccepted: {\n        recipient: 'Compact<u32>'\n      },\n      HrmpChannelClosing: {\n        initiator: 'Compact<u32>',\n        sender: 'Compact<u32>',\n        recipient: 'Compact<u32>'\n      },\n      RelayedFrom: {\n        who: 'MultiLocationV1',\n        message: 'XcmV1'\n      }\n    }\n  },\n  XcmErrorV1: {\n    _enum: {\n      Undefined: 'Null',\n      Overflow: 'Null',\n      Unimplemented: 'Null',\n      UnhandledXcmVersion: 'Null',\n      UnhandledXcmMessage: 'Null',\n      UnhandledEffect: 'Null',\n      EscalationOfPrivilege: 'Null',\n      UntrustedReserveLocation: 'Null',\n      UntrustedTeleportLocation: 'Null',\n      DestinationBufferOverflow: 'Null',\n      SendFailed: 'Null',\n      CannotReachDestination: '(MultiLocationV1, XcmV1)',\n      MultiLocationFull: 'Null',\n      FailedToDecode: 'Null',\n      BadOrigin: 'Null',\n      ExceedsMaxMessageSize: 'Null',\n      FailedToTransactAsset: 'Null',\n      WeightLimitReached: 'Weight',\n      Wildcard: 'Null',\n      TooMuchWeightRequired: 'Null',\n      NotHoldingFees: 'Null',\n      WeightNotComputable: 'Null',\n      Barrier: 'Null',\n      NotWithdrawable: 'Null',\n      LocationCannotHold: 'Null',\n      TooExpensive: 'Null',\n      AssetNotFound: 'Null',\n      DestinationUnsupported: 'Null',\n      RecursionLimitReached: 'Null'\n    }\n  },\n  XcmOrderV1: {\n    _enum: {\n      Noop: 'Null',\n      DepositAsset: {\n        assets: 'MultiAssetFilterV1',\n        maxAssets: 'u32',\n        beneficiary: 'MultiLocationV1'\n      },\n      DepositReserveAsset: {\n        assets: 'MultiAssetFilterV1',\n        maxAssets: 'u32',\n        dest: 'MultiLocationV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      ExchangeAsset: {\n        give: 'MultiAssetFilterV1',\n        receive: 'MultiAssetsV1'\n      },\n      InitiateReserveWithdraw: {\n        assets: 'MultiAssetFilterV1',\n        reserve: 'MultiLocationV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      InitiateTeleport: {\n        assets: 'MultiAssetFilterV1',\n        dest: 'MultiLocationV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      QueryHolding: {\n        queryId: 'Compact<u64>',\n        dest: 'MultiLocationV1',\n        assets: 'MultiAssetFilterV1'\n      },\n      BuyExecution: {\n        fees: 'MultiAssetV1',\n        weight: 'u64',\n        debt: 'u64',\n        haltOnError: 'bool',\n        instructions: 'Vec<XcmV1>'\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v2 = {\n  AssetInstanceV2: 'AssetInstanceV1',\n  FungibilityV2: 'FungibilityV1',\n  JunctionV2: 'JunctionV1',\n  JunctionsV2: 'JunctionsV1',\n  MultiAssetsV2: 'MultiAssetsV1',\n  MultiAssetV2: 'MultiAssetV1',\n  MultiAssetFilterV2: 'MultiAssetFilterV1',\n  MultiLocationV2: 'MultiLocationV1',\n  OriginKindV2: 'OriginKindV1',\n  WildFungibilityV2: 'WildFungibilityV1',\n  ResponseV2: {\n    _enum: {\n      Null: 'Null',\n      Assets: 'MultiAssetsV2',\n      ExecutionResult: 'ResponseV2Result'\n    }\n  },\n  ResponseV2Error: '(u32, XcmErrorV2)',\n  ResponseV2Result: 'Result<Null, ResponseV2Error>',\n  WeightLimitV2: {\n    _enum: {\n      Unlimited: 'Null',\n      Limited: 'Compact<u64>'\n    }\n  },\n  InstructionV2: {\n    _enum: {\n      WithdrawAsset: 'MultiAssetsV2',\n      ReserveAssetDeposited: 'MultiAssetsV2',\n      ReceiveTeleportedAsset: 'MultiAssetsV2',\n      QueryResponse: {\n        queryId: 'Compact<u64>',\n        response: 'ResponseV2',\n        maxWeight: 'Compact<u64>'\n      },\n      TransferAsset: {\n        assets: 'MultiAssetsV2',\n        beneficiary: 'MultiLocationV2'\n      },\n      TransferReserveAsset: {\n        assets: 'MultiAssetsV2',\n        dest: 'MultiLocationV2',\n        xcm: 'XcmV2'\n      },\n      Transact: {\n        originType: 'OriginKindV2',\n        requireWeightAtMost: 'u64',\n        call: 'DoubleEncodedCall'\n      },\n      HrmpNewChannelOpenRequest: {\n        sender: 'Compact<u32>',\n        maxMessageSize: 'Compact<u32>',\n        maxCapacity: 'Compact<u32>'\n      },\n      HrmpChannelAccepted: {\n        recipient: 'Compact<u32>'\n      },\n      HrmpChannelClosing: {\n        initiator: 'Compact<u32>',\n        sender: 'Compact<u32>',\n        recipient: 'Compact<u32>'\n      },\n      ClearOrigin: 'Null',\n      DescendOrigin: 'InteriorMultiLocation',\n      ReportError: {\n        queryId: 'Compact<u64>',\n        dest: 'MultiLocationV2',\n        maxResponseWeight: 'Compact<u64>'\n      },\n      DepositAsset: {\n        assets: 'MultiAssetFilterV2',\n        maxAssets: 'u32',\n        beneficiary: 'MultiLocationV2'\n      },\n      DepositReserveAsset: {\n        assets: 'MultiAssetFilterV2',\n        maxAssets: 'u32',\n        dest: 'MultiLocationV2',\n        xcm: 'XcmV2'\n      },\n      ExchangeAsset: {\n        give: 'MultiAssetFilterV2',\n        receive: 'MultiAssetsV2'\n      },\n      InitiateReserveWithdraw: {\n        assets: 'MultiAssetFilterV2',\n        reserve: 'MultiLocationV2',\n        xcm: 'XcmV2'\n      },\n      InitiateTeleport: {\n        assets: 'MultiAssetFilterV2',\n        dest: 'MultiLocationV2',\n        xcm: 'XcmV2'\n      },\n      QueryHolding: {\n        query_id: 'Compact<u64>',\n        dest: 'MultiLocationV2',\n        assets: 'MultiAssetFilterV2',\n        maxResponse_Weight: 'Compact<u64>'\n      },\n      BuyExecution: {\n        fees: 'MultiAssetV2',\n        weightLimit: 'WeightLimitV2'\n      },\n      RefundSurplus: 'Null',\n      SetErrorHandler: 'XcmV2',\n      SetAppendix: 'XcmV2',\n      ClearError: 'Null',\n      ClaimAsset: {\n        assets: 'MultiAssetsV2',\n        ticket: 'MultiLocationV2'\n      },\n      Trap: 'u64'\n    }\n  },\n  WildMultiAssetV2: 'WildMultiAssetV1',\n  XcmV2: 'Vec<InstructionV2>',\n  XcmErrorV2: {\n    _enum: {\n      Undefined: 'Null',\n      Overflow: 'Null',\n      Unimplemented: 'Null',\n      UnhandledXcmVersion: 'Null',\n      UnhandledXcmMessage: 'Null',\n      UnhandledEffect: 'Null',\n      EscalationOfPrivilege: 'Null',\n      UntrustedReserveLocation: 'Null',\n      UntrustedTeleportLocation: 'Null',\n      DestinationBufferOverflow: 'Null',\n      MultiLocationFull: 'Null',\n      MultiLocationNotInvertible: 'Null',\n      FailedToDecode: 'Null',\n      BadOrigin: 'Null',\n      ExceedsMaxMessageSize: 'Null',\n      FailedToTransactAsset: 'Null',\n      WeightLimitReached: 'Weight',\n      Wildcard: 'Null',\n      TooMuchWeightRequired: 'Null',\n      NotHoldingFees: 'Null',\n      WeightNotComputable: 'Null',\n      Barrier: 'Null',\n      NotWithdrawable: 'Null',\n      LocationCannotHold: 'Null',\n      TooExpensive: 'Null',\n      AssetNotFound: 'Null',\n      DestinationUnsupported: 'Null',\n      RecursionLimitReached: 'Null',\n      Transport: 'Null',\n      Unroutable: 'Null',\n      UnknownWeightRequired: 'Null',\n      Trap: 'u64',\n      UnknownClaim: 'Null',\n      InvalidLocation: 'Null'\n    }\n  },\n  XcmOrderV2: 'XcmOrderV1'\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util'; // order important in structs... :)\n\n/* eslint-disable sort-keys */\n\nconst layout = {\n  ContractCryptoHasher: {\n    _enum: ['Blake2x256', 'Sha2x256', 'Keccak256']\n  },\n  ContractDiscriminant: 'u32',\n  ContractLayoutArray: {\n    offset: 'ContractLayoutKey',\n    len: 'u32',\n    cellsPerElem: 'u64',\n    layout: 'ContractStorageLayout'\n  },\n  ContractLayoutCell: {\n    key: 'ContractLayoutKey',\n    ty: 'SiLookupTypeId'\n  },\n  ContractLayoutEnum: {\n    dispatchKey: 'ContractLayoutKey',\n    variants: 'BTreeMap<ContractDiscriminant, ContractLayoutStruct>'\n  },\n  ContractLayoutHash: {\n    offset: 'ContractLayoutKey',\n    strategy: 'ContractLayoutHashingStrategy',\n    layout: 'ContractStorageLayout'\n  },\n  ContractLayoutHashingStrategy: {\n    hasher: 'ContractCryptoHasher',\n    postfix: 'Vec<u8>',\n    prefix: 'Vec<u8>'\n  },\n  ContractLayoutKey: '[u8; 32]',\n  ContractLayoutStruct: {\n    fields: 'Vec<ContractLayoutStructField>'\n  },\n  ContractLayoutStructField: {\n    layout: 'ContractStorageLayout',\n    name: 'Text'\n  },\n  ContractStorageLayout: {\n    _enum: {\n      Cell: 'ContractLayoutCell',\n      Hash: 'ContractLayoutHash',\n      Array: 'ContractLayoutArray',\n      Struct: 'ContractLayoutStruct',\n      Enum: 'ContractLayoutEnum'\n    }\n  }\n};\nconst spec = {\n  ContractConstructorSpecV0: {\n    name: 'Text',\n    selector: 'ContractSelector',\n    args: 'Vec<ContractMessageParamSpecV0>',\n    docs: 'Vec<Text>'\n  },\n  ContractConstructorSpecV1: {\n    name: 'Vec<Text>',\n    selector: 'ContractSelector',\n    args: 'Vec<ContractMessageParamSpecV0>',\n    docs: 'Vec<Text>'\n  },\n  ContractConstructorSpecV2: {\n    label: 'Text',\n    selector: 'ContractSelector',\n    args: 'Vec<ContractMessageParamSpecV2>',\n    docs: 'Vec<Text>'\n  },\n  ContractConstructorSpecV3: {\n    label: 'Text',\n    selector: 'ContractSelector',\n    payable: 'bool',\n    args: 'Vec<ContractMessageParamSpecV2>',\n    docs: 'Vec<Text>'\n  },\n  ContractContractSpecV0: {\n    constructors: 'Vec<ContractConstructorSpecV0>',\n    messages: 'Vec<ContractMessageSpecV0>',\n    events: 'Vec<ContractEventSpecV0>',\n    docs: 'Vec<Text>'\n  },\n  ContractContractSpecV1: {\n    constructors: 'Vec<ContractConstructorSpecV1>',\n    messages: 'Vec<ContractMessageSpecV1>',\n    events: 'Vec<ContractEventSpecV1>',\n    docs: 'Vec<Text>'\n  },\n  ContractContractSpecV2: {\n    constructors: 'Vec<ContractConstructorSpecV2>',\n    messages: 'Vec<ContractMessageSpecV2>',\n    events: 'Vec<ContractEventSpecV2>',\n    docs: 'Vec<Text>'\n  },\n  ContractContractSpecV3: {\n    constructors: 'Vec<ContractConstructorSpecV3>',\n    messages: 'Vec<ContractMessageSpecV2>',\n    events: 'Vec<ContractEventSpecV2>',\n    docs: 'Vec<Text>'\n  },\n  ContractDisplayName: 'SiPath',\n  ContractEventParamSpecV0: {\n    name: 'Text',\n    indexed: 'bool',\n    type: 'ContractTypeSpec',\n    docs: 'Vec<Text>'\n  },\n  ContractEventParamSpecV2: {\n    label: 'Text',\n    indexed: 'bool',\n    type: 'ContractTypeSpec',\n    docs: 'Vec<Text>'\n  },\n  ContractEventSpecV0: {\n    name: 'Text',\n    args: 'Vec<ContractEventParamSpecV0>',\n    docs: 'Vec<Text>'\n  },\n  ContractEventSpecV1: {\n    name: 'Text',\n    args: 'Vec<ContractEventParamSpecV0>',\n    docs: 'Vec<Text>'\n  },\n  ContractEventSpecV2: {\n    label: 'Text',\n    args: 'Vec<ContractEventParamSpecV2>',\n    docs: 'Vec<Text>'\n  },\n  ContractMessageParamSpecV0: {\n    name: 'Text',\n    type: 'ContractTypeSpec'\n  },\n  ContractMessageParamSpecV2: {\n    label: 'Text',\n    type: 'ContractTypeSpec'\n  },\n  ContractMessageSpecV0: {\n    name: 'Text',\n    selector: 'ContractSelector',\n    mutates: 'bool',\n    payable: 'bool',\n    args: 'Vec<ContractMessageParamSpecV0>',\n    returnType: 'Option<ContractTypeSpec>',\n    docs: 'Vec<Text>'\n  },\n  ContractMessageSpecV1: {\n    name: 'Vec<Text>',\n    selector: 'ContractSelector',\n    mutates: 'bool',\n    payable: 'bool',\n    args: 'Vec<ContractMessageParamSpecV0>',\n    returnType: 'Option<ContractTypeSpec>',\n    docs: 'Vec<Text>'\n  },\n  ContractMessageSpecV2: {\n    label: 'Text',\n    selector: 'ContractSelector',\n    mutates: 'bool',\n    payable: 'bool',\n    args: 'Vec<ContractMessageParamSpecV2>',\n    returnType: 'Option<ContractTypeSpec>',\n    docs: 'Vec<Text>'\n  },\n  ContractSelector: '[u8; 4]',\n  ContractTypeSpec: {\n    type: 'SiLookupTypeId',\n    displayName: 'ContractDisplayName'\n  }\n};\nconst ContractMetadataV0 = {\n  types: 'Vec<Si0Type>',\n  spec: 'ContractContractSpecV0'\n};\nconst ContractMetadataV1 = {\n  types: 'Vec<PortableType>',\n  spec: 'ContractContractSpecV1'\n};\nconst ContractMetadataV2 = {\n  types: 'Vec<PortableType>',\n  spec: 'ContractContractSpecV2'\n};\nconst ContractMetadataV3 = {\n  types: 'Vec<PortableType>',\n  spec: 'ContractContractSpecV3'\n};\nconst ContractProjectInfo = {\n  source: 'ContractProjectSource',\n  contract: 'ContractProjectContract'\n};\nconst latest = {\n  ContractConstructorSpecLatest: 'ContractConstructorSpecV3',\n  ContractEventSpecLatest: 'ContractEventSpecV2',\n  ContractEventParamSpecLatest: 'ContractEventParamSpecV2',\n  ContractMessageParamSpecLatest: 'ContractMessageParamSpecV2',\n  ContractMessageSpecLatest: 'ContractMessageSpecV2',\n  ContractMetadataLatest: 'ContractMetadataV3'\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, layout, spec, latest, {\n    ContractProjectInfo,\n    ContractMetadataV0,\n    ContractMetadataV1,\n    ContractMetadataV2,\n    ContractMetadataV3,\n    ContractMetadata: {\n      _enum: {\n        V0: 'ContractMetadataV0',\n        V1: 'ContractMetadataV1',\n        V2: 'ContractMetadataV2',\n        V3: 'ContractMetadataV3'\n      }\n    },\n    ContractProjectV0: objectSpread({\n      metadataVersion: 'Text'\n    }, ContractProjectInfo, ContractMetadataV0),\n    ContractProject: '(ContractProjectInfo, ContractMetadata)',\n    ContractProjectContract: {\n      _alias: {\n        docs: 'documentation'\n      },\n      name: 'Text',\n      version: 'Text',\n      authors: 'Vec<Text>',\n      description: 'Option<Text>',\n      docs: 'Option<Text>',\n      repository: 'Option<Text>',\n      homepage: 'Option<Text>',\n      license: 'Option<Text>'\n    },\n    ContractProjectSource: {\n      _alias: {\n        wasmHash: 'hash'\n      },\n      wasmHash: '[u8; 32]',\n      language: 'Text',\n      compiler: 'Text',\n      wasm: 'Raw'\n    }\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n// As per frontier\nimport { objectSpread } from '@polkadot/util';\nimport { rpc } from \"./rpc.js\";\nconst V0 = {\n  BlockV0: {\n    header: 'EthHeader',\n    transactions: 'Vec<TransactionV0>',\n    ommers: 'Vec<EthHeader>'\n  },\n  LegacyTransaction: {\n    nonce: 'U256',\n    gasPrice: 'U256',\n    gasLimit: 'U256',\n    action: 'EthTransactionAction',\n    value: 'U256',\n    input: 'Bytes',\n    signature: 'EthTransactionSignature'\n  },\n  TransactionV0: 'LegacyTransaction'\n};\nconst V1 = {\n  BlockV1: {\n    header: 'EthHeader',\n    transactions: 'Vec<TransactionV1>',\n    ommers: 'Vec<EthHeader>'\n  },\n  EIP2930Transaction: {\n    chainId: 'u64',\n    nonce: 'U256',\n    gasPrice: 'U256',\n    gasLimit: 'U256',\n    action: 'EthTransactionAction',\n    value: 'U256',\n    input: 'Bytes',\n    accessList: 'EthAccessList',\n    oddYParity: 'bool',\n    r: 'H256',\n    s: 'H256'\n  },\n  TransactionV1: {\n    _enum: {\n      Legacy: 'LegacyTransaction',\n      EIP2930: 'EIP2930Transaction'\n    }\n  }\n};\nconst V2 = {\n  BlockV2: {\n    header: 'EthHeader',\n    transactions: 'Vec<TransactionV2>',\n    ommers: 'Vec<EthHeader>'\n  },\n  EIP1559Transaction: {\n    chainId: 'u64',\n    nonce: 'U256',\n    maxPriorityFeePerGas: 'U256',\n    maxFeePerGas: 'U256',\n    gasLimit: 'U256',\n    action: 'EthTransactionAction',\n    value: 'U256',\n    input: 'Bytes',\n    accessList: 'EthAccessList',\n    oddYParity: 'bool',\n    r: 'H256',\n    s: 'H256'\n  },\n  TransactionV2: {\n    _enum: {\n      Legacy: 'LegacyTransaction',\n      EIP2930: 'EIP2930Transaction',\n      EIP1559: 'EIP1559Transaction'\n    }\n  }\n};\nconst types = objectSpread({}, V0, V1, V2, {\n  EthereumAccountId: 'GenericEthereumAccountId',\n  EthereumAddress: 'GenericEthereumAccountId',\n  EthereumLookupSource: 'GenericEthereumLookupSource',\n  EthereumSignature: '[u8; 65]',\n  EthAccessListItem: {\n    address: 'EthAddress',\n    slots: 'Vec<H256>'\n  },\n  EthAccessList: 'Vec<EthAccessListItem>',\n  EthAccount: {\n    address: 'EthAddress',\n    balance: 'U256',\n    nonce: 'U256',\n    codeHash: 'H256',\n    storageHash: 'H256',\n    accountProof: 'Vec<Bytes>',\n    storageProof: 'Vec<EthStorageProof>'\n  },\n  EthAddress: 'H160',\n  EthBlock: {\n    header: 'EthHeader',\n    transactions: 'Vec<EthTransaction>',\n    ommers: 'Vec<EthHeader>'\n  },\n  EthHeader: {\n    parentHash: 'H256',\n    ommersHash: 'H256',\n    beneficiary: 'EthAddress',\n    stateRoot: 'H256',\n    transactionsRoot: 'H256',\n    receiptsRoot: 'H256',\n    logsBloom: 'EthBloom',\n    difficulty: 'U256',\n    number: 'U256',\n    gasLimit: 'U256',\n    gasUsed: 'U256',\n    timestamp: 'u64',\n    extraData: 'Bytes',\n    mixMash: 'H256',\n    nonce: 'H64'\n  },\n  EthRichBlock: {\n    _alias: {\n      blockHash: 'hash',\n      blockSize: 'size'\n    },\n    blockHash: 'Option<H256>',\n    parentHash: 'H256',\n    sha3Uncles: 'H256',\n    author: 'EthAddress',\n    miner: 'EthAddress',\n    stateRoot: 'H256',\n    transactionsRoot: 'H256',\n    receiptsRoot: 'H256',\n    number: 'Option<U256>',\n    gasUsed: 'U256',\n    gasLimit: 'U256',\n    extraData: 'Bytes',\n    logsBloom: 'EthBloom',\n    timestamp: 'U256',\n    difficulty: 'U256',\n    totalDifficulty: 'Option<U256>',\n    sealFields: 'Vec<Bytes>',\n    uncles: 'Vec<H256>',\n    transactions: 'Vec<EthTransaction>',\n    blockSize: 'Option<U256>'\n  },\n  EthBloom: 'H2048',\n  EthCallRequest: {\n    from: 'Option<EthAddress>',\n    to: 'Option<EthAddress>',\n    gasPrice: 'Option<U256>',\n    gas: 'Option<U256>',\n    value: 'Option<U256>',\n    data: 'Option<Bytes>',\n    nonce: 'Option<U256>'\n  },\n  EthFilter: {\n    fromBlock: 'Option<BlockNumber>',\n    toBlock: 'Option<BlockNumber>',\n    blockHash: 'Option<H256>',\n    address: 'Option<EthFilterAddress>',\n    topics: 'Option<EthFilterTopic>'\n  },\n  EthFilterAddress: {\n    _enum: {\n      Single: 'EthAddress',\n      Multiple: 'Vec<EthAddress>',\n      Null: 'Null'\n    }\n  },\n  EthFilterChanges: {\n    _enum: {\n      Logs: 'Vec<EthLog>',\n      Hashes: 'Vec<H256>',\n      Empty: 'Null'\n    }\n  },\n  EthFilterTopic: {\n    _enum: {\n      Single: 'EthFilterTopicInner',\n      Multiple: 'Vec<EthFilterTopicInner>',\n      Null: 'Null'\n    }\n  },\n  EthFilterTopicEntry: 'Option<H256>',\n  EthFilterTopicInner: {\n    _enum: {\n      Single: 'EthFilterTopicEntry',\n      Multiple: 'Vec<EthFilterTopicEntry>',\n      Null: 'Null'\n    }\n  },\n  EthRichHeader: {\n    _alias: {\n      blockHash: 'hash',\n      blockSize: 'size'\n    },\n    blockHash: 'Option<H256>',\n    parentHash: 'H256',\n    sha3Uncles: 'H256',\n    author: 'EthAddress',\n    miner: 'EthAddress',\n    stateRoot: 'H256',\n    transactionsRoot: 'H256',\n    receiptsRoot: 'H256',\n    number: 'Option<U256>',\n    gasUsed: 'U256',\n    gasLimit: 'U256',\n    extraData: 'Bytes',\n    logsBloom: 'EthBloom',\n    timestamp: 'U256',\n    difficulty: 'U256',\n    sealFields: 'Vec<Bytes>',\n    blockSize: 'Option<U256>'\n  },\n  EthLog: {\n    address: 'EthAddress',\n    topics: 'Vec<H256>',\n    data: 'Bytes',\n    blockHash: 'Option<H256>',\n    blockNumber: 'Option<U256>',\n    transactionHash: 'Option<H256>',\n    transactionIndex: 'Option<U256>',\n    logIndex: 'Option<U256>',\n    transactionLogIndex: 'Option<U256>',\n    removed: 'bool'\n  },\n  EthReceipt: {\n    transactionHash: 'Option<H256>',\n    transactionIndex: 'Option<U256>',\n    blockHash: 'Option<H256>',\n    from: 'Option<EthAddress>',\n    to: 'Option<EthAddress>',\n    blockNumber: 'Option<U256>',\n    cumulativeGasUsed: 'U256',\n    gasUsed: 'Option<U256>',\n    contractAddress: 'Option<EthAddress>',\n    logs: 'Vec<EthLog>',\n    root: 'Option<H256>',\n    logsBloom: 'EthBloom',\n    statusCode: 'Option<U64>'\n  },\n  EthStorageProof: {\n    key: 'U256',\n    value: 'U256',\n    proof: 'Vec<Bytes>'\n  },\n  EthSubKind: {\n    _enum: ['newHeads', 'logs', 'newPendingTransactions', 'syncing']\n  },\n  EthSubParams: {\n    _enum: {\n      None: 'Null',\n      Logs: 'EthFilter'\n    }\n  },\n  EthSubResult: {\n    _enum: {\n      Header: 'EthRichHeader',\n      Log: 'EthLog',\n      TransactionHash: 'H256',\n      SyncState: 'EthSyncStatus'\n    }\n  },\n  EthSyncInfo: {\n    startingBlock: 'U256',\n    currentBlock: 'U256',\n    highestBlock: 'U256',\n    warpChunksAmount: 'Option<U256>',\n    warpChunksProcessed: 'Option<U256>'\n  },\n  EthSyncStatus: {\n    _enum: {\n      Info: 'EthSyncInfo',\n      None: 'Null'\n    }\n  },\n  EthTransaction: 'LegacyTransaction',\n  EthTransactionSignature: {\n    v: 'u64',\n    r: 'H256',\n    s: 'H256'\n  },\n  EthTransactionAction: {\n    _enum: {\n      Call: 'H160',\n      Create: 'Null'\n    }\n  },\n  EthTransactionCondition: {\n    _enum: {\n      block: 'u64',\n      time: 'u64'\n    }\n  },\n  EthTransactionRequest: {\n    from: 'Option<EthAddress>',\n    to: 'Option<EthAddress>',\n    gasPrice: 'Option<U256>',\n    gas: 'Option<U256>',\n    value: 'Option<U256>',\n    data: 'Option<Bytes>',\n    nonce: 'Option<U256>'\n  },\n  EthTransactionStatus: {\n    transactionHash: 'H256',\n    transactionIndex: 'u32',\n    from: 'EthAddress',\n    to: 'Option<EthAddress>',\n    contractAddress: 'Option<EthAddress>',\n    logs: 'Vec<EthLog>',\n    logsBloom: 'EthBloom'\n  },\n  EthWork: {\n    powHash: 'H256',\n    seedHash: 'H256',\n    target: 'H256',\n    number: 'Option<u64>'\n  }\n});\nexport default {\n  rpc,\n  types\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// As per frontier\nimport { objectSpread } from '@polkadot/util'; // We use aliasSection here to override since these are in another namespace\n\nconst netRpc = {\n  listening: {\n    aliasSection: 'net',\n    description: 'Returns true if client is actively listening for network connections. Otherwise false.',\n    params: [],\n    type: 'bool'\n  },\n  peerCount: {\n    aliasSection: 'net',\n    description: 'Returns number of peers connected to node.',\n    params: [],\n    type: 'String'\n  },\n  version: {\n    aliasSection: 'net',\n    description: 'Returns protocol version.',\n    params: [],\n    type: 'String'\n  }\n};\nconst web3Rpc = {\n  clientVersion: {\n    aliasSection: 'web3',\n    description: 'Returns current client version.',\n    params: [],\n    type: 'String'\n  },\n  sha3: {\n    aliasSection: 'web3',\n    description: 'Returns sha3 of the given data',\n    params: [{\n      name: 'data',\n      type: 'Bytes'\n    }],\n    type: 'H256'\n  }\n};\nexport const rpc = objectSpread({}, netRpc, web3Rpc, {\n  accounts: {\n    description: 'Returns accounts list.',\n    params: [],\n    type: 'Vec<H160>'\n  },\n  blockNumber: {\n    description: 'Returns the blockNumber',\n    params: [],\n    type: 'U256'\n  },\n  call: {\n    description: 'Call contract, returning the output data.',\n    params: [{\n      name: 'request',\n      type: 'EthCallRequest'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'Bytes'\n  },\n  chainId: {\n    description: 'Returns the chain ID used for transaction signing at the current best block. None is returned if not available.',\n    params: [],\n    type: 'U64'\n  },\n  coinbase: {\n    description: 'Returns block author.',\n    params: [],\n    type: 'H160'\n  },\n  estimateGas: {\n    description: 'Estimate gas needed for execution of given contract.',\n    params: [{\n      name: 'request',\n      type: 'EthCallRequest'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'U256'\n  },\n  gasPrice: {\n    description: 'Returns current gas price.',\n    params: [],\n    type: 'U256'\n  },\n  getBalance: {\n    description: 'Returns balance of the given account.',\n    params: [{\n      name: 'address',\n      type: 'H160'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'U256'\n  },\n  getBlockByHash: {\n    description: 'Returns block with given hash.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }, {\n      name: 'full',\n      type: 'bool'\n    }],\n    type: 'Option<EthRichBlock>'\n  },\n  getBlockByNumber: {\n    description: 'Returns block with given number.',\n    params: [{\n      name: 'block',\n      type: 'BlockNumber'\n    }, {\n      name: 'full',\n      type: 'bool'\n    }],\n    type: 'Option<EthRichBlock>'\n  },\n  getBlockTransactionCountByHash: {\n    description: 'Returns the number of transactions in a block with given hash.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }],\n    type: 'U256'\n  },\n  getBlockTransactionCountByNumber: {\n    description: 'Returns the number of transactions in a block with given block number.',\n    params: [{\n      name: 'block',\n      type: 'BlockNumber'\n    }],\n    type: 'U256'\n  },\n  getCode: {\n    description: 'Returns the code at given address at given time (block number).',\n    params: [{\n      name: 'address',\n      type: 'H160'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'Bytes'\n  },\n  getFilterChanges: {\n    description: 'Returns filter changes since last poll.',\n    params: [{\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'EthFilterChanges'\n  },\n  getFilterLogs: {\n    description: 'Returns all logs matching given filter (in a range \\'from\\' - \\'to\\').',\n    params: [{\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'Vec<EthLog>'\n  },\n  getLogs: {\n    description: 'Returns logs matching given filter object.',\n    params: [{\n      name: 'filter',\n      type: 'EthFilter'\n    }],\n    type: 'Vec<EthLog>'\n  },\n  getProof: {\n    description: 'Returns proof for account and storage.',\n    params: [{\n      name: 'address',\n      type: 'H160'\n    }, {\n      name: 'storageKeys',\n      type: 'Vec<H256>'\n    }, {\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'EthAccount'\n  },\n  getStorageAt: {\n    description: 'Returns content of the storage at given address.',\n    params: [{\n      name: 'address',\n      type: 'H160'\n    }, {\n      name: 'index',\n      type: 'U256'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'H256'\n  },\n  getTransactionByBlockHashAndIndex: {\n    description: 'Returns transaction at given block hash and index.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }, {\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'EthTransaction'\n  },\n  getTransactionByBlockNumberAndIndex: {\n    description: 'Returns transaction by given block number and index.',\n    params: [{\n      name: 'number',\n      type: 'BlockNumber'\n    }, {\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'EthTransaction'\n  },\n  getTransactionByHash: {\n    description: 'Get transaction by its hash.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }],\n    type: 'EthTransaction'\n  },\n  getTransactionCount: {\n    description: 'Returns the number of transactions sent from given address at given time (block number).',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'U256'\n  },\n  getTransactionReceipt: {\n    description: 'Returns transaction receipt by transaction hash.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }],\n    type: 'EthReceipt'\n  },\n  getUncleByBlockHashAndIndex: {\n    description: 'Returns an uncles at given block and index.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }, {\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'EthRichBlock'\n  },\n  getUncleByBlockNumberAndIndex: {\n    description: 'Returns an uncles at given block and index.',\n    params: [{\n      name: 'number',\n      type: 'BlockNumber'\n    }, {\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'EthRichBlock'\n  },\n  getUncleCountByBlockHash: {\n    description: 'Returns the number of uncles in a block with given hash.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }],\n    type: 'U256'\n  },\n  getUncleCountByBlockNumber: {\n    description: 'Returns the number of uncles in a block with given block number.',\n    params: [{\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'U256'\n  },\n  getWork: {\n    description: 'Returns the hash of the current block, the seedHash, and the boundary condition to be met.',\n    params: [],\n    type: 'EthWork'\n  },\n  hashrate: {\n    description: 'Returns the number of hashes per second that the node is mining with.',\n    params: [],\n    type: 'U256'\n  },\n  mining: {\n    description: 'Returns true if client is actively mining new blocks.',\n    params: [],\n    type: 'bool'\n  },\n  newBlockFilter: {\n    description: 'Returns id of new block filter.',\n    params: [],\n    type: 'U256'\n  },\n  newFilter: {\n    description: 'Returns id of new filter.',\n    params: [{\n      name: 'filter',\n      type: 'EthFilter'\n    }],\n    type: 'U256'\n  },\n  newPendingTransactionFilter: {\n    description: 'Returns id of new block filter.',\n    params: [],\n    type: 'U256'\n  },\n  protocolVersion: {\n    description: 'Returns protocol version encoded as a string (quotes are necessary).',\n    params: [],\n    type: 'u64'\n  },\n  sendRawTransaction: {\n    description: 'Sends signed transaction, returning its hash.',\n    params: [{\n      name: 'bytes',\n      type: 'Bytes'\n    }],\n    type: 'H256'\n  },\n  sendTransaction: {\n    description: 'Sends transaction; will block waiting for signer to return the transaction hash',\n    params: [{\n      name: 'tx',\n      type: 'EthTransactionRequest'\n    }],\n    type: 'H256'\n  },\n  submitHashrate: {\n    description: 'Used for submitting mining hashrate.',\n    params: [{\n      name: 'index',\n      type: 'U256'\n    }, {\n      name: 'hash',\n      type: 'H256'\n    }],\n    type: 'bool'\n  },\n  submitWork: {\n    description: 'Used for submitting a proof-of-work solution.',\n    params: [{\n      name: 'nonce',\n      type: 'H64'\n    }, {\n      name: 'headerHash',\n      type: 'H256'\n    }, {\n      name: 'mixDigest',\n      type: 'H256'\n    }],\n    type: 'bool'\n  },\n  subscribe: {\n    description: 'Subscribe to Eth subscription.',\n    params: [{\n      name: 'kind',\n      type: 'EthSubKind'\n    }, {\n      isOptional: true,\n      name: 'params',\n      type: 'EthSubParams'\n    }],\n    pubsub: ['subscription', 'subscribe', 'unsubscribe'],\n    type: 'Null'\n  },\n  syncing: {\n    description: 'Returns an object with data about the sync status or false.',\n    params: [],\n    type: 'EthSyncStatus'\n  },\n  uninstallFilter: {\n    description: 'Uninstalls filter.',\n    params: [{\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'bool'\n  }\n});","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    methods: {\n      description: 'Retrieves the list of RPC methods that are exposed by the node',\n      params: [],\n      type: 'RpcMethods'\n    }\n  },\n  types: {\n    RpcMethods: {\n      version: 'u32',\n      methods: 'Vec<Text>'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    hasKey: {\n      description: 'Returns true if the keystore has private keys for the given public key and key type.',\n      params: [{\n        name: 'publicKey',\n        type: 'Bytes'\n      }, {\n        name: 'keyType',\n        type: 'Text'\n      }],\n      type: 'bool'\n    },\n    hasSessionKeys: {\n      description: 'Returns true if the keystore has private keys for the given session public keys.',\n      params: [{\n        name: 'sessionKeys',\n        type: 'Bytes'\n      }],\n      type: 'bool'\n    },\n    removeExtrinsic: {\n      description: 'Remove given extrinsic from the pool and temporarily ban it to prevent reimporting',\n      params: [{\n        name: 'bytesOrHash',\n        type: 'Vec<ExtrinsicOrHash>'\n      }],\n      type: 'Vec<Hash>'\n    },\n    insertKey: {\n      description: 'Insert a key into the keystore.',\n      params: [{\n        name: 'keyType',\n        type: 'Text'\n      }, {\n        name: 'suri',\n        type: 'Text'\n      }, {\n        name: 'publicKey',\n        type: 'Bytes'\n      }],\n      type: 'Bytes'\n    },\n    rotateKeys: {\n      description: 'Generate new session keys and returns the corresponding public keys',\n      params: [],\n      type: 'Bytes'\n    },\n    pendingExtrinsics: {\n      description: 'Returns all pending extrinsics, potentially grouped by sender',\n      params: [],\n      type: 'Vec<Extrinsic>'\n    },\n    submitExtrinsic: {\n      isSigned: true,\n      description: 'Submit a fully formatted extrinsic for block inclusion',\n      params: [{\n        name: 'extrinsic',\n        type: 'Extrinsic'\n      }],\n      type: 'Hash'\n    },\n    submitAndWatchExtrinsic: {\n      description: 'Submit and subscribe to watch an extrinsic until unsubscribed',\n      isSigned: true,\n      params: [{\n        name: 'extrinsic',\n        type: 'Extrinsic'\n      }],\n      pubsub: ['extrinsicUpdate', 'submitAndWatchExtrinsic', 'unwatchExtrinsic'],\n      type: 'ExtrinsicStatus'\n    }\n  },\n  types: {\n    ExtrinsicOrHash: {\n      _enum: {\n        Hash: 'Hash',\n        Extrinsic: 'Bytes'\n      }\n    },\n    ExtrinsicStatus: {\n      _enum: {\n        Future: 'Null',\n        Ready: 'Null',\n        Broadcast: 'Vec<Text>',\n        InBlock: 'Hash',\n        Retracted: 'Hash',\n        FinalityTimeout: 'Hash',\n        Finalized: 'Hash',\n        Usurped: 'Hash',\n        Dropped: 'Null',\n        Invalid: 'Null'\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    getHeader: {\n      alias: ['chain_getHead'],\n      description: 'Retrieves the header for a specific block',\n      params: [{\n        name: 'hash',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Header'\n    },\n    getBlock: {\n      description: 'Get header and body of a relay chain block',\n      params: [{\n        name: 'hash',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'SignedBlock'\n    },\n    getBlockHash: {\n      description: 'Get the block hash for a specific block',\n      params: [{\n        name: 'blockNumber',\n        type: 'BlockNumber',\n        isOptional: true\n      }],\n      type: 'BlockHash'\n    },\n    getFinalizedHead: {\n      alias: ['chain_getFinalisedHead'],\n      description: 'Get hash of the last finalized block in the canon chain',\n      params: [],\n      type: 'BlockHash'\n    },\n    subscribeNewHeads: {\n      alias: ['chain_unsubscribeNewHeads', 'subscribe_newHead', 'unsubscribe_newHead'],\n      description: 'Retrieves the best header via subscription',\n      params: [],\n      // NOTE These still has the aliassed version, compatible with 1.x\n      pubsub: ['newHead', 'subscribeNewHead', 'unsubscribeNewHead'],\n      type: 'Header'\n    },\n    subscribeFinalizedHeads: {\n      alias: ['chain_subscribeFinalisedHeads', 'chain_unsubscribeFinalisedHeads'],\n      description: 'Retrieves the best finalized header via subscription',\n      params: [],\n      pubsub: ['finalizedHead', 'subscribeFinalizedHeads', 'unsubscribeFinalizedHeads'],\n      type: 'Header'\n    },\n    subscribeAllHeads: {\n      description: 'Retrieves the newest header via subscription',\n      params: [],\n      pubsub: ['allHead', 'subscribeAllHeads', 'unsubscribeAllHeads'],\n      type: 'Header'\n    }\n  },\n  types: {\n    BlockHash: 'Hash'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    getKeys: {\n      description: 'Returns the keys with prefix from a child storage, leave empty to get all the keys',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'prefix',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getKeysPaged: {\n      alias: ['childstate_getKeysPagedAt'],\n      description: 'Returns the keys with prefix from a child storage with pagination support',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'prefix',\n        type: 'StorageKey'\n      }, {\n        name: 'count',\n        type: 'u32'\n      }, {\n        name: 'startKey',\n        type: 'StorageKey',\n        isOptional: true\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getStorage: {\n      description: 'Returns a child storage entry at a specific block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<StorageData>'\n    },\n    getStorageEntries: {\n      description: 'Returns child storage entries for multiple keys at a specific block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<Option<StorageData>>'\n    },\n    getStorageHash: {\n      description: 'Returns the hash of a child storage entry at a block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<Hash>'\n    },\n    getStorageSize: {\n      description: 'Returns the size of a child storage entry at a block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<u64>'\n    }\n  },\n  types: {\n    // StorageKey extends Bytes\n    PrefixedStorageKey: 'StorageKey'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    localStorageSet: {\n      description: 'Set offchain local storage under given key and prefix',\n      params: [{\n        name: 'kind',\n        type: 'StorageKind'\n      }, {\n        name: 'key',\n        type: 'Bytes'\n      }, {\n        name: 'value',\n        type: 'Bytes'\n      }],\n      type: 'Null'\n    },\n    localStorageGet: {\n      description: 'Get offchain local storage under given key and prefix',\n      params: [{\n        name: 'kind',\n        type: 'StorageKind'\n      }, {\n        name: 'key',\n        type: 'Bytes'\n      }],\n      type: 'Option<Bytes>'\n    }\n  },\n  types: {\n    StorageKind: {\n      _enum: {\n        PERSISTENT: 1,\n        LOCAL: 2\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nconst QUERY_PARAMS = [{\n  name: 'extrinsic',\n  type: 'Bytes'\n}, {\n  name: 'at',\n  type: 'BlockHash',\n  isHistoric: true,\n  isOptional: true\n}];\nexport default {\n  rpc: {\n    queryInfo: {\n      description: 'Retrieves the fee information for an encoded extrinsic',\n      params: QUERY_PARAMS,\n      type: 'RuntimeDispatchInfo'\n    },\n    queryFeeDetails: {\n      description: 'Query the detailed fee of a given encoded extrinsic',\n      params: QUERY_PARAMS,\n      type: 'FeeDetails'\n    }\n  },\n  types: {\n    FeeDetails: {\n      inclusionFee: 'Option<InclusionFee>' // skipped in serde\n      // tip: 'Balance'\n\n    },\n    InclusionFee: {\n      baseFee: 'Balance',\n      lenFee: 'Balance',\n      adjustedWeightFee: 'Balance'\n    },\n    RuntimeDispatchInfo: {\n      weight: 'Weight',\n      class: 'DispatchClass',\n      partialFee: 'Balance'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    call: {\n      alias: ['state_callAt'],\n      description: 'Perform a call to a builtin on the chain',\n      params: [{\n        name: 'method',\n        type: 'Text'\n      }, {\n        name: 'data',\n        type: 'Bytes'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Bytes'\n    },\n    getKeys: {\n      description: 'Retrieves the keys with a certain prefix',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getPairs: {\n      description: 'Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)',\n      params: [{\n        name: 'prefix',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<KeyValue>'\n    },\n    getKeysPaged: {\n      alias: ['state_getKeysPagedAt'],\n      description: 'Returns the keys with prefix with pagination support.',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'count',\n        type: 'u32'\n      }, {\n        name: 'startKey',\n        type: 'StorageKey',\n        isOptional: true\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getStorage: {\n      alias: ['state_getStorageAt'],\n      description: 'Retrieves the storage for a key',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'StorageData'\n    },\n    getStorageHash: {\n      alias: ['state_getStorageHashAt'],\n      description: 'Retrieves the storage hash',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Hash'\n    },\n    getStorageSize: {\n      alias: ['state_getStorageSizeAt'],\n      description: 'Retrieves the storage size',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'u64'\n    },\n    getChildKeys: {\n      description: 'Retrieves the keys with prefix of a specific child storage',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getChildStorage: {\n      description: 'Retrieves the child storage for a key',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'StorageData'\n    },\n    getChildStorageHash: {\n      description: 'Retrieves the child storage hash',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Hash'\n    },\n    getChildStorageSize: {\n      description: 'Retrieves the child storage size',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'u64'\n    },\n    getMetadata: {\n      description: 'Returns the runtime metadata',\n      params: [{\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Metadata'\n    },\n    getRuntimeVersion: {\n      alias: ['chain_getRuntimeVersion'],\n      description: 'Get the runtime version',\n      params: [{\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'RuntimeVersion'\n    },\n    queryStorage: {\n      description: 'Query historical storage entries (by key) starting from a start block',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'fromBlock',\n        type: 'Hash'\n      }, {\n        name: 'toBlock',\n        type: 'BlockHash',\n        isOptional: true\n      }],\n      type: 'Vec<StorageChangeSet>'\n    },\n    queryStorageAt: {\n      description: 'Query storage entries (by key) starting at block hash given as the second parameter',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageChangeSet>'\n    },\n    getChildReadProof: {\n      description: 'Returns proof of storage for child key entries at a specific block state.',\n      params: [{\n        name: 'childStorageKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'ReadProof'\n    },\n    getReadProof: {\n      description: 'Returns proof of storage entries at a specific block state',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'ReadProof'\n    },\n    subscribeRuntimeVersion: {\n      alias: ['chain_subscribeRuntimeVersion', 'chain_unsubscribeRuntimeVersion'],\n      description: 'Retrieves the runtime version via subscription',\n      params: [],\n      pubsub: ['runtimeVersion', 'subscribeRuntimeVersion', 'unsubscribeRuntimeVersion'],\n      type: 'RuntimeVersion'\n    },\n    subscribeStorage: {\n      description: 'Subscribes to storage changes for the provided keys',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>',\n        isOptional: true\n      }],\n      pubsub: ['storage', 'subscribeStorage', 'unsubscribeStorage'],\n      type: 'StorageChangeSet'\n    },\n    traceBlock: {\n      description: 'Provides a way to trace the re-execution of a single block',\n      params: [{\n        name: 'block',\n        type: 'Hash'\n      }, {\n        name: 'targets',\n        type: 'Option<Text>'\n      }, {\n        name: 'storageKeys',\n        type: 'Option<Text>'\n      }, {\n        name: 'methods',\n        type: 'Option<Text>'\n      }],\n      type: 'TraceBlockResponse'\n    },\n    trieMigrationStatus: {\n      description: 'Check current migration state',\n      params: [{\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'MigrationStatusResult'\n    }\n  },\n  types: {\n    ApiId: '[u8; 8]',\n    BlockTrace: {\n      blockHash: 'Text',\n      parentHash: 'Text',\n      tracingTargets: 'Text',\n      storageKeys: 'Text',\n      spans: 'Vec<BlockTraceSpan>',\n      events: 'Vec<BlockTraceEvent>'\n    },\n    BlockTraceEvent: {\n      target: 'Text',\n      data: 'BlockTraceEventData',\n      parentId: 'Option<u64>'\n    },\n    BlockTraceEventData: {\n      stringValues: 'HashMap<Text, Text>'\n    },\n    BlockTraceSpan: {\n      id: 'u64',\n      parentId: 'Option<u64>',\n      name: 'Text',\n      target: 'Text',\n      wasm: 'bool'\n    },\n    KeyValueOption: '(StorageKey, Option<StorageData>)',\n    MigrationStatusResult: {\n      topRemainingToMigrate: 'u64',\n      childRemainingToMigrate: 'u64'\n    },\n    ReadProof: {\n      at: 'Hash',\n      proof: 'Vec<Bytes>'\n    },\n    RuntimeVersionApi: '(ApiId, u32)',\n    RuntimeVersion: {\n      specName: 'Text',\n      implName: 'Text',\n      authoringVersion: 'u32',\n      specVersion: 'u32',\n      implVersion: 'u32',\n      apis: 'Vec<RuntimeVersionApi>',\n      transactionVersion: 'u32'\n    },\n    RuntimeVersionPartial: {\n      specName: 'Text',\n      specVersion: 'u32'\n    },\n    SpecVersion: 'u32',\n    StorageChangeSet: {\n      block: 'Hash',\n      changes: 'Vec<KeyValueOption>'\n    },\n    TraceBlockResponse: {\n      _enum: {\n        TraceError: 'TraceError',\n        BlockTrace: 'BlockTrace'\n      }\n    },\n    TraceError: {\n      error: 'Text'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util';\nconst numberTypes = {\n  Fixed64: 'Int<64, Fixed64>',\n  FixedI64: 'Int<64, FixedI64>',\n  FixedU64: 'UInt<64, FixedU64>',\n  Fixed128: 'Int<128, Fixed128>',\n  FixedI128: 'Int<128, FixedI128>',\n  FixedU128: 'UInt<128, FixedU128>',\n  I32F32: 'Int<64, I32F32>',\n  U32F32: 'UInt<64, U32F32>',\n  PerU16: 'UInt<16, PerU16>',\n  Perbill: 'UInt<32, Perbill>',\n  Percent: 'UInt<8, Percent>',\n  Permill: 'UInt<32, Permill>',\n  Perquintill: 'UInt<64, Perquintill>'\n}; // Since we don't have insight into the origin specification, we can only define what we know about\n// in a pure Substrate/Polkadot implementation, any other custom origins won't be handled at all\n\nexport const knownOrigins = {\n  //\n  // (1) Defaults from Substrate\n  //\n  Council: 'CollectiveOrigin',\n  System: 'SystemOrigin',\n  TechnicalCommittee: 'CollectiveOrigin',\n  //\n  // (2) Defaults from Polkadot\n  //\n  Xcm: 'XcmOrigin',\n  XcmPallet: 'XcmOrigin',\n  //\n  // (3) Defaults from Acala\n  //\n  Authority: 'AuthorityOrigin',\n  GeneralCouncil: 'CollectiveOrigin'\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, numberTypes, {\n    AccountId: 'AccountId32',\n    AccountId20: 'GenericEthereumAccountId',\n    AccountId32: 'GenericAccountId',\n    AccountIdOf: 'AccountId',\n    AccountIndex: 'GenericAccountIndex',\n    Address: 'MultiAddress',\n    AssetId: 'u32',\n    Balance: 'UInt<128, Balance>',\n    BalanceOf: 'Balance',\n    Block: 'GenericBlock',\n    BlockNumber: 'u32',\n    BlockNumberFor: 'BlockNumber',\n    BlockNumberOf: 'BlockNumber',\n    Call: 'GenericCall',\n    CallHash: 'Hash',\n    CallHashOf: 'CallHash',\n    ChangesTrieConfiguration: {\n      digestInterval: 'u32',\n      digestLevels: 'u32'\n    },\n    ChangesTrieSignal: {\n      _enum: {\n        NewConfiguration: 'Option<ChangesTrieConfiguration>'\n      }\n    },\n    ConsensusEngineId: 'GenericConsensusEngineId',\n    CodecHash: 'Hash',\n    CrateVersion: {\n      major: 'u16',\n      minor: 'u8',\n      patch: 'u8'\n    },\n    Digest: {\n      logs: 'Vec<DigestItem>'\n    },\n    DigestItem: {\n      _enum: {\n        Other: 'Bytes',\n        // 0\n        AuthoritiesChange: 'Vec<AuthorityId>',\n        // 1\n        ChangesTrieRoot: 'Hash',\n        // 2\n        SealV0: 'SealV0',\n        // 3\n        Consensus: 'Consensus',\n        // 4\n        Seal: 'Seal',\n        // 5\n        PreRuntime: 'PreRuntime',\n        // 6\n        ChangesTrieSignal: 'ChangesTrieSignal',\n        // 7\n        RuntimeEnvironmentUpdated: 'Null' // 8\n\n      }\n    },\n    ExtrinsicsWeight: {\n      normal: 'Weight',\n      operational: 'Weight'\n    },\n    H32: '[u8; 4; H32]',\n    H64: '[u8; 8; H64]',\n    H128: '[u8; 16; H128]',\n    H160: '[u8; 20; H160]',\n    H256: '[u8; 32; H256]',\n    H512: '[u8; 64; H512]',\n    H1024: '[u8; 128; H1024]',\n    H2048: '[u8; 256; H2048]',\n    Hash: 'H256',\n    Header: {\n      parentHash: 'Hash',\n      number: 'Compact<BlockNumber>',\n      stateRoot: 'Hash',\n      extrinsicsRoot: 'Hash',\n      digest: 'Digest'\n    },\n    HeaderPartial: {\n      parentHash: 'Hash',\n      // since we only parse JSON with this, having non-compact works\n      number: 'BlockNumber'\n    },\n    IndicesLookupSource: 'GenericLookupSource',\n    Index: 'u32',\n    Justification: '(ConsensusEngineId, EncodedJustification)',\n    EncodedJustification: 'Bytes',\n    Justifications: 'Vec<Justification>',\n    KeyValue: '(StorageKey, StorageData)',\n    KeyTypeId: 'u32',\n    LockIdentifier: '[u8; 8]',\n    LookupSource: 'MultiAddress',\n    LookupTarget: 'AccountId',\n    ModuleId: 'LockIdentifier',\n    MultiAddress: 'GenericMultiAddress',\n    MultiSigner: {\n      _enum: {\n        Ed25519: '[u8; 32]',\n        Sr25519: '[u8; 32]',\n        Ecdsa: '[u8; 33]'\n      }\n    },\n    Moment: 'UInt<64, Moment>',\n    OpaqueCall: 'Bytes',\n    Origin: 'DoNotConstruct<Origin>',\n    OriginCaller: {\n      _enum: {\n        // this should be dynamically built from the actual modules, based on index\n        System: 'SystemOrigin'\n      }\n    },\n    PalletId: 'LockIdentifier',\n    PalletsOrigin: 'OriginCaller',\n    PalletVersion: {\n      major: 'u16',\n      minor: 'u8',\n      patch: 'u8'\n    },\n    Pays: {\n      _enum: ['Yes', 'No']\n    },\n    Phantom: 'Null',\n    PhantomData: 'Null',\n    Releases: {\n      _enum: ['V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10']\n    },\n    RuntimeDbWeight: {\n      read: 'Weight',\n      write: 'Weight'\n    },\n    SignedBlock: 'SignedBlockWithJustifications',\n    SignedBlockWithJustification: {\n      block: 'Block',\n      justification: 'Option<EncodedJustification>'\n    },\n    SignedBlockWithJustifications: {\n      block: 'Block',\n      justifications: 'Option<Justifications>'\n    },\n    Slot: 'u64',\n    StorageData: 'Bytes',\n    StorageProof: {\n      trieNodes: 'Vec<Bytes>'\n    },\n    TransactionPriority: 'u64',\n    TransactionInfo: {\n      _alias: {\n        dataSize: 'size'\n      },\n      chunkRoot: 'H256',\n      contentHash: 'H256',\n      dataSize: 'u32',\n      blockChunks: 'u32'\n    },\n    TransactionStorageProof: {\n      chunk: 'Vec<u8>',\n      proof: 'Vec<Vec<u8>>'\n    },\n    ValidatorId: 'AccountId',\n    ValidatorIdOf: 'ValidatorId',\n    Weight: 'u64',\n    WeightMultiplier: 'Fixed64',\n    // digest\n    PreRuntime: '(ConsensusEngineId, Bytes)',\n    SealV0: '(u64, Signature)',\n    Seal: '(ConsensusEngineId, Bytes)',\n    Consensus: '(ConsensusEngineId, Bytes)'\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// migrate a storage hasher type\n// see https://github.com/paritytech/substrate/pull/4462\n\n/** @internal */\nfunction createStorageHasher(registry, hasher) {\n  // Blake2_128_Concat has been added at index 2, so we increment all the\n  // indexes greater than 2\n  if (hasher.toNumber() >= 2) {\n    return registry.createTypeUnsafe('StorageHasherV10', [hasher.toNumber() + 1]);\n  }\n\n  return registry.createTypeUnsafe('StorageHasherV10', [hasher]);\n}\n/** @internal */\n\n\nfunction createStorageType(registry, entryType) {\n  if (entryType.isMap) {\n    return [{ ...entryType.asMap,\n      hasher: createStorageHasher(registry, entryType.asMap.hasher)\n    }, 1];\n  }\n\n  if (entryType.isDoubleMap) {\n    return [{ ...entryType.asDoubleMap,\n      hasher: createStorageHasher(registry, entryType.asDoubleMap.hasher),\n      key2Hasher: createStorageHasher(registry, entryType.asDoubleMap.key2Hasher)\n    }, 2];\n  }\n\n  return [entryType.asPlain, 0];\n}\n/** @internal */\n\n\nfunction convertModule(registry, mod) {\n  const storage = mod.storage.unwrapOr(null);\n  return registry.createTypeUnsafe('ModuleMetadataV10', [{ ...mod,\n    storage: storage ? { ...storage,\n      items: storage.items.map(item => ({ ...item,\n        type: registry.createTypeUnsafe('StorageEntryTypeV10', createStorageType(registry, item.type))\n      }))\n    } : null\n  }]);\n}\n/** @internal */\n\n\nexport function toV10(registry, {\n  modules\n}) {\n  return registry.createTypeUnsafe('MetadataV10', [{\n    modules: modules.map(mod => convertModule(registry, mod))\n  }]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nexport function toV11(registry, {\n  modules\n}) {\n  return registry.createTypeUnsafe('MetadataV11', [{\n    // This is new in V11, pass V0 here - something non-existing, telling the API to use\n    // the fallback for this information (on-chain detection)\n    extrinsic: {\n      signedExtensions: [],\n      version: 0\n    },\n    modules\n  }]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @internal\n **/\nexport function toV12(registry, {\n  extrinsic,\n  modules\n}) {\n  return registry.createTypeUnsafe('MetadataV12', [{\n    extrinsic,\n    modules: modules.map(mod => registry.createTypeUnsafe('ModuleMetadataV12', [{ ...mod,\n      index: 255\n    }]))\n  }]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @internal\n **/\nexport function toV13(registry, metadata) {\n  return registry.createTypeUnsafe('MetadataV13', [metadata]);\n}","// Copyright 2017-2022 @polkadot/types-known authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util'; // type overrides for modules (where duplication between modules exist)\n\nconst typesAlias = {\n  assets: {\n    Approval: 'AssetApproval',\n    ApprovalKey: 'AssetApprovalKey',\n    Balance: 'TAssetBalance',\n    DestroyWitness: 'AssetDestroyWitness'\n  },\n  babe: {\n    EquivocationProof: 'BabeEquivocationProof'\n  },\n  balances: {\n    Status: 'BalanceStatus'\n  },\n  beefy: {\n    AuthorityId: 'BeefyId'\n  },\n  contracts: {\n    StorageKey: 'ContractStorageKey'\n  },\n  electionProviderMultiPhase: {\n    Phase: 'ElectionPhase'\n  },\n  ethereum: {\n    Block: 'EthBlock',\n    Header: 'EthHeader',\n    Receipt: 'EthReceipt',\n    Transaction: 'EthTransaction',\n    TransactionStatus: 'EthTransactionStatus'\n  },\n  evm: {\n    Account: 'EvmAccount',\n    Log: 'EvmLog',\n    Vicinity: 'EvmVicinity'\n  },\n  grandpa: {\n    Equivocation: 'GrandpaEquivocation',\n    EquivocationProof: 'GrandpaEquivocationProof'\n  },\n  identity: {\n    Judgement: 'IdentityJudgement'\n  },\n  inclusion: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  paraDisputes: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  paraInclusion: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  paraScheduler: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  paraShared: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parachains: {\n    Id: 'ParaId'\n  },\n  parasDisputes: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parasInclusion: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parasScheduler: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parasShared: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  proposeParachain: {\n    Proposal: 'ParachainProposal'\n  },\n  proxy: {\n    Announcement: 'ProxyAnnouncement'\n  },\n  scheduler: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  shared: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  society: {\n    Judgement: 'SocietyJudgement',\n    Vote: 'SocietyVote'\n  },\n  staking: {\n    Compact: 'CompactAssignments'\n  },\n  treasury: {\n    Proposal: 'TreasuryProposal'\n  },\n  xcm: {\n    AssetId: 'XcmAssetId'\n  },\n  xcmPallet: {\n    AssetId: 'XcmAssetId'\n  }\n};\n/**\n * @description Get types for specific modules (metadata override)\n */\n\nexport function getAliasTypes({\n  knownTypes\n}, section) {\n  var _knownTypes$typesAlia;\n\n  return objectSpread({}, typesAlias[section], (_knownTypes$typesAlia = knownTypes.typesAlias) === null || _knownTypes$typesAlia === void 0 ? void 0 : _knownTypes$typesAlia[section]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\nimport { getAliasTypes } from \"../../interfaces/alias.js\";\nimport { knownOrigins } from \"../../interfaces/runtime/definitions.js\";\nconst BOXES = [['<', '>'], ['<', ','], [',', '>'], ['(', ')'], ['(', ','], [',', ','], [',', ')']];\n/**\n * Creates a compatible type mapping\n * @internal\n **/\n\nfunction compatType(specs, _type) {\n  const type = _type.toString();\n\n  const index = specs.findIndex(({\n    def\n  }) => def.HistoricMetaCompat === type);\n\n  if (index !== -1) {\n    return index;\n  }\n\n  return specs.push({\n    def: {\n      HistoricMetaCompat: type\n    }\n  }) - 1;\n}\n\nfunction compatTypes(specs, ...types) {\n  for (let i = 0; i < types.length; i++) {\n    compatType(specs, types[i]);\n  }\n}\n\nfunction makeTupleType(specs, entries) {\n  return specs.push({\n    def: {\n      Tuple: entries\n    }\n  }) - 1;\n}\n\nfunction makeVariantType(modName, variantType, specs, variants) {\n  return specs.push({\n    def: {\n      Variant: {\n        variants\n      }\n    },\n    path: [`pallet_${modName.toString()}`, 'pallet', variantType]\n  }) - 1;\n}\n/**\n * @internal\n * generate & register the OriginCaller type\n **/\n\n\nfunction registerOriginCaller(registry, modules, metaVersion) {\n  registry.register({\n    OriginCaller: {\n      _enum: modules.map((mod, index) => [mod.name.toString(), metaVersion >= 12 ? mod.index.toNumber() : index]).sort((a, b) => a[1] - b[1]).reduce((result, [name, index]) => {\n        for (let i = Object.keys(result).length; i < index; i++) {\n          result[`Empty${i}`] = 'Null';\n        }\n\n        result[name] = knownOrigins[name] || 'Null';\n        return result;\n      }, {})\n    }\n  });\n}\n/**\n * Find and apply the correct type override\n * @internal\n **/\n\n\nfunction setTypeOverride(sectionTypes, types) {\n  types.forEach(type => {\n    const override = Object.keys(sectionTypes).find(aliased => type.eq(aliased));\n\n    if (override) {\n      type.setOverride(sectionTypes[override]);\n    } else {\n      // FIXME: NOT happy with this approach, but gets over the initial hump cased by (Vec<Announcement>,BalanceOf)\n      const orig = type.toString();\n      const alias = Object.entries(sectionTypes).reduce((result, [src, dst]) => BOXES.reduce((result, [a, z]) => result.replace(`${a}${src}${z}`, `${a}${dst}${z}`), result), orig);\n\n      if (orig !== alias) {\n        type.setOverride(alias);\n      }\n    }\n  });\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n **/\n\n\nfunction convertCalls(specs, registry, modName, calls, sectionTypes) {\n  const variants = calls.map(({\n    args,\n    docs,\n    name\n  }, index) => {\n    setTypeOverride(sectionTypes, args.map(({\n      type\n    }) => type));\n    return registry.createTypeUnsafe('SiVariant', [{\n      docs,\n      fields: args.map(({\n        name,\n        type\n      }) => registry.createTypeUnsafe('SiField', [{\n        name,\n        type: compatType(specs, type)\n      }])),\n      index,\n      name\n    }]);\n  });\n  return registry.createTypeUnsafe('PalletCallMetadataV14', [{\n    type: makeVariantType(modName, 'Call', specs, variants)\n  }]);\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n */\n\n\nfunction convertConstants(specs, registry, constants, sectionTypes) {\n  return constants.map(({\n    docs,\n    name,\n    type,\n    value\n  }) => {\n    setTypeOverride(sectionTypes, [type]);\n    return registry.createTypeUnsafe('PalletConstantMetadataV14', [{\n      docs,\n      name,\n      type: compatType(specs, type),\n      value\n    }]);\n  });\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction convertErrors(specs, registry, modName, errors, _sectionTypes) {\n  const variants = errors.map(({\n    docs,\n    name\n  }, index) => registry.createTypeUnsafe('SiVariant', [{\n    docs,\n    fields: [],\n    index,\n    name\n  }]));\n  return registry.createTypeUnsafe('PalletErrorMetadataV14', [{\n    type: makeVariantType(modName, 'Error', specs, variants)\n  }]);\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n **/\n\n\nfunction convertEvents(specs, registry, modName, events, sectionTypes) {\n  const variants = events.map(({\n    args,\n    docs,\n    name\n  }, index) => {\n    setTypeOverride(sectionTypes, args);\n    return registry.createTypeUnsafe('SiVariant', [{\n      docs,\n      fields: args.map(t => registry.createTypeUnsafe('SiField', [{\n        type: compatType(specs, t)\n      }])),\n      index,\n      name\n    }]);\n  });\n  return registry.createTypeUnsafe('PalletEventMetadataV14', [{\n    type: makeVariantType(modName, 'Event', specs, variants)\n  }]);\n}\n\nfunction createMapEntry(specs, registry, sectionTypes, {\n  hashers,\n  keys,\n  value\n}) {\n  setTypeOverride(sectionTypes, [value, ...(Array.isArray(keys) ? keys : [keys])]);\n  return registry.createTypeUnsafe('StorageEntryTypeV14', [{\n    Map: {\n      hashers,\n      key: hashers.length === 1 ? compatType(specs, keys[0]) : makeTupleType(specs, keys.map(t => compatType(specs, t))),\n      value: compatType(specs, value)\n    }\n  }]);\n}\n/**\n * Apply module-specific storage type overrides (always part of toV14)\n * @internal\n **/\n\n\nfunction convertStorage(specs, registry, {\n  items,\n  prefix\n}, sectionTypes) {\n  return registry.createTypeUnsafe('PalletStorageMetadataV14', [{\n    items: items.map(({\n      docs,\n      fallback,\n      modifier,\n      name,\n      type\n    }) => {\n      let entryType;\n\n      if (type.isPlain) {\n        const plain = type.asPlain;\n        setTypeOverride(sectionTypes, [plain]);\n        entryType = registry.createTypeUnsafe('StorageEntryTypeV14', [{\n          Plain: compatType(specs, plain)\n        }]);\n      } else if (type.isMap) {\n        const map = type.asMap;\n        entryType = createMapEntry(specs, registry, sectionTypes, {\n          hashers: [map.hasher],\n          keys: [map.key],\n          value: map.value\n        });\n      } else if (type.isDoubleMap) {\n        const dm = type.asDoubleMap;\n        entryType = createMapEntry(specs, registry, sectionTypes, {\n          hashers: [dm.hasher, dm.key2Hasher],\n          keys: [dm.key1, dm.key2],\n          value: dm.value\n        });\n      } else {\n        const nm = type.asNMap;\n        entryType = createMapEntry(specs, registry, sectionTypes, {\n          hashers: nm.hashers,\n          keys: nm.keyVec,\n          value: nm.value\n        });\n      }\n\n      return registry.createTypeUnsafe('StorageEntryMetadataV14', [{\n        docs,\n        fallback,\n        modifier,\n        name,\n        type: entryType\n      }]);\n    }),\n    prefix\n  }]);\n}\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction convertExtrinsic(registry, {\n  signedExtensions,\n  version\n}) {\n  return registry.createTypeUnsafe('ExtrinsicMetadataV14', [{\n    signedExtensions: signedExtensions.map(identifier => ({\n      identifier,\n      type: 0 // we don't map the fields at all\n\n    })),\n    type: 0,\n    // Map to extrinsic like in v14?\n    version\n  }]);\n}\n/** @internal */\n\n\nfunction createPallet(specs, registry, mod, {\n  calls,\n  constants,\n  errors,\n  events,\n  storage\n}) {\n  const sectionTypes = getAliasTypes(registry, stringCamelCase(mod.name));\n  return registry.createTypeUnsafe('PalletMetadataV14', [{\n    calls: calls && convertCalls(specs, registry, mod.name, calls, sectionTypes),\n    constants: convertConstants(specs, registry, constants, sectionTypes),\n    errors: errors && convertErrors(specs, registry, mod.name, errors, sectionTypes),\n    events: events && convertEvents(specs, registry, mod.name, events, sectionTypes),\n    index: mod.index,\n    name: mod.name,\n    storage: storage && convertStorage(specs, registry, storage, sectionTypes)\n  }]);\n}\n/**\n * Convert the Metadata to v14\n * @internal\n **/\n\n\nexport function toV14(registry, v13, metaVersion) {\n  const specs = []; // position 0 always has Null, additionally add internal defaults\n\n  compatTypes(specs, 'Null', 'u8', 'u16', 'u32', 'u64');\n  registerOriginCaller(registry, v13.modules, metaVersion);\n  const extrinsic = convertExtrinsic(registry, v13.extrinsic);\n  const pallets = v13.modules.map(mod => createPallet(specs, registry, mod, {\n    calls: mod.calls.unwrapOr(null),\n    constants: mod.constants,\n    errors: mod.errors.length ? mod.errors : null,\n    events: mod.events.unwrapOr(null),\n    storage: mod.storage.unwrapOr(null)\n  }));\n  return registry.createTypeUnsafe('MetadataV14', [{\n    extrinsic,\n    lookup: {\n      types: specs.map((type, id) => registry.createTypeUnsafe('PortableType', [{\n        id,\n        type\n      }]))\n    },\n    pallets\n  }]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Convert the Metadata (which is an alias) to latest\n * @internal\n **/\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function toLatest(registry, v14, _metaVersion) {\n  return v14;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { U32 } from '@polkadot/types-codec';\nimport { assert } from '@polkadot/util';\nexport const MAGIC_NUMBER = 0x6174656d; // `meta`, reversed for Little Endian encoding\n\nexport class MagicNumber extends U32 {\n  constructor(registry, value) {\n    super(registry, value);\n\n    if (!this.isEmpty) {\n      assert(this.eq(MAGIC_NUMBER), () => `MagicNumber mismatch: expected ${registry.createTypeUnsafe('u32', [MAGIC_NUMBER]).toHex()}, found ${this.toHex()}`);\n    }\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction trimDocs(docs) {\n  const strings = docs.map(d => d.toString().trim());\n  const firstEmpty = strings.findIndex(d => !d.length);\n  return firstEmpty === -1 ? strings : strings.slice(0, firstEmpty);\n}\n/** @internal */\n\n\nexport function toCallsOnly(registry, {\n  extrinsic,\n  lookup,\n  pallets\n}) {\n  return registry.createTypeUnsafe('MetadataLatest', [{\n    extrinsic,\n    lookup: {\n      types: lookup.types.map(({\n        id,\n        type\n      }) => registry.createTypeUnsafe('PortableType', [{\n        id,\n        type: { ...type,\n          docs: trimDocs(type.docs)\n        }\n      }]))\n    },\n    pallets: pallets.map(({\n      calls,\n      index,\n      name\n    }) => ({\n      calls: registry.createTypeUnsafe('Option<PalletCallMetadataLatest>', [calls.unwrapOr(null)]),\n      index,\n      name\n    }))\n  }]).toJSON();\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nexport function flattenUniq(list, result = []) {\n  for (let i = 0; i < list.length; i++) {\n    const entry = list[i];\n\n    if (Array.isArray(entry)) {\n      flattenUniq(entry, result);\n    } else {\n      result.push(entry);\n    }\n  }\n\n  return [...new Set(result)];\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { getTypeDef, TypeDefInfo } from '@polkadot/types-create';\n\nfunction extractSubSingle(_, {\n  sub\n}) {\n  const {\n    lookupName,\n    type\n  } = sub;\n  return extractTypes([lookupName || type]);\n}\n\nfunction extractSubArray(_, {\n  sub\n}) {\n  return extractTypes(sub.map(({\n    lookupName,\n    type\n  }) => lookupName || type));\n}\n\nfunction unhandled(type, {\n  info\n}) {\n  throw new Error(`Unhandled: Unable to create and validate type from ${type} (info=${TypeDefInfo[info]})`);\n} // we only handle the types with params here\n\n\nconst mapping = {\n  [TypeDefInfo.BTreeMap]: extractSubArray,\n  [TypeDefInfo.BTreeSet]: extractSubSingle,\n  [TypeDefInfo.Compact]: extractSubSingle,\n  [TypeDefInfo.DoNotConstruct]: unhandled,\n  [TypeDefInfo.Enum]: extractSubArray,\n  [TypeDefInfo.HashMap]: extractSubArray,\n  [TypeDefInfo.Int]: unhandled,\n  [TypeDefInfo.Linkage]: unhandled,\n  [TypeDefInfo.Null]: unhandled,\n  [TypeDefInfo.Option]: extractSubSingle,\n  [TypeDefInfo.Plain]: (_, typeDef) => typeDef.lookupName || typeDef.type,\n  [TypeDefInfo.Range]: extractSubSingle,\n  [TypeDefInfo.RangeInclusive]: extractSubSingle,\n  [TypeDefInfo.Result]: extractSubArray,\n  [TypeDefInfo.Set]: extractSubArray,\n  [TypeDefInfo.Si]: unhandled,\n  [TypeDefInfo.Struct]: extractSubArray,\n  [TypeDefInfo.Tuple]: extractSubArray,\n  [TypeDefInfo.UInt]: unhandled,\n  [TypeDefInfo.Vec]: extractSubSingle,\n  [TypeDefInfo.VecFixed]: extractSubSingle,\n  [TypeDefInfo.WrapperKeepOpaque]: extractSubSingle,\n  [TypeDefInfo.WrapperOpaque]: extractSubSingle\n};\n/** @internal */\n\nexport function extractTypes(types) {\n  return types.map(type => {\n    const typeDef = getTypeDef(type);\n    return mapping[typeDef.info](type, typeDef);\n  });\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { logger } from '@polkadot/util';\nimport { extractTypes } from \"./extractTypes.js\";\nimport { flattenUniq } from \"./flattenUniq.js\";\nconst l = logger('metadata');\n/** @internal */\n\nexport function validateTypes(registry, throwError, types) {\n  const missing = flattenUniq(extractTypes(types)).filter(type => !registry.hasType(type) && !registry.isLookupType(type)).sort();\n\n  if (missing.length !== 0) {\n    const message = `Unknown types found, no types for ${missing.join(', ')}`;\n\n    if (throwError) {\n      throw new Error(message);\n    } else {\n      l.warn(message);\n    }\n  }\n\n  return types;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { flattenUniq } from \"./flattenUniq.js\";\nimport { validateTypes } from \"./validateTypes.js\";\n/** @internal */\n\nfunction extractTypes(lookup, types) {\n  return types.map(({\n    type\n  }) => lookup.getTypeDef(type).type);\n}\n/** @internal */\n\n\nfunction extractFieldTypes(lookup, type) {\n  return lookup.getSiType(type).def.asVariant.variants.map(({\n    fields\n  }) => extractTypes(lookup, fields));\n}\n/** @internal */\n\n\nfunction getPalletNames({\n  lookup,\n  pallets\n}) {\n  return pallets.reduce((all, {\n    calls,\n    constants,\n    events,\n    storage\n  }) => {\n    all.push([extractTypes(lookup, constants)]);\n\n    if (calls.isSome) {\n      all.push(extractFieldTypes(lookup, calls.unwrap().type));\n    }\n\n    if (events.isSome) {\n      all.push(extractFieldTypes(lookup, events.unwrap().type));\n    }\n\n    if (storage.isSome) {\n      all.push(storage.unwrap().items.map(({\n        type\n      }) => {\n        if (type.isPlain) {\n          return [lookup.getTypeDef(type.asPlain).type];\n        }\n\n        const {\n          hashers,\n          key,\n          value\n        } = type.asMap;\n        return hashers.length === 1 ? [lookup.getTypeDef(value).type, lookup.getTypeDef(key).type] : [lookup.getTypeDef(value).type, ...lookup.getSiType(key).def.asTuple.map(t => lookup.getTypeDef(t).type)];\n      }));\n    }\n\n    return all;\n  }, []);\n}\n/** @internal */\n\n\nexport function getUniqTypes(registry, meta, throwError) {\n  return validateTypes(registry, throwError, flattenUniq(getPalletNames(meta)));\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\nimport { assert } from '@polkadot/util';\nimport { toV10 } from \"./v9/toV10.js\";\nimport { toV11 } from \"./v10/toV11.js\";\nimport { toV12 } from \"./v11/toV12.js\";\nimport { toV13 } from \"./v12/toV13.js\";\nimport { toV14 } from \"./v13/toV14.js\";\nimport { toLatest } from \"./v14/toLatest.js\";\nimport { MagicNumber } from \"./MagicNumber.js\";\nimport { getUniqTypes, toCallsOnly } from \"./util/index.js\";\nconst LATEST_VERSION = 14;\n/**\n * @name MetadataVersioned\n * @description\n * The versioned runtime metadata as a decoded structure\n */\n\nexport class MetadataVersioned extends Struct {\n  #converted = new Map();\n\n  constructor(registry, value) {\n    // console.time('MetadataVersioned')\n    super(registry, {\n      magicNumber: MagicNumber,\n      metadata: 'MetadataAll'\n    }, value); // console.timeEnd('MetadataVersioned')\n  }\n\n  #assertVersion = version => {\n    assert(this.version <= version, () => `Cannot convert metadata from version ${this.version} to ${version}`);\n    return this.version === version;\n  };\n  #getVersion = (version, fromPrev) => {\n    const asCurr = `asV${version}`;\n    const asPrev = version === 'latest' ? `asV${LATEST_VERSION}` : `asV${version - 1}`;\n\n    if (version !== 'latest' && this.#assertVersion(version)) {\n      return this.#metadata()[asCurr];\n    }\n\n    if (!this.#converted.has(version)) {\n      this.#converted.set(version, fromPrev(this.registry, this[asPrev], this.version));\n    }\n\n    return this.#converted.get(version);\n  };\n  /**\n   * @description the metadata wrapped\n   */\n\n  #metadata = () => {\n    return this.getT('metadata');\n  };\n\n  get registry() {\n    return super.registry;\n  }\n  /**\n   * @description Returns the wrapped metadata as a limited calls-only (latest) version\n   */\n\n\n  get asCallsOnly() {\n    return new MetadataVersioned(this.registry, {\n      magicNumber: this.magicNumber,\n      metadata: this.registry.createTypeUnsafe('MetadataAll', [toCallsOnly(this.registry, this.asLatest), LATEST_VERSION])\n    });\n  }\n  /**\n   * @description Returns the wrapped metadata as a V9 object\n   */\n\n\n  get asV9() {\n    this.#assertVersion(9);\n    return this.#metadata().asV9;\n  }\n  /**\n   * @description Returns the wrapped values as a V10 object\n   */\n\n\n  get asV10() {\n    return this.#getVersion(10, toV10);\n  }\n  /**\n   * @description Returns the wrapped values as a V11 object\n   */\n\n\n  get asV11() {\n    return this.#getVersion(11, toV11);\n  }\n  /**\n   * @description Returns the wrapped values as a V12 object\n   */\n\n\n  get asV12() {\n    return this.#getVersion(12, toV12);\n  }\n  /**\n   * @description Returns the wrapped values as a V13 object\n   */\n\n\n  get asV13() {\n    return this.#getVersion(13, toV13);\n  }\n  /**\n   * @description Returns the wrapped values as a V14 object\n   */\n\n\n  get asV14() {\n    return this.#getVersion(14, toV14);\n  }\n  /**\n   * @description Returns the wrapped values as a latest version object\n   */\n\n\n  get asLatest() {\n    return this.#getVersion('latest', toLatest);\n  }\n  /**\n   * @description The magicNumber for the Metadata (known constant)\n   */\n\n\n  get magicNumber() {\n    return this.getT('magicNumber');\n  }\n  /**\n   * @description the metadata version this structure represents\n   */\n\n\n  get version() {\n    return this.#metadata().index;\n  }\n\n  getUniqTypes(throwError) {\n    return getUniqTypes(this.registry, this.asLatest, throwError);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    // HACK(y): ensure that we apply the aliases if we have not done so already, this is\n    // needed to ensure we have the correct overrides (which is only applied in toLatest)\n    // eslint-disable-next-line no-unused-expressions\n    this.asLatest;\n    return super.toJSON();\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { MetadataVersioned } from \"./MetadataVersioned.js\"; // magic u32 preceding the version id\n\nconst VERSION_IDX = 4; // magic + lowest supported version\n\nconst EMPTY_METADATA = new Uint8Array([0x6d, 0x65, 0x74, 0x61, 9]);\n\nfunction toU8a(value) {\n  return isHex(value) ? toU8a(u8aToU8a(value)) : value.length === 0 ? EMPTY_METADATA : value;\n}\n\nfunction decodeU8a(registry, value) {\n  try {\n    return new MetadataVersioned(registry, value);\n  } catch (error) {\n    // This is an f-ing hack as a follow-up to another ugly hack\n    // https://github.com/polkadot-js/api/commit/a9211690be6b68ad6c6dad7852f1665cadcfa5b2\n    // when we fail on V9, try to re-parse it as v10... yes... HACK\n    if (value[VERSION_IDX] === 9) {\n      value[VERSION_IDX] = 10;\n      return decodeU8a(registry, value);\n    }\n\n    throw error;\n  }\n}\n/**\n * @name Metadata\n * @description\n * The versioned runtime metadata as a decoded structure\n */\n\n\nexport class Metadata extends MetadataVersioned {\n  constructor(registry, value) {\n    super(registry, isU8a(value) || isHex(value) ? decodeU8a(registry, toU8a(value)) : new MetadataVersioned(registry, value));\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToU8a, lazyMethod, lazyMethods, stringCamelCase } from '@polkadot/util';\nimport { objectNameToCamel } from \"../util.js\";\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport function decorateConstants(registry, {\n  pallets\n}, _version) {\n  const result = {};\n\n  for (let i = 0; i < pallets.length; i++) {\n    const {\n      constants,\n      name\n    } = pallets[i];\n\n    if (!constants.isEmpty) {\n      lazyMethod(result, stringCamelCase(name), () => lazyMethods({}, constants, constant => {\n        const codec = registry.createTypeUnsafe(registry.createLookupType(constant.type), [hexToU8a(constant.value.toHex())]);\n        codec.meta = constant;\n        return codec;\n      }, objectNameToCamel));\n    }\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { lazyMethod, stringCamelCase } from '@polkadot/util';\nimport { lazyVariants } from \"../../../create/lazy.js\";\nimport { variantToMeta } from \"../errors/index.js\";\nimport { objectNameToString } from \"../util.js\";\nexport function filterEventsSome({\n  events\n}) {\n  return events.isSome;\n}\n/** @internal */\n\nexport function decorateEvents(registry, {\n  lookup,\n  pallets\n}, version) {\n  const result = {};\n  const filtered = pallets.filter(filterEventsSome);\n\n  for (let i = 0; i < filtered.length; i++) {\n    const {\n      events,\n      index,\n      name\n    } = filtered[i];\n    const sectionIndex = version >= 12 ? index.toNumber() : i;\n    lazyMethod(result, stringCamelCase(name), () => lazyVariants(lookup, events.unwrap(), objectNameToString, variant => ({\n      is: eventRecord => sectionIndex === eventRecord.index[0] && variant.index.eq(eventRecord.index[1]),\n      meta: registry.createTypeUnsafe('EventMetadataLatest', [variantToMeta(lookup, variant)])\n    })));\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { lazyMethod, objectSpread, stringCamelCase } from '@polkadot/util';\nimport { lazyVariants } from \"../../../create/lazy.js\";\nimport { getSiName } from \"../../util/index.js\";\nimport { objectNameToCamel } from \"../util.js\";\nimport { createUnchecked } from \"./createUnchecked.js\";\nexport function filterCallsSome({\n  calls\n}) {\n  return calls.isSome;\n}\nexport function createCallFunction(registry, lookup, variant, sectionName, sectionIndex) {\n  const {\n    fields,\n    index\n  } = variant;\n  const args = new Array(fields.length);\n\n  for (let a = 0; a < fields.length; a++) {\n    const {\n      name,\n      type,\n      typeName\n    } = fields[a];\n    args[a] = objectSpread({\n      name: stringCamelCase(name.unwrapOr(`param${a}`)),\n      type: getSiName(lookup, type)\n    }, typeName.isSome ? {\n      typeName: typeName.unwrap()\n    } : null);\n  }\n\n  return createUnchecked(registry, sectionName, new Uint8Array([sectionIndex, index.toNumber()]), registry.createTypeUnsafe('FunctionMetadataLatest', [objectSpread({\n    args\n  }, variant)]));\n}\n/** @internal */\n\nexport function decorateExtrinsics(registry, {\n  lookup,\n  pallets\n}, version) {\n  const result = {};\n  const filtered = pallets.filter(filterCallsSome);\n\n  for (let i = 0; i < filtered.length; i++) {\n    const {\n      calls,\n      index,\n      name\n    } = filtered[i];\n    const sectionName = stringCamelCase(name);\n    const sectionIndex = version >= 12 ? index.toNumber() : i;\n    lazyMethod(result, sectionName, () => lazyVariants(lookup, calls.unwrap(), objectNameToCamel, variant => createCallFunction(registry, lookup, variant, sectionName, sectionIndex)));\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, stringCamelCase } from '@polkadot/util';\n\nfunction isTx(tx, callIndex) {\n  return tx.callIndex[0] === callIndex[0] && tx.callIndex[1] === callIndex[1];\n}\n/** @internal */\n\n\nexport function createUnchecked(registry, section, callIndex, callMetadata) {\n  const expectedArgs = callMetadata.fields;\n  const funcName = stringCamelCase(callMetadata.name);\n\n  const extrinsicFn = (...args) => {\n    assert(expectedArgs.length === args.length, () => `Extrinsic ${section}.${funcName} expects ${expectedArgs.length} arguments, got ${args.length}.`);\n    return registry.createTypeUnsafe('Call', [{\n      args,\n      callIndex\n    }, callMetadata]);\n  };\n\n  extrinsicFn.is = tx => isTx(tx, callIndex);\n\n  extrinsicFn.callIndex = callIndex;\n  extrinsicFn.meta = callMetadata;\n  extrinsicFn.method = funcName;\n  extrinsicFn.section = section;\n\n  extrinsicFn.toJSON = () => callMetadata.toJSON();\n\n  return extrinsicFn;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\n\nfunction convert(fn) {\n  return ({\n    name\n  }) => fn(name);\n}\n\nexport const objectNameToCamel = convert(stringCamelCase);\nexport const objectNameToString = convert(n => n.toString());","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport function getSiName(lookup, type) {\n  const typeDef = lookup.getTypeDef(type);\n  return typeDef.lookupName || typeDef.type;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Bytes } from '@polkadot/types-codec';\nimport { assert, isFunction, isString, isU8a } from '@polkadot/util';\nimport { getSiName } from \"../metadata/util/index.js\";\n// hasher type -> [initialHashLength, canDecodeKey]\nconst HASHER_MAP = {\n  // opaque\n  Blake2_128: [16, false],\n  // eslint-disable-line camelcase\n  Blake2_128Concat: [16, true],\n  // eslint-disable-line camelcase\n  Blake2_256: [32, false],\n  // eslint-disable-line camelcase\n  Identity: [0, true],\n  Twox128: [16, false],\n  Twox256: [32, false],\n  Twox64Concat: [8, true]\n};\nexport function unwrapStorageSi(type) {\n  return type.isPlain ? type.asPlain : type.asMap.value;\n}\n/** @internal */\n\nexport function unwrapStorageType(registry, type, isOptional) {\n  const outputType = getSiName(registry.lookup, unwrapStorageSi(type));\n  return isOptional ? `Option<${outputType}>` : outputType;\n}\n/** @internal */\n\nfunction decodeStorageKey(value) {\n  if (isU8a(value) || !value || isString(value)) {\n    // let Bytes handle these inputs\n    return {\n      key: value\n    };\n  } else if (value instanceof StorageKey) {\n    return {\n      key: value,\n      method: value.method,\n      section: value.section\n    };\n  } else if (isFunction(value)) {\n    return {\n      key: value(),\n      method: value.method,\n      section: value.section\n    };\n  } else if (Array.isArray(value)) {\n    const [fn, args = []] = value;\n    assert(isFunction(fn), 'Expected function input for key construction');\n\n    if (fn.meta && fn.meta.type.isMap) {\n      const map = fn.meta.type.asMap;\n      assert(Array.isArray(args) && args.length === map.hashers.length, () => `Expected an array of ${map.hashers.length} values as params to a Map query`);\n    }\n\n    return {\n      key: fn(...args),\n      method: fn.method,\n      section: fn.section\n    };\n  }\n\n  throw new Error(`Unable to convert input ${value} to StorageKey`);\n}\n/** @internal */\n\n\nfunction decodeHashers(registry, value, hashers) {\n  // the storage entry is xxhashAsU8a(prefix, 128) + xxhashAsU8a(method, 128), 256 bits total\n  let offset = 32;\n  const result = new Array(hashers.length);\n\n  for (let i = 0; i < hashers.length; i++) {\n    const [hasher, type] = hashers[i];\n    const [hashLen, canDecode] = HASHER_MAP[hasher.type];\n    const decoded = canDecode ? registry.createTypeUnsafe(getSiName(registry.lookup, type), [value.subarray(offset + hashLen)]) : registry.createTypeUnsafe('Raw', [value.subarray(offset, offset + hashLen)]);\n    offset += hashLen + (canDecode ? decoded.encodedLength : 0);\n    result[i] = decoded;\n  }\n\n  return result;\n}\n/** @internal */\n\n\nfunction decodeArgsFromMeta(registry, value, meta) {\n  if (!meta || !meta.type.isMap) {\n    return [];\n  }\n\n  const {\n    hashers,\n    key\n  } = meta.type.asMap;\n  const keys = hashers.length === 1 ? [key] : registry.lookup.getSiType(key).def.asTuple;\n  return decodeHashers(registry, value, hashers.map((h, i) => [h, keys[i]]));\n}\n/** @internal */\n\n\nfunction getMeta(value) {\n  if (value instanceof StorageKey) {\n    return value.meta;\n  } else if (isFunction(value)) {\n    return value.meta;\n  } else if (Array.isArray(value)) {\n    const [fn] = value;\n    return fn.meta;\n  }\n\n  return undefined;\n}\n/** @internal */\n\n\nfunction getType(registry, value) {\n  if (value instanceof StorageKey) {\n    return value.outputType;\n  } else if (isFunction(value)) {\n    return unwrapStorageType(registry, value.meta.type);\n  } else if (Array.isArray(value)) {\n    const [fn] = value;\n\n    if (fn.meta) {\n      return unwrapStorageType(registry, fn.meta.type);\n    }\n  } // If we have no type set, default to Raw\n\n\n  return 'Raw';\n}\n/**\n * @name StorageKey\n * @description\n * A representation of a storage key (typically hashed) in the system. It can be\n * constructed by passing in a raw key or a StorageEntry with (optional) arguments.\n */\n\n\nexport class StorageKey extends Bytes {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore This is assigned via this.decodeArgsFromMeta()\n  #args;\n  #meta;\n  #outputType;\n  #method;\n  #section;\n\n  constructor(registry, value, override = {}) {\n    const {\n      key,\n      method,\n      section\n    } = decodeStorageKey(value);\n    super(registry, key);\n    this.#outputType = getType(registry, value); // decode the args (as applicable based on the key and the hashers, after all init)\n\n    this.setMeta(getMeta(value), override.section || section, override.method || method);\n  }\n  /**\n   * @description Return the decoded arguments (applicable to map with decodable values)\n   */\n\n\n  get args() {\n    return this.#args;\n  }\n  /**\n   * @description The metadata or `undefined` when not available\n   */\n\n\n  get meta() {\n    return this.#meta;\n  }\n  /**\n   * @description The key method or `undefined` when not specified\n   */\n\n\n  get method() {\n    return this.#method;\n  }\n  /**\n   * @description The output type\n   */\n\n\n  get outputType() {\n    return this.#outputType;\n  }\n  /**\n   * @description The key section or `undefined` when not specified\n   */\n\n\n  get section() {\n    return this.#section;\n  }\n\n  is(key) {\n    return key.section === this.section && key.method === this.method;\n  }\n  /**\n   * @description Sets the meta for this key\n   */\n\n\n  setMeta(meta, section, method) {\n    this.#meta = meta;\n    this.#method = method || this.#method;\n    this.#section = section || this.#section;\n\n    if (meta) {\n      this.#outputType = unwrapStorageType(this.registry, meta.type);\n    }\n\n    try {\n      this.#args = decodeArgsFromMeta(this.registry, this.toU8a(true), meta);\n    } catch (error) {// ignore...\n    }\n\n    return this;\n  }\n  /**\n   * @description Returns the Human representation for this type\n   */\n\n\n  toHuman() {\n    return this.#args.length ? this.#args.map(a => a.toHuman()) : super.toHuman();\n  }\n  /**\n   * @description Returns the raw type for this\n   */\n\n\n  toRawType() {\n    return 'StorageKey';\n  }\n\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sshash } from \"./sshash.js\";\nexport function checkAddressChecksum(decoded) {\n  const ss58Length = decoded[0] & 0b01000000 ? 2 : 1;\n  const ss58Decoded = ss58Length === 1 ? decoded[0] : (decoded[0] & 0b00111111) << 2 | decoded[1] >> 6 | (decoded[1] & 0b00111111) << 8; // 32/33 bytes public + 2 bytes checksum + prefix\n\n  const isPublicKey = [34 + ss58Length, 35 + ss58Length].includes(decoded.length);\n  const length = decoded.length - (isPublicKey ? 2 : 1); // calculate the hash and do the checksum byte checks\n\n  const hash = sshash(decoded.subarray(0, length));\n  const isValid = (decoded[0] & 0b10000000) === 0 && ![46, 47].includes(decoded[0]) && (isPublicKey ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1] : decoded[decoded.length - 1] === hash[0]);\n  return [isValid, length, ss58Length, ss58Decoded];\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L6\nimport { assert, isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { base58Decode } from \"../base58/index.js\";\nimport { checkAddressChecksum } from \"./checksum.js\";\nimport { defaults } from \"./defaults.js\";\nexport function decodeAddress(encoded, ignoreChecksum, ss58Format = -1) {\n  assert(encoded, 'Invalid empty address passed');\n\n  if (isU8a(encoded) || isHex(encoded)) {\n    return u8aToU8a(encoded);\n  }\n\n  try {\n    const decoded = base58Decode(encoded);\n    assert(defaults.allowedEncodedLengths.includes(decoded.length), 'Invalid decoded address length');\n    const [isValid, endPos, ss58Length, ss58Decoded] = checkAddressChecksum(decoded);\n    assert(ignoreChecksum || isValid, 'Invalid decoded address checksum');\n    assert([-1, ss58Decoded].includes(ss58Format), () => `Expected ss58Format ${ss58Format}, received ${ss58Decoded}`);\n    return decoded.slice(ss58Length, endPos);\n  } catch (error) {\n    throw new Error(`Decoding ${encoded}: ${error.message}`);\n  }\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { availableNetworks } from \"../networks.js\";\n\nfunction networkToPrefix({\n  prefix\n}) {\n  return prefix;\n}\n\nexport const defaults = {\n  allowedDecodedLengths: [1, 2, 4, 8, 32, 33],\n  // publicKey has prefix + 2 checksum bytes, short only prefix + 1 checksum byte\n  allowedEncodedLengths: [3, 4, 6, 10, 35, 36, 37, 38],\n  allowedPrefix: availableNetworks.map(networkToPrefix),\n  prefix: 42\n};","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from \"../blake2/asU8a.js\";\nconst SS58_PREFIX = stringToU8a('SS58PRE');\nexport function sshash(key) {\n  return blake2AsU8a(u8aConcat(SS58_PREFIX, key), 512);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { base58 } from '@scure/base';\nimport { createDecode, createEncode, createIs, createValidate } from \"../base32/helpers.js\";\nconst config = {\n  chars: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n  coder: base58,\n  ipfs: 'z',\n  type: 'base58'\n};\n/**\n * @name base58Validate\n * @summary Validates a base58 value.\n * @description\n * Validates that the supplied value is valid base58, throwing exceptions if not\n */\n\nexport const base58Validate = createValidate(config);\n/**\n * @name base58Decode\n * @summary Decodes a base58 value.\n * @description\n * From the provided input, decode the base58 and return the result as an `Uint8Array`.\n */\n\nexport const base58Decode = createDecode(config, base58Validate);\n/**\n* @name base58Encode\n* @summary Creates a base58 value.\n* @description\n* From the provided input, create the base58 and return the result as a string.\n*/\n\nexport const base58Encode = createEncode(config);\n/**\n* @name isBase58\n* @description Checks if the input is in base58, returning true/false\n*/\n\nexport const isBase58 = createIs(base58Validate);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util'; // re-export the type so *.d.ts files don't have ../src imports\n\nexport function createDecode({\n  coder,\n  ipfs\n}, validate) {\n  return (value, ipfsCompat) => {\n    validate(value, ipfsCompat);\n    return coder.decode(ipfs && ipfsCompat ? value.substr(1) : value);\n  };\n}\nexport function createEncode({\n  coder,\n  ipfs\n}) {\n  return (value, ipfsCompat) => {\n    const out = coder.encode(u8aToU8a(value));\n    return ipfs && ipfsCompat ? `${ipfs}${out}` : out;\n  };\n}\nexport function createIs(validate) {\n  return (value, ipfsCompat) => {\n    try {\n      return validate(value, ipfsCompat);\n    } catch (error) {\n      return false;\n    }\n  };\n}\nexport function createValidate({\n  chars,\n  ipfs,\n  type\n}) {\n  return (value, ipfsCompat) => {\n    assert(value && typeof value === 'string', () => `Expected non-null, non-empty ${type} string input`);\n\n    if (ipfs && ipfsCompat) {\n      assert(value[0] === ipfs, () => `Expected ipfs-compatible ${type} to start with '${ipfs}'`);\n    }\n\n    for (let i = ipfsCompat ? 1 : 0; i < value.length; i++) {\n      assert(chars.includes(value[i]) || value[i] === '=' && (i === value.length - 1 || !chars.includes(value[i + 1])), () => `Invalid ${type} character \"${value[i]}\" (0x${value.charCodeAt(i).toString(16)}) at index ${i}`);\n    }\n\n    return true;\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { blake2b as blake2bJs } from '@noble/hashes/blake2b';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { blake2b, isReady } from '@polkadot/wasm-crypto';\nimport { createAsHex } from \"../helpers.js\";\n\n/**\n * @name blake2AsU8a\n * @summary Creates a blake2b u8a from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsU8a } from '@polkadot/util-crypto';\n *\n * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]\n * ```\n */\nexport function blake2AsU8a(data, bitLength = 256, key, onlyJs) {\n  const byteLength = Math.ceil(bitLength / 8);\n  const u8a = u8aToU8a(data);\n  return !hasBigInt || !onlyJs && isReady() ? blake2b(u8a, u8aToU8a(key), byteLength) : blake2bJs(u8a, {\n    dkLen: byteLength,\n    key: key || undefined\n  });\n}\n/**\n * @name blake2AsHex\n * @description Creates a blake2b hex from the input.\n */\n\nexport const blake2AsHex = createAsHex(blake2AsU8a);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasBigInt, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { isReady } from '@polkadot/wasm-crypto'; // re-export so TS *.d.ts generation is correct\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function createAsHex(fn) {\n  return (...args) => u8aToHex(fn(...args));\n}\nexport function createBitHasher(bitLength, fn) {\n  return (data, onlyJs) => fn(data, bitLength, onlyJs);\n}\nexport function createDualHasher(wa, js) {\n  return (value, bitLength = 256, onlyJs) => {\n    const u8a = u8aToU8a(value);\n    return !hasBigInt || !onlyJs && isReady() ? wa[bitLength](u8a) : js[bitLength](u8a);\n  };\n}","// Copyright 2019-2022 @polkadot/wasm-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { assert, stringToU8a, u8aToString } from '@polkadot/util';\nexport const __bridge = {\n  cachegetInt32: null,\n  cachegetUint8: null,\n  type: 'wasm',\n  wasm: null,\n  wasmPromise: null,\n  wasmPromiseFn: null\n};\nexport function withWasm(fn) {\n  return (...params) => {\n    assert(__bridge.wasm, 'The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.');\n    return fn(__bridge.wasm, ...params);\n  };\n}\nexport function getWasm() {\n  return __bridge.wasm;\n}\nexport function getInt32() {\n  if (__bridge.cachegetInt32 === null || __bridge.cachegetInt32.buffer !== __bridge.wasm.memory.buffer) {\n    __bridge.cachegetInt32 = new Int32Array(__bridge.wasm.memory.buffer);\n  }\n\n  return __bridge.cachegetInt32;\n}\nexport function getUint8() {\n  if (__bridge.cachegetUint8 === null || __bridge.cachegetUint8.buffer !== __bridge.wasm.memory.buffer) {\n    __bridge.cachegetUint8 = new Uint8Array(__bridge.wasm.memory.buffer);\n  }\n\n  return __bridge.cachegetUint8;\n}\nexport function getU8a(ptr, len) {\n  return getUint8().subarray(ptr / 1, ptr / 1 + len);\n}\nexport function getString(ptr, len) {\n  return u8aToString(getU8a(ptr, len));\n}\nexport function allocU8a(arg) {\n  const ptr = __bridge.wasm.__wbindgen_malloc(arg.length * 1);\n\n  getUint8().set(arg, ptr / 1);\n  return [ptr, arg.length];\n}\nexport function allocString(arg) {\n  return allocU8a(stringToU8a(arg));\n}\nexport function resultU8a() {\n  const r0 = getInt32()[8 / 4 + 0];\n  const r1 = getInt32()[8 / 4 + 1];\n  const ret = getU8a(r0, r1).slice();\n\n  __bridge.wasm.__wbindgen_free(r0, r1 * 1);\n\n  return ret;\n}\nexport function resultString() {\n  return u8aToString(resultU8a());\n}","// Copyright 2019-2022 @polkadot/wasm-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { __bridge, allocString, allocU8a, getWasm, resultString, resultU8a, withWasm } from \"./bridge.js\";\nimport { initWasm } from \"./init.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nexport const bip39Generate = withWasm((wasm, words) => {\n  wasm.ext_bip39_generate(8, words);\n  return resultString();\n});\nexport const bip39ToEntropy = withWasm((wasm, phrase) => {\n  wasm.ext_bip39_to_entropy(8, ...allocString(phrase));\n  return resultU8a();\n});\nexport const bip39ToMiniSecret = withWasm((wasm, phrase, password) => {\n  wasm.ext_bip39_to_mini_secret(8, ...allocString(phrase), ...allocString(password));\n  return resultU8a();\n});\nexport const bip39ToSeed = withWasm((wasm, phrase, password) => {\n  wasm.ext_bip39_to_seed(8, ...allocString(phrase), ...allocString(password));\n  return resultU8a();\n});\nexport const bip39Validate = withWasm((wasm, phrase) => {\n  const ret = wasm.ext_bip39_validate(...allocString(phrase));\n  return ret !== 0;\n});\nexport const ed25519KeypairFromSeed = withWasm((wasm, seed) => {\n  wasm.ext_ed_from_seed(8, ...allocU8a(seed));\n  return resultU8a();\n});\nexport const ed25519Sign = withWasm((wasm, pubkey, seckey, message) => {\n  wasm.ext_ed_sign(8, ...allocU8a(pubkey), ...allocU8a(seckey), ...allocU8a(message));\n  return resultU8a();\n});\nexport const ed25519Verify = withWasm((wasm, signature, message, pubkey) => {\n  const ret = wasm.ext_ed_verify(...allocU8a(signature), ...allocU8a(message), ...allocU8a(pubkey));\n  return ret !== 0;\n});\nexport const secp256k1FromSeed = withWasm((wasm, seckey) => {\n  wasm.ext_secp_from_seed(8, ...allocU8a(seckey));\n  return resultU8a();\n});\nexport const secp256k1Compress = withWasm((wasm, pubkey) => {\n  wasm.ext_secp_pub_compress(8, ...allocU8a(pubkey));\n  return resultU8a();\n});\nexport const secp256k1Expand = withWasm((wasm, pubkey) => {\n  wasm.ext_secp_pub_expand(8, ...allocU8a(pubkey));\n  return resultU8a();\n});\nexport const secp256k1Recover = withWasm((wasm, msgHash, sig, recovery) => {\n  wasm.ext_secp_recover(8, ...allocU8a(msgHash), ...allocU8a(sig), recovery);\n  return resultU8a();\n});\nexport const secp256k1Sign = withWasm((wasm, msgHash, seckey) => {\n  wasm.ext_secp_sign(8, ...allocU8a(msgHash), ...allocU8a(seckey));\n  return resultU8a();\n});\nexport const sr25519DeriveKeypairHard = withWasm((wasm, pair, cc) => {\n  wasm.ext_sr_derive_keypair_hard(8, ...allocU8a(pair), ...allocU8a(cc));\n  return resultU8a();\n});\nexport const sr25519DeriveKeypairSoft = withWasm((wasm, pair, cc) => {\n  wasm.ext_sr_derive_keypair_soft(8, ...allocU8a(pair), ...allocU8a(cc));\n  return resultU8a();\n});\nexport const sr25519DerivePublicSoft = withWasm((wasm, pubkey, cc) => {\n  wasm.ext_sr_derive_public_soft(8, ...allocU8a(pubkey), ...allocU8a(cc));\n  return resultU8a();\n});\nexport const sr25519KeypairFromSeed = withWasm((wasm, seed) => {\n  wasm.ext_sr_from_seed(8, ...allocU8a(seed));\n  return resultU8a();\n});\nexport const sr25519Sign = withWasm((wasm, pubkey, secret, message) => {\n  wasm.ext_sr_sign(8, ...allocU8a(pubkey), ...allocU8a(secret), ...allocU8a(message));\n  return resultU8a();\n});\nexport const sr25519Verify = withWasm((wasm, signature, message, pubkey) => {\n  const ret = wasm.ext_sr_verify(...allocU8a(signature), ...allocU8a(message), ...allocU8a(pubkey));\n  return ret !== 0;\n});\nexport const sr25519Agree = withWasm((wasm, pubkey, secret) => {\n  wasm.ext_sr_agree(8, ...allocU8a(pubkey), ...allocU8a(secret));\n  return resultU8a();\n});\nexport const vrfSign = withWasm((wasm, secret, context, message, extra) => {\n  wasm.ext_vrf_sign(8, ...allocU8a(secret), ...allocU8a(context), ...allocU8a(message), ...allocU8a(extra));\n  return resultU8a();\n});\nexport const vrfVerify = withWasm((wasm, pubkey, context, message, extra, outAndProof) => {\n  const ret = wasm.ext_vrf_verify(...allocU8a(pubkey), ...allocU8a(context), ...allocU8a(message), ...allocU8a(extra), ...allocU8a(outAndProof));\n  return ret !== 0;\n});\nexport const blake2b = withWasm((wasm, data, key, size) => {\n  wasm.ext_blake2b(8, ...allocU8a(data), ...allocU8a(key), size);\n  return resultU8a();\n});\nexport const hmacSha256 = withWasm((wasm, key, data) => {\n  wasm.ext_hmac_sha256(8, ...allocU8a(key), ...allocU8a(data));\n  return resultU8a();\n});\nexport const hmacSha512 = withWasm((wasm, key, data) => {\n  wasm.ext_hmac_sha512(8, ...allocU8a(key), ...allocU8a(data));\n  return resultU8a();\n});\nexport const keccak256 = withWasm((wasm, data) => {\n  wasm.ext_keccak256(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const keccak512 = withWasm((wasm, data) => {\n  wasm.ext_keccak512(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const pbkdf2 = withWasm((wasm, data, salt, rounds) => {\n  wasm.ext_pbkdf2(8, ...allocU8a(data), ...allocU8a(salt), rounds);\n  return resultU8a();\n});\nexport const scrypt = withWasm((wasm, password, salt, log2n, r, p) => {\n  wasm.ext_scrypt(8, ...allocU8a(password), ...allocU8a(salt), log2n, r, p);\n  return resultU8a();\n});\nexport const sha256 = withWasm((wasm, data) => {\n  wasm.ext_sha256(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const sha512 = withWasm((wasm, data) => {\n  wasm.ext_sha512(8, ...allocU8a(data));\n  return resultU8a();\n});\nexport const twox = withWasm((wasm, data, rounds) => {\n  wasm.ext_twox(8, ...allocU8a(data), rounds);\n  return resultU8a();\n});\nexport function isReady() {\n  return !!getWasm();\n}\nexport async function waitReady() {\n  try {\n    if (!__bridge.wasmPromise) {\n      if (!__bridge.wasmPromiseFn) {\n        __bridge.wasmPromiseFn = initWasm;\n      }\n\n      __bridge.wasmPromise = __bridge.wasmPromiseFn();\n    }\n\n    await __bridge.wasmPromise;\n    return isReady();\n  } catch {\n    return false;\n  }\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from \"./is/function.js\";\nimport { isNull } from \"./is/null.js\";\nimport { isUndefined } from \"./is/undefined.js\";\n\n/**\n * @name assert\n * @summary Checks for a valid test, if not Error is thrown.\n * @description\n * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.\n * @example\n * <BR>\n *\n * ```javascript\n * const { assert } from '@polkadot/util';\n *\n * assert(true, 'True should be true'); // passes\n * assert(false, 'False should not be true'); // Error thrown\n * assert(false, () => 'message'); // Error with 'message'\n * ```\n */\nexport function assert(condition, message) {\n  if (!condition) {\n    throw new Error(isFunction(message) ? message() : message);\n  }\n}\n/**\n * @name assertReturn\n * @description Returns when the value is not undefined/null, otherwise throws assertion error\n */\n\nexport function assertReturn(value, message) {\n  assert(!isUndefined(value) && !isNull(value), message);\n  return value;\n}\n/**\n * @name assertUnreachable\n * @description An assertion helper that ensures all codepaths are followed\n */\n\nexport function assertUnreachable(x) {\n  throw new Error(`This codepath should be unreachable. Unhandled input: ${x}`);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"./bn.js\";\n/**\n * @name BN_ZERO\n * @summary BN constant for 0.\n */\n\nexport const BN_ZERO = new BN(0);\n/**\n * @name BN_ONE\n * @summary BN constant for 1.\n */\n\nexport const BN_ONE = new BN(1);\n/**\n * @name BN_TWO\n * @summary BN constant for 2.\n */\n\nexport const BN_TWO = new BN(2);\n/**\n * @name BN_THREE\n * @summary BN constant for 3.\n */\n\nexport const BN_THREE = new BN(3);\n/**\n * @name BN_FOUR\n * @summary BN constant for 4.\n */\n\nexport const BN_FOUR = new BN(4);\n/**\n * @name BN_FIVE\n * @summary BN constant for 5.\n */\n\nexport const BN_FIVE = new BN(5);\n/**\n * @name BN_SIX\n * @summary BN constant for 6.\n */\n\nexport const BN_SIX = new BN(6);\n/**\n * @name BN_SEVEN\n * @summary BN constant for 7.\n */\n\nexport const BN_SEVEN = new BN(7);\n/**\n * @name BN_EIGHT\n * @summary BN constant for 8.\n */\n\nexport const BN_EIGHT = new BN(8);\n/**\n * @name BN_NINE\n * @summary BN constant for 9.\n */\n\nexport const BN_NINE = new BN(9);\n/**\n * @name BN_TEN\n * @summary BN constant for 10.\n */\n\nexport const BN_TEN = new BN(10);\n/**\n * @name BN_HUNDRED\n * @summary BN constant for 100.\n */\n\nexport const BN_HUNDRED = new BN(100);\n/**\n * @name BN_THOUSAND\n * @summary BN constant for 1,000.\n */\n\nexport const BN_THOUSAND = new BN(1000);\n/**\n * @name BN_MILLION\n * @summary BN constant for 1,000,000.\n */\n\nexport const BN_MILLION = new BN(1000000);\n/**\n * @name BN_BILLION\n * @summary BN constant for 1,000,000,000.\n */\n\nexport const BN_BILLION = new BN(1000000000);\n/**\n * @name BN_QUINTILL\n * @summary BN constant for 1,000,000,000,000,000,000.\n */\n\nexport const BN_QUINTILL = BN_BILLION.mul(BN_BILLION);\n/**\n * @name BN_MAX_INTEGER\n * @summary BN constant for MAX_SAFE_INTEGER\n */\n\nexport const BN_MAX_INTEGER = new BN(Number.MAX_SAFE_INTEGER);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isOn } from \"./helpers.js\";\nexport const isToBigInt = isOn('toBigInt');","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isOn } from \"./helpers.js\";\nexport const isToBn = isOn('toBn');","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToBn } from \"../hex/toBn.js\";\nimport { isBigInt } from \"../is/bigInt.js\";\nimport { isHex } from \"../is/hex.js\";\nimport { isToBigInt } from \"../is/toBigInt.js\";\nimport { isToBn } from \"../is/toBn.js\";\nimport { BN } from \"./bn.js\";\n/**\n * @name bnToBn\n * @summary Creates a BN value from a BN, bigint, string (base 10 or hex) or number input.\n * @description\n * `null` inputs returns a `0x0` result, BN values returns the value, numbers returns a BN representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnToBn } from '@polkadot/util';\n *\n * bnToBn(0x1234); // => BN(0x1234)\n * bnToBn(new BN(0x1234)); // => BN(0x1234)\n * ```\n */\n\nexport function bnToBn(value) {\n  return BN.isBN(value) ? value : !value ? new BN(0) : isHex(value) ? hexToBn(value.toString()) : isBigInt(value) ? new BN(value.toString()) : isToBn(value) ? value.toBn() : isToBigInt(value) ? new BN(value.toBigInt().toString()) : new BN(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNumber } from \"../is/number.js\";\nimport { objectSpread } from \"../object/spread.js\";\nimport { bnToBn } from \"./toBn.js\";\nconst DEFAULT_OPTS = {\n  bitLength: -1,\n  isLe: true,\n  isNegative: false\n};\n\nfunction createEmpty(byteLength, options) {\n  return options.bitLength === -1 ? new Uint8Array() : new Uint8Array(byteLength);\n}\n\nfunction createValue(valueBn, byteLength, {\n  isLe,\n  isNegative\n}) {\n  const output = new Uint8Array(byteLength);\n  const bn = isNegative ? valueBn.toTwos(byteLength * 8) : valueBn;\n  output.set(bn.toArray(isLe ? 'le' : 'be', byteLength), 0);\n  return output;\n}\n/**\n * @name bnToU8a\n * @summary Creates a Uint8Array object from a BN.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `Uint8Array` result. `BN` input values return the actual bytes value converted to a `Uint8Array`. Optionally convert using little-endian format if `isLE` is set.\n * @example\n * <BR>\n *\n * ```javascript\n * import { bnToU8a } from '@polkadot/util';\n *\n * bnToU8a(new BN(0x1234)); // => [0x12, 0x34]\n * ```\n */\n\n\nfunction bnToU8a(value, arg1 = DEFAULT_OPTS, arg2) {\n  const options = objectSpread({\n    bitLength: -1,\n    isLe: true,\n    isNegative: false\n  }, isNumber(arg1) ? {\n    bitLength: arg1,\n    isLe: arg2\n  } : arg1);\n  const valueBn = bnToBn(value);\n  const byteLength = options.bitLength === -1 ? Math.ceil(valueBn.bitLength() / 8) : Math.ceil((options.bitLength || 0) / 8);\n  return value ? createValue(valueBn, byteLength, options) : createEmpty(byteLength, options);\n}\n\nexport { bnToU8a };","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aConcat } from \"../u8a/index.js\";\nimport { compactToU8a } from \"./toU8a.js\";\n/**\n * @name compactAddLength\n * @description Adds a length prefix to the input value\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactAddLength } from '@polkadot/util';\n *\n * console.log(compactAddLength(new Uint8Array([0xde, 0xad, 0xbe, 0xef]))); // Uint8Array([4 << 2, 0xde, 0xad, 0xbe, 0xef])\n * ```\n */\n\nexport function compactAddLength(input) {\n  return u8aConcat(compactToU8a(input.length), input);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN, BN_FOUR } from \"../bn/index.js\";\nimport { u8aToBn, u8aToU8a } from \"../u8a/index.js\";\n/**\n * @name compactFromU8a\n * @description Retrievs the offset and encoded length from a compact-prefixed value\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactFromU8a } from '@polkadot/util';\n *\n * const [offset, length] = compactFromU8a(new Uint8Array([254, 255, 3, 0]));\n *\n * console.log('value offset=', offset, 'length=', length); // 4, 0xffff\n * ```\n */\n\nexport function compactFromU8a(input) {\n  const u8a = u8aToU8a(input);\n  const flag = u8a[0] & 0b11;\n\n  if (flag === 0b00) {\n    return [1, new BN(u8a[0]).ishrn(2)];\n  } else if (flag === 0b01) {\n    return [2, u8aToBn(u8a.subarray(0, 2), true).ishrn(2)];\n  } else if (flag === 0b10) {\n    return [4, u8aToBn(u8a.subarray(0, 4), true).ishrn(2)];\n  }\n\n  const offset = 1 + new BN(u8a[0]).ishrn(2) // clear flag\n  .iadd(BN_FOUR) // add 4 for base length\n  .toNumber();\n  return [offset, u8aToBn(u8a.subarray(1, offset), true)];\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8a } from \"./fromU8a.js\";\n/**\n * @name compactStripLength\n * @description Removes the length prefix, returning both the total length (including the value + compact encoding) and the decoded value with the correct length\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactStripLength } from '@polkadot/util';\n *\n * console.log(compactStripLength(new Uint8Array([2 << 2, 0xde, 0xad]))); // [2, Uint8Array[0xde, 0xad]]\n * ```\n */\n\nexport function compactStripLength(input) {\n  const [offset, length] = compactFromU8a(input);\n  const total = offset + length.toNumber();\n  return [total, input.subarray(offset, total)];\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from \"../assert.js\";\nimport { BN, BN_ONE, BN_TWO, bnToBn, bnToU8a } from \"../bn/index.js\";\nimport { u8aConcat } from \"../u8a/index.js\";\nconst MAX_U8 = BN_TWO.pow(new BN(8 - 2)).isub(BN_ONE);\nconst MAX_U16 = BN_TWO.pow(new BN(16 - 2)).isub(BN_ONE);\nconst MAX_U32 = BN_TWO.pow(new BN(32 - 2)).isub(BN_ONE);\n/**\n * @name compactToU8a\n * @description Encodes a number into a compact representation\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactToU8a } from '@polkadot/util';\n *\n * console.log(compactToU8a(511, 32)); // Uint8Array([0b11111101, 0b00000111])\n * ```\n */\n\nexport function compactToU8a(value) {\n  const bn = bnToBn(value);\n\n  if (bn.lte(MAX_U8)) {\n    return new Uint8Array([bn.toNumber() << 2]);\n  } else if (bn.lte(MAX_U16)) {\n    return bnToU8a(bn.shln(2).iadd(BN_ONE), 16, true);\n  } else if (bn.lte(MAX_U32)) {\n    return bnToU8a(bn.shln(2).iadd(BN_TWO), 32, true);\n  }\n\n  const u8a = bnToU8a(bn);\n  let length = u8a.length; // adjust to the minimum number of bytes\n\n  while (u8a[length - 1] === 0) {\n    length--;\n  }\n\n  assert(length >= 4, 'Invalid length, previous checks match anything less than 2^30');\n  return u8aConcat( // subtract 4 as minimum (also catered for in decoding)\n  [(length - 4 << 2) + 0b11], u8a.subarray(0, length));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const SI_MID = 8;\nexport const SI = [{\n  power: -24,\n  text: 'yocto',\n  value: 'y'\n}, {\n  power: -21,\n  text: 'zepto',\n  value: 'z'\n}, {\n  power: -18,\n  text: 'atto',\n  value: 'a'\n}, {\n  power: -15,\n  text: 'femto',\n  value: 'f'\n}, {\n  power: -12,\n  text: 'pico',\n  value: 'p'\n}, {\n  power: -9,\n  text: 'nano',\n  value: 'n'\n}, {\n  power: -6,\n  text: 'micro',\n  value: 'µ'\n}, {\n  power: -3,\n  text: 'milli',\n  value: 'm'\n}, {\n  power: 0,\n  text: 'Unit',\n  value: '-'\n}, // position 8\n{\n  power: 3,\n  text: 'Kilo',\n  value: 'k'\n}, {\n  power: 6,\n  text: 'Mill',\n  value: 'M'\n}, // Mega, M\n{\n  power: 9,\n  text: 'Bill',\n  value: 'B'\n}, // Giga, G\n{\n  power: 12,\n  text: 'Tril',\n  value: 'T'\n}, // Tera, T\n{\n  power: 15,\n  text: 'Peta',\n  value: 'P'\n}, {\n  power: 18,\n  text: 'Exa',\n  value: 'E'\n}, {\n  power: 21,\n  text: 'Zeta',\n  value: 'Z'\n}, {\n  power: 24,\n  text: 'Yotta',\n  value: 'Y'\n}]; // Given a SI type (e.g. k, m, Y) find the SI definition\n\nexport function findSi(type) {\n  // use a loop here, better RN support (which doesn't have [].find)\n  for (let i = 0; i < SI.length; i++) {\n    if (SI[i].value === type) {\n      return SI[i];\n    }\n  }\n\n  return SI[SI_MID];\n}\nexport function calcSi(text, decimals, forceUnit) {\n  if (forceUnit) {\n    return findSi(forceUnit);\n  }\n\n  const siDefIndex = SI_MID - 1 + Math.ceil((text.length - decimals) / 3);\n  return SI[siDefIndex] || SI[siDefIndex < 0 ? 0 : SI.length - 1];\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToBn } from \"../bn/toBn.js\";\nimport { isBoolean } from \"../is/boolean.js\";\nimport { isUndefined } from \"../is/undefined.js\";\nimport { formatDecimal } from \"./formatDecimal.js\";\nimport { calcSi, findSi, SI, SI_MID } from \"./si.js\";\nconst DEFAULT_DECIMALS = 0;\nconst DEFAULT_UNIT = SI[SI_MID].text;\nlet defaultDecimals = DEFAULT_DECIMALS;\nlet defaultUnit = DEFAULT_UNIT;\n\nfunction getUnits(si, withSi, withSiFull, withUnit) {\n  const unit = isBoolean(withUnit) ? SI[SI_MID].text : withUnit;\n  return withSi || withSiFull ? si.value === '-' ? withUnit ? ` ${unit}` : '' : ` ${withSiFull ? `${si.text}${withUnit ? ' ' : ''}` : si.value}${withUnit ? unit : ''}` : '';\n}\n\nfunction getPrePost(text, decimals, forceUnit) {\n  // NOTE We start at midpoint (8) minus 1 - this means that values display as\n  // 123.456 instead of 0.123k (so always 6 relevant). Additionally we use ceil\n  // so there are at most 3 decimal before the decimal separator\n  const si = calcSi(text, decimals, forceUnit);\n  const mid = text.length - (decimals + si.power);\n  const prefix = text.substring(0, mid);\n  const padding = mid < 0 ? 0 - mid : 0;\n  const postfix = `${`${new Array(padding + 1).join('0')}${text}`.substring(mid < 0 ? 0 : mid)}0000`.substring(0, 4);\n  return [si, prefix || '0', postfix];\n} // Formats a string/number with <prefix>.<postfix><type> notation\n\n\nfunction _formatBalance(input, options = true, optDecimals = defaultDecimals) {\n  let text = bnToBn(input).toString();\n\n  if (text.length === 0 || text === '0') {\n    return '0';\n  } // extract options - the boolean case is for backwards-compat\n\n\n  const {\n    decimals = optDecimals,\n    forceUnit = undefined,\n    withSi = true,\n    withSiFull = false,\n    withUnit = true\n  } = isBoolean(options) ? {\n    withSi: options\n  } : options; // strip the negative sign so we can work with clean groupings, re-add this in the\n  // end when we return the result (from here on we work with positive numbers)\n\n  let sign = '';\n\n  if (text[0].startsWith('-')) {\n    sign = '-';\n    text = text.substring(1);\n  }\n\n  const [si, prefix, postfix] = getPrePost(text, decimals, forceUnit);\n  const units = getUnits(si, withSi, withSiFull, withUnit);\n  return `${sign}${formatDecimal(prefix)}.${postfix}${units}`;\n}\n\nexport const formatBalance = _formatBalance; // eslint-disable-next-line @typescript-eslint/unbound-method\n\nformatBalance.calcSi = (text, decimals = defaultDecimals) => calcSi(text, decimals); // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nformatBalance.findSi = findSi; // eslint-disable-next-line @typescript-eslint/unbound-method\n\nformatBalance.getDefaults = () => {\n  return {\n    decimals: defaultDecimals,\n    unit: defaultUnit\n  };\n}; // get allowable options to display in a dropdown\n// eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nformatBalance.getOptions = (decimals = defaultDecimals) => {\n  return SI.filter(({\n    power\n  }) => power < 0 ? decimals + power >= 0 : true);\n}; // Sets the default decimals to use for formatting (ui-wide)\n// eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nformatBalance.setDefaults = ({\n  decimals,\n  unit\n}) => {\n  defaultDecimals = isUndefined(decimals) ? defaultDecimals : Array.isArray(decimals) ? decimals[0] : decimals;\n  defaultUnit = isUndefined(unit) ? defaultUnit : Array.isArray(unit) ? unit[0] : unit;\n  SI[SI_MID].text = defaultUnit;\n};","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// eslint-disable-next-line prefer-regex-literals\nconst NUMBER_REGEX = new RegExp('(\\\\d+?)(?=(\\\\d{3})+(?!\\\\d)|$)', 'g');\nexport function formatDecimal(value) {\n  // We can do this by adjusting the regx, however for the sake of clarity\n  // we rather strip and re-add the negative sign in the output\n  const isNegative = value[0].startsWith('-');\n  const matched = isNegative ? value.substr(1).match(NUMBER_REGEX) : value.match(NUMBER_REGEX);\n  return matched ? `${isNegative ? '-' : ''}${matched.join(',')}` : value;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToBn } from \"../bn/toBn.js\";\nimport { formatDecimal } from \"./formatDecimal.js\";\nexport function formatNumber(value) {\n  return formatDecimal(bnToBn(value).toString());\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInt } from '@polkadot/x-bigint';\nexport const hasBigInt = typeof BigInt === 'function' && typeof BigInt.asIntN === 'function';\nexport const hasBuffer = typeof Buffer !== 'undefined';\nexport const hasCjs = typeof require === 'function' && typeof module !== 'undefined';\nexport const hasDirname = typeof __dirname !== 'undefined';\nexport const hasEsm = !hasCjs;\nexport const hasProcess = typeof process === 'object';\nexport const hasWasm = typeof WebAssembly !== 'undefined';","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst U8_TO_HEX = new Array(256);\nconst U16_TO_HEX = new Array(256 * 256);\nconst HEX_TO_U8 = {};\nconst HEX_TO_U16 = {};\n\nfor (let n = 0; n < 256; n++) {\n  const hex = n.toString(16).padStart(2, '0');\n  U8_TO_HEX[n] = hex;\n  HEX_TO_U8[hex] = n;\n}\n\nfor (let i = 0; i < 256; i++) {\n  for (let j = 0; j < 256; j++) {\n    const hex = U8_TO_HEX[i] + U8_TO_HEX[j];\n    const n = i << 8 | j;\n    U16_TO_HEX[n] = hex;\n    HEX_TO_U16[hex] = n;\n  }\n}\n\nexport { HEX_TO_U16, HEX_TO_U8, U16_TO_HEX, U8_TO_HEX };","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { REGEX_HEX_NOPREFIX, REGEX_HEX_PREFIXED } from \"../is/hex.js\";\n/**\n * @name hexStripPrefix\n * @summary Strips any leading `0x` prefix.\n * @description\n * Tests for the existence of a `0x` prefix, and returns the value without the prefix. Un-prefixed values are returned as-is.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexStripPrefix } from '@polkadot/util';\n *\n * console.log('stripped', hexStripPrefix('0x1234')); // => 1234\n * ```\n */\n\nexport function hexStripPrefix(value) {\n  if (!value || value === '0x') {\n    return '';\n  } else if (REGEX_HEX_PREFIXED.test(value)) {\n    return value.substr(2);\n  } else if (REGEX_HEX_NOPREFIX.test(value)) {\n    return value;\n  }\n\n  throw new Error(`Expected hex value to convert, found '${value}'`);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"../bn/bn.js\";\nimport { isBoolean } from \"../is/boolean.js\";\nimport { objectSpread } from \"../object/spread.js\";\nimport { hexStripPrefix } from \"./stripPrefix.js\";\nconst DEFAULT_OPTS = {\n  isLe: false,\n  isNegative: false\n};\n/**\n * @name hexToBn\n * @summary Creates a BN.js object from a hex string.\n * @description\n * `null` inputs returns a `BN(0)` result. Hex input values return the actual value converted to a BN. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @param _value The value to convert\n * @param _options Options to pass while converting\n * @param _options.isLe Convert using Little Endian\n * @param _options.isNegative Convert using two's complement\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToBn } from '@polkadot/util';\n *\n * hexToBn('0x123480001f'); // => BN(0x123480001f)\n * ```\n */\n\nexport function hexToBn(value, options = DEFAULT_OPTS) {\n  if (!value || value === '0x') {\n    return new BN(0);\n  }\n\n  const {\n    isLe,\n    isNegative\n  } = objectSpread({\n    isLe: false,\n    isNegative: false\n  }, isBoolean(options) ? {\n    isLe: options\n  } : options);\n  const stripped = hexStripPrefix(value);\n  const bn = new BN(stripped, 16, isLe ? 'le' : 'be'); // fromTwos takes as parameter the number of bits, which is the hex length\n  // multiplied by 4.\n\n  return isNegative ? bn.fromTwos(stripped.length * 4) : bn;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { HEX_TO_U8, HEX_TO_U16 } from \"./alphabet.js\";\nimport { hexStripPrefix } from \"./stripPrefix.js\";\n/**\n * @name hexToU8a\n * @summary Creates a Uint8Array object from a hex string.\n * @description\n * `null` inputs returns an empty `Uint8Array` result. Hex input values return the actual bytes value converted to a Uint8Array. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToU8a } from '@polkadot/util';\n *\n * hexToU8a('0x80001f'); // Uint8Array([0x80, 0x00, 0x1f])\n * hexToU8a('0x80001f', 32); // Uint8Array([0x00, 0x80, 0x00, 0x1f])\n * ```\n */\n\nexport function hexToU8a(_value, bitLength = -1) {\n  if (!_value) {\n    return new Uint8Array();\n  }\n\n  const value = hexStripPrefix(_value).toLowerCase();\n  const valLength = value.length / 2;\n  const endLength = Math.ceil(bitLength === -1 ? valLength : bitLength / 8);\n  const result = new Uint8Array(endLength);\n  const offset = endLength > valLength ? endLength - valLength : 0;\n  const dv = new DataView(result.buffer, offset);\n  const mod = (endLength - offset) % 2;\n  const length = endLength - offset - mod;\n\n  for (let i = 0; i < length; i += 2) {\n    dv.setUint16(i, HEX_TO_U16[value.substr(i * 2, 4)]);\n  }\n\n  if (mod) {\n    dv.setUint8(length, HEX_TO_U8[value.substr(value.length - 2, 2)]);\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isBigInt\n * @summary Tests for a `BigInt` object instance.\n * @description\n * Checks to see if the input object is an instance of `BigInt`\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBigInt } from '@polkadot/util';\n *\n * console.log('isBigInt', isBigInt(123_456n)); // => true\n * ```\n */\nexport function isBigInt(value) {\n  return typeof value === 'bigint';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"../bn/bn.js\";\n/**\n * @name isBn\n * @summary Tests for a `BN` object instance.\n * @description\n * Checks to see if the input object is an instance of `BN` (bn.js).\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { isBn } from '@polkadot/util';\n *\n * console.log('isBn', isBn(new BN(1))); // => true\n * ```\n */\n\nexport function isBn(value) {\n  return BN.isBN(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isBoolean\n * @summary Tests for a boolean value.\n * @description\n * Checks to see if the input value is a JavaScript boolean.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBoolean } from '@polkadot/util';\n *\n * isBoolean(false); // => true\n * ```\n */\nexport function isBoolean(value) {\n  return typeof value === 'boolean';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasBuffer } from \"../has.js\";\n/**\n * @name isBuffer\n * @summary Tests for a `Buffer` object instance.\n * @description\n * Checks to see if the input object is an instance of `Buffer`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBuffer } from '@polkadot/util';\n *\n * console.log('isBuffer', isBuffer(Buffer.from([]))); // => true\n * ```\n */\n\nexport function isBuffer(value) {\n  return hasBuffer && Buffer.isBuffer(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n/**\n * @name isFunction\n * @summary Tests for a `function`.\n * @description\n * Checks to see if the input value is a JavaScript function.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isFunction } from '@polkadot/util';\n *\n * isFunction(() => false); // => true\n * ```\n */\nexport function isFunction(value) {\n  return typeof value === 'function';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from \"./function.js\";\nimport { isObject } from \"./object.js\";\nexport function isOn(...fns) {\n  return value => (isObject(value) || isFunction(value)) && fns.every(f => isFunction(value[f]));\n}\nexport function isOnObject(...fns) {\n  return value => isObject(value) && fns.every(f => isFunction(value[f]));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const REGEX_HEX_PREFIXED = /^0x[\\da-fA-F]+$/;\nexport const REGEX_HEX_NOPREFIX = /^[\\da-fA-F]+$/;\n/**\n * @name isHex\n * @summary Tests for a hex string.\n * @description\n * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isHex } from '@polkadot/util';\n *\n * isHex('0x1234'); // => true\n * isHex('0x1234', 8); // => false\n * ```\n */\n\nexport function isHex(value, bitLength = -1, ignoreLength) {\n  return typeof value === 'string' && (value === '0x' || REGEX_HEX_PREFIXED.test(value)) && (bitLength === -1 ? ignoreLength || value.length % 2 === 0 : value.length === 2 + Math.ceil(bitLength / 4));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isNull\n * @summary Tests for a `null` values.\n * @description\n * Checks to see if the input value is `null`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isNull } from '@polkadot/util';\n *\n * console.log('isNull', isNull(null)); // => true\n * ```\n */\nexport function isNull(value) {\n  return value === null;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isNumber\n * @summary Tests for a JavaScript number.\n * @description\n * Checks to see if the input value is a valid number.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isNumber } from '@polkadot/util';\n *\n * console.log('isNumber', isNumber(1234)); // => true\n * ```\n */\nexport function isNumber(value) {\n  return typeof value === 'number';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isObject\n * @summary Tests for an `object`.\n * @description\n * Checks to see if the input value is a JavaScript object.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isObject } from '@polkadot/util';\n *\n * isObject({}); // => true\n * isObject('something'); // => false\n * ```\n */\nexport function isObject(value) {\n  return !!value && typeof value === 'object';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isString\n * @summary Tests for a string.\n * @description\n * Checks to see if the input value is a JavaScript string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isString } from '@polkadot/util';\n *\n * console.log('isString', isString('test')); // => true\n * ```\n */\nexport function isString(value) {\n  return typeof value === 'string' || value instanceof String;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isU8a\n * @summary Tests for a `Uint8Array` object instance.\n * @description\n * Checks to see if the input object is an instance of `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isUint8Array } from '@polkadot/util';\n *\n * console.log('isU8a', isU8a([])); // => false\n * ```\n */\nexport function isU8a(value) {\n  return value instanceof Uint8Array;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isUndefined\n * @summary Tests for a `undefined` values.\n * @description\n * Checks to see if the input value is `undefined`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isUndefined } from '@polkadot/util';\n *\n * console.log('isUndefined', isUndefined(void(0))); // => true\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isUndefined(value) {\n  return typeof value === 'undefined';\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isUndefined } from \"./is/undefined.js\";\nexport function lazyMethod(result, item, creator, getName) {\n  const name = getName ? getName(item) : item.toString();\n  let value;\n  Object.defineProperty(result, name, {\n    // This allows for re-configuration with the embedded defineProperty below\n    // and ensures that on tested browsers and Node, it _will_ be redefined\n    // and thus short-circuited for future access\n    configurable: true,\n    enumerable: true,\n    // Use a function here, we don't want to capture the outer this, i.e.\n    // don't use arrow functions in this context since we have a this inside\n    get: function () {\n      // This check should _always_ be false and unneeded, since we override\n      // with a value below ... however we ensure we are quire vigilant against\n      // all environment failures, so we are rather be safe than sorry\n      if (isUndefined(value)) {\n        value = creator(item);\n\n        try {\n          // re-define the property as a value, next time around this\n          // getter will only return the computed value\n          Object.defineProperty(this, name, {\n            value\n          });\n        } catch {// ignore any errors, since this _should_ not happen due to\n          // the \"configurable\" property above. But if it ever does\n          // from here-on we will be the cached value the next time\n          // around (with a very slight dip in performance)\n        }\n      }\n\n      return value;\n    }\n  });\n}\nexport function lazyMethods(result, items, creator, getName) {\n  for (let i = 0; i < items.length; i++) {\n    lazyMethod(result, items[i], creator, getName);\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nfunction zeroPad(value) {\n  return value.toString().padStart(2, '0');\n}\n\nexport function formatDate(date) {\n  const year = date.getFullYear().toString();\n  const month = zeroPad(date.getMonth() + 1);\n  const day = zeroPad(date.getDate());\n  const hour = zeroPad(date.getHours());\n  const minute = zeroPad(date.getMinutes());\n  const second = zeroPad(date.getSeconds());\n  return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { formatDate } from \"./format/formatDate.js\";\nimport { isBn } from \"./is/bn.js\";\nimport { isBuffer } from \"./is/buffer.js\";\nimport { isFunction } from \"./is/function.js\";\nimport { isObject } from \"./is/object.js\";\nimport { isU8a } from \"./is/u8a.js\";\nimport { u8aToHex } from \"./u8a/toHex.js\";\nimport { u8aToU8a } from \"./u8a/toU8a.js\";\nimport { hasProcess } from \"./has.js\";\nconst logTo = {\n  debug: 'log',\n  error: 'error',\n  log: 'log',\n  warn: 'warn'\n};\n\nfunction formatOther(value) {\n  if (value && isObject(value) && value.constructor === Object) {\n    const result = {};\n\n    for (const k of Object.keys(value)) {\n      result[k] = loggerFormat(value[k]);\n    }\n\n    return result;\n  }\n\n  return value;\n}\n\nexport function loggerFormat(value) {\n  if (Array.isArray(value)) {\n    return value.map(loggerFormat);\n  } else if (isBn(value)) {\n    return value.toString();\n  } else if (isU8a(value) || isBuffer(value)) {\n    return u8aToHex(u8aToU8a(value));\n  }\n\n  return formatOther(value);\n}\n\nfunction formatWithLength(maxLength) {\n  return v => {\n    if (maxLength <= 0) {\n      return v;\n    }\n\n    const r = `${v}`;\n    return r.length < maxLength ? v : `${r.substr(0, maxLength)} ...`;\n  };\n}\n\nfunction apply(log, type, values, maxSize = -1) {\n  if (values.length === 1 && isFunction(values[0])) {\n    const fnResult = values[0]();\n    return apply(log, type, Array.isArray(fnResult) ? fnResult : [fnResult], maxSize);\n  }\n\n  console[logTo[log]](formatDate(new Date()), type, ...values.map(loggerFormat).map(formatWithLength(maxSize)));\n}\n\nfunction noop() {// noop\n}\n\nfunction isDebugOn(e, type) {\n  return !!e && (e === '*' || type === e || e.endsWith('*') && type.startsWith(e.slice(0, -1)));\n}\n\nfunction isDebugOff(e, type) {\n  return !!e && e.startsWith('-') && (type === e.slice(1) || e.endsWith('*') && type.startsWith(e.slice(1, -1)));\n}\n\nfunction getDebugFlag(env, type) {\n  let flag = false;\n\n  for (const e of env) {\n    if (isDebugOn(e, type)) {\n      flag = true;\n    } else if (isDebugOff(e, type)) {\n      flag = false;\n    }\n  }\n\n  return flag;\n}\n\nfunction parseEnv(type) {\n  const env = (hasProcess ? process : {}).env || {};\n  const maxSize = parseInt(env.DEBUG_MAX || '-1', 10);\n  return [getDebugFlag((env.DEBUG || '').toLowerCase().split(','), type), isNaN(maxSize) ? -1 : maxSize];\n}\n/**\n * @name Logger\n * @summary Creates a consistent log interface for messages\n * @description\n * Returns a `Logger` that has `.log`, `.error`, `.warn` and `.debug` (controlled with environment `DEBUG=typeA,typeB`) methods. Logging is done with a consistent prefix (type of logger, date) followed by the actual message using the underlying console.\n * @example\n * <BR>\n *\n * ```javascript\n * import { logger } from '@polkadot';\n *\n * const l = logger('test');\n * ```\n */\n\n\nexport function logger(_type) {\n  const type = `${_type.toUpperCase()}:`.padStart(16);\n  const [isDebug, maxSize] = parseEnv(_type.toLowerCase());\n  return {\n    debug: isDebug ? (...values) => apply('debug', type, values, maxSize) : noop,\n    error: (...values) => apply('error', type, values),\n    log: (...values) => apply('log', type, values),\n    noop,\n    warn: (...values) => apply('warn', type, values)\n  };\n}","// Copyright 2017-2022 @polkadot/x-bigint authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { xglobal } from '@polkadot/x-global';\nexport { packageInfo } from \"./packageInfo.js\";\nexport const BigInt = typeof xglobal.BigInt === 'function' && typeof xglobal.BigInt.asIntN === 'function' ? xglobal.BigInt : () => Number.NaN;","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isUndefined } from \"../is/undefined.js\";\n/**\n * @name objectProperty\n * @summary Assign a get property on the input object\n */\n\nexport function objectProperty(that, key, getter) {\n  // We use both the hasOwnProperty as well as isUndefined checks here, since it may be set\n  // in inherited classes and _Own_ properties refers to the class only, not only parents\n  if (!Object.prototype.hasOwnProperty.call(that, key) && isUndefined(that[key])) {\n    Object.defineProperty(that, key, {\n      enumerable: true,\n      // Since we don't use any additional this internally, we can use arrow (unlike lazy)\n      // Unlike in lazy, we always call into the upper function, i.e. this method\n      // does not cache old values (it is expected to be used for dynamic values)\n      get: () => getter(key)\n    });\n  }\n}\n/**\n * @name objectProperties\n * @summary Assign get properties on the input object\n */\n\nexport function objectProperties(that, keys, getter) {\n  for (let i = 0; i < keys.length; i++) {\n    objectProperty(that, keys[i], k => getter(k, i));\n  }\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name objectKeys\n * @summary A version of Object.keys that is typed for TS\n */\nexport function objectKeys(value) {\n  return Object.keys(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectKeys } from \"./keys.js\";\n/**\n * @name objectSpread\n * @summary Concats all sources into the destination\n */\n\nexport function objectSpread(dest, ...sources) {\n  for (let i = 0; i < sources.length; i++) {\n    const src = sources[i];\n\n    if (src) {\n      const keys = objectKeys(src);\n\n      for (let j = 0; j < keys.length; j++) {\n        const key = keys[j];\n        dest[key] = src[key];\n      }\n    }\n  }\n\n  return dest;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Inspired from https://stackoverflow.com/a/2970667\n//\n// this is not as optimal as the original answer (we split into multiple),\n// however it does pass the tests (which the original doesn't) and it is still\n// a 10+x improvement over the original camelcase npm package (at running)\n//\n// original: 20.88 μs/op\n//     this:  2.86 μs/op\n//\n// Caveat of this: only Ascii, but acceptable for the intended usecase\nfunction converter(fn) {\n  const format = (w, i) => fn(w[0], i) + w.slice(1);\n\n  return value => value.toString() // replace all seperators (including consequtive) with spaces\n  .replace(/[-_., ]+/g, ' ') // we don't want leading or trailing spaces\n  .trim() // split into words\n  .split(' ') // apply the formatting\n  .map((w, i) => format(w.toUpperCase() === w // all full uppercase + letters are changed to lowercase\n  ? w.toLowerCase() // all consecutive capitals + letters are changed to lowercase\n  // e.g. UUID64 -> uuid64, while preserving splits, eg. NFTOrder -> nftOrder\n  : w.replace(/^[A-Z0-9]{2,}[^a-z]/, w => w.slice(0, w.length - 1).toLowerCase() + w.slice(-1).toUpperCase()), i)) // combine into a single word\n  .join('');\n}\n/**\n * @name stringCamelCase\n * @summary Convert a dash/dot/underscore/space separated Ascii string/String to camelCase\n */\n\n\nexport const stringCamelCase = converter((w, i) => i ? w.toUpperCase() : w.toLowerCase());\n/**\n * @name stringPascalCase\n * @summary Convert a dash/dot/underscore/space separated Ascii string/String to PascalCase\n */\n\nexport const stringPascalCase = converter(w => w.toUpperCase());","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { extractGlobal } from '@polkadot/x-global';\nimport { TextEncoder as Fallback } from \"./fallback.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nexport const TextEncoder = extractGlobal('TextEncoder', Fallback);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { TextEncoder } from '@polkadot/x-textencoder';\nconst encoder = new TextEncoder();\n/**\n * @name stringToU8a\n * @summary Creates a Uint8Array object from a utf-8 string.\n * @description\n * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringToU8a } from '@polkadot/util';\n *\n * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\nexport function stringToU8a(value) {\n  return value ? encoder.encode(value.toString()) : new Uint8Array();\n}","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// This is very limited, only handling Ascii values\nexport class TextEncoder {\n  encode(value) {\n    const u8a = new Uint8Array(value.length);\n\n    for (let i = 0; i < value.length; i++) {\n      u8a[i] = value.charCodeAt(i);\n    }\n\n    return u8a;\n  }\n\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isBigInt } from \"./is/bigInt.js\";\n/** @internal */\n\nfunction replacer(_, v) {\n  return isBigInt(v) ? v.toString() : v;\n}\n/**\n * @name stringify\n * @summary Performs a JSON.stringify, with BigInt handling\n * @description A wrapper for JSON.stringify that handles BigInt values transparently, converting them to string. No differences from the native JSON.stringify function otherwise.\n */\n\n\nexport function stringify(value, space) {\n  return JSON.stringify(value, replacer, space);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from \"./toU8a.js\";\n/**\n * @name u8aConcat\n * @summary Creates a concatenated Uint8Array from the inputs.\n * @description\n * Concatenates the input arrays into a single `UInt8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { { u8aConcat } from '@polkadot/util';\n *\n * u8aConcat(\n *   new Uint8Array([1, 2, 3]),\n *   new Uint8Array([4, 5, 6])\n * ); // [1, 2, 3, 4, 5, 6]\n * ```\n */\n\nexport function u8aConcat(...list) {\n  let length = 0;\n  let offset = 0;\n  const u8as = new Array(list.length);\n\n  for (let i = 0; i < list.length; i++) {\n    u8as[i] = u8aToU8a(list[i]);\n    length += u8as[i].length;\n  }\n\n  const result = new Uint8Array(length);\n\n  for (let i = 0; i < u8as.length; i++) {\n    result.set(u8as[i], offset);\n    offset += u8as[i].length;\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from \"./toU8a.js\";\n/**\n * @name u8aEq\n * @summary Compares two Uint8Arrays for equality.\n * @description\n * For `UInt8Array` (or hex string) input values true if there is a match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */\n\nexport function u8aEq(a, b) {\n  const u8aa = u8aToU8a(a);\n  const u8ab = u8aToU8a(b);\n\n  if (u8aa.length === u8ab.length) {\n    const dvA = new DataView(u8aa.buffer, u8aa.byteOffset);\n    const dvB = new DataView(u8ab.buffer, u8ab.byteOffset);\n    const mod = u8aa.length % 4;\n    const length = u8aa.length - mod;\n\n    for (let i = 0; i < length; i += 4) {\n      if (dvA.getUint32(i) !== dvB.getUint32(i)) {\n        return false;\n      }\n    }\n\n    for (let i = length; i < u8aa.length; i++) {\n      if (u8aa[i] !== u8ab[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToBn } from \"../hex/toBn.js\";\nimport { u8aToHex } from \"./toHex.js\";\nconst DEFAULT_OPTS = {\n  isLe: true,\n  isNegative: false\n};\n/**\n * @name u8aToBn\n * @summary Creates a BN from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual BN. `null` or `undefined` values returns an `0x0` value.\n * @param value The value to convert\n * @param options Options to pass while converting\n * @param options.isLe Convert using Little Endian\n * @param options.isNegative Convert using two's complement\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToBn } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */\n\nexport function u8aToBn(value, options = DEFAULT_OPTS) {\n  return hexToBn(u8aToHex(value), options);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { U8_TO_HEX, U16_TO_HEX } from \"../hex/alphabet.js\";\n/** @internal */\n\nfunction hex(value) {\n  const mod = value.length % 2;\n  const length = value.length - mod;\n  const dv = new DataView(value.buffer, value.byteOffset);\n  let result = '';\n\n  for (let i = 0; i < length; i += 2) {\n    result += U16_TO_HEX[dv.getUint16(i)];\n  }\n\n  if (mod) {\n    result += U8_TO_HEX[dv.getUint8(length)];\n  }\n\n  return result;\n}\n/**\n * @name u8aToHex\n * @summary Creates a hex string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual hex string. `null` or `undefined` values returns an `0x` string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToHex } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */\n\n\nexport function u8aToHex(value, bitLength = -1, isPrefixed = true) {\n  const length = Math.ceil(bitLength / 8);\n  return `${isPrefixed ? '0x' : ''}${!value || !value.length ? '' : length > 0 && value.length > length ? `${hex(value.subarray(0, length / 2))}…${hex(value.subarray(value.length - length / 2))}` : hex(value)}`;\n}","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { extractGlobal } from '@polkadot/x-global';\nimport { TextDecoder as Fallback } from \"./fallback.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nexport const TextDecoder = extractGlobal('TextDecoder', Fallback);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { TextDecoder } from '@polkadot/x-textdecoder';\nconst decoder = new TextDecoder('utf-8');\n/**\n * @name u8aToString\n * @summary Creates a utf-8 string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToString } from '@polkadot/util';\n *\n * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello\n * ```\n */\n\nexport function u8aToString(value) {\n  return !(value !== null && value !== void 0 && value.length) ? '' : decoder.decode(value);\n}","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// This is very limited, only handling Ascii values\nexport class TextDecoder {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-useless-constructor\n  constructor(_) {// nothing\n  }\n\n  decode(value) {\n    let result = '';\n\n    for (let i = 0; i < value.length; i++) {\n      result += String.fromCharCode(value[i]);\n    }\n\n    return result;\n  }\n\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToU8a } from \"../hex/toU8a.js\";\nimport { isBuffer } from \"../is/buffer.js\";\nimport { isHex } from \"../is/hex.js\";\nimport { isU8a } from \"../is/u8a.js\";\nimport { stringToU8a } from \"../string/toU8a.js\";\n/**\n * @name u8aToU8a\n * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.\n * @description\n * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToU8a } from '@polkadot/util';\n *\n * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])\n * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])\n * ```\n */\n\nexport function u8aToU8a(value) {\n  return !value ? new Uint8Array() : Array.isArray(value) || isBuffer(value) ? new Uint8Array(value) : isU8a(value) ? value : isHex(value) ? hexToU8a(value) : stringToU8a(value);\n}","// Copyright 2017-2022 @polkadot/x-global authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport { packageInfo } from \"./packageInfo.js\";\n\nfunction evaluateThis(fn) {\n  return fn('return this');\n}\n\nexport const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);\nexport function extractGlobal(name, fallback) {\n  return typeof xglobal[name] === 'undefined' ? fallback : xglobal[name];\n}\nexport function exposeGlobal(name, fallback) {\n  if (typeof xglobal[name] === 'undefined') {\n    xglobal[name] = fallback;\n  }\n}","export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nexport let OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n","import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport let Kind;\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n","import { inspect } from './inspect.mjs';\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\n\nexport const instanceOf =\n  /* c8 ignore next 5 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  process.env.NODE_ENV === 'production'\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = inspect(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      devAssert(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      devAssert(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n"],"names":["module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","this","negative","words","length","red","_init","Buffer","wordSize","window","require","e","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","b","len","Math","min","i","move","dest","src","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","assertNumber","Number","isSafeInteger","chain","wrap","args","encode","from","reverse","reduce","decode","alphabet","digits","map","letter","indexOf","join","separator","to","chr","data","push","slice","normalize","fn","convertRadix","pos","forEach","d","done","digit","digitBase","floor","radix2carry","convertRadix2","radix","bytes","Uint8Array","radix2","revPadding","unsafeWrapper","apply","checksum","set","payload","newChecksum","oldChecksum","toUpperCase","genBase58","abc","XMR_BLOCK_LEN","block","subarray","padStart","blockLen","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","encodingConst","v","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","TypeError","lowered","toLowerCase","sepIndex","lastIndexOf","sum","endsWith","actualLength","decodeToBytes","decodeUnsafe","TextDecoder","TextEncoder","CODERS","utf8","hex","base16","base32","base64","base64url","base58","base58xmr","coderTypeError","Object","keys","type","hasOwnProperty","GLOBAL","Big","MAX_DP","MAX_POWER","NAME","INVALID","INVALID_DP","DIV_BY_ZERO","P","UNDEFINED","NUMERIC","sd","rm","more","xc","RM","unshift","pop","stringify","doExponential","isNonzero","charAt","isneg","yc","dp","DP","bl","bt","ri","bz","ai","al","rl","qc","qi","minus","xlty","plus","xe","ye","ygtx","times","prec","toExponential","toFixed","NE","PE","strict","toPrecision","valueOf","_Big_","String","nl","test","search","substring","parse","roundDown","roundHalfUp","roundHalfEven","roundUp","define","__assign","assign","arguments","create","_classExtractFieldDescriptor","receiver","privateMap","action","has","get","_classPrivateFieldGet","descriptor","value","classExtractFieldDescriptor","_classPrivateFieldInitSpec","obj","privateCollection","_classPrivateFieldSet","writable","_defineProperty","key","defineProperty","enumerable","configurable","SIGMA","BLAKE2","Hash","outputLen","opts","keyLen","saltLen","persLen","super","finished","destroyed","salt","personalization","buffer32","u32","buffer","update","toBytes","compress","take","dataOffset","byteOffset","data32","Uint32Array","pos32","digestInto","fill","out32","digest","destroy","_cloneInto","dkLen","IV","BUF","G1","Xl","Xh","Al","Ah","Bl","Bh","Cl","Ch","Dl","Dh","ll","u64","G2","BLAKE2b","blake2","v0l","v0h","v1l","v1h","v2l","v2h","v3l","v3h","v4l","v4h","v5l","v5h","v6l","v6h","v7l","v7h","keyLength","pers","offset","isLast","BigInt","blake2b","wrapConstructorWithOpts","crypto","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","R","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","posOut","state","state32","keccak","idx1","idx0","B0","B1","Th","Tl","curH","curL","keccakP","finish","writeInto","xofInto","xof","gen","wrapConstructor","keccak_256","keccak_512","genShake","knownLedger","bifrost","centrifuge","edgeware","equilibrium","genshiro","kusama","polkadot","polymesh","sora","statemine","statemint","xxnetwork","knownGenesis","acala","astar","basilisk","hydradx","karura","kulupu","picasso","rococo","stafi","subsocial","westend","knownIcon","westmint","knownTestnet","jupiter","subspace_testnet","UNSORTED","TESTNETS","availableNetworks","knownSubstrate","network","nameParts","slip44","hasLedgerSupport","genesisHash","icon","isTestnet","includes","isIgnored","standardAccount","decimals","symbols","filter","sort","isUnSortedA","displayName","localeCompare","ZERO_STR","DEFAULT_OPTS","isLe","isNegative","MUL_P","FORMATTERS","BN_QUINTILL","BN_BILLION","BN_MILLION","BN_HUNDRED","AbstractInt","registry","isSigned","isU8a","u8aToBn","isBn","isHex","hexToBn","isNumber","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","isString","bnToBn","decodeAbstractInt","encodedLength","isPositive","BN_ZERO","maxBits","toRawType","hash","toU8a","isEmpty","isUnsigned","other","outer","isMax","toBigInt","toBn","toHex","arg1","arg2","u8aToHex","bnToU8a","objectSpread","bnToHex","toHuman","isExpanded","rawType","formatBalance","chainDecimals","withSi","withUnit","chainTokens","divisor","find","toPercentage","formatNumber","createClassUnsafe","isBare","UInt","typeName","MAX_LENGTH","decodeBytes","u8aToU8a","Raw","compactFromU8a","decodeBytesU8a","Bytes","u8a","decodedLength","compactToU8a","clength","compactAddLength","FORMAT","isAsciiByte","isAsciiChar","isAscii","isStringIn","every","initialU8aLength","isUndefined","isUtf8","some","begin","text","toUtf8","u8aToString","Struct","Map","Types","jsonMap","typeMap","mapToTypeMap","decoded","decodeU8a","jsonObj","inputKeys","typeofArray","typeofMap","isObject","raw","jsonKey","Type","entries","stringCamelCase","error","message","decodeStructFromObject","objectProperties","defKeys","getT","values","result","defs","compareMap","getAtIndex","inner","isExtended","json","typesToMap","encoded","isFunction","isBoolean","u8aConcat","compareMapArray","notEntry","hasEq","hasMismatch","formatFailure","getRawType","types","withZip","decodeU8aVec","count","typeToConstructor","BOUNDED","ALLOWED_BOXES","BOX_PRECEDING","mappings","alias","findClosing","substr","removeExtensions","from1","from2","from3","from4","from5","from6","lastIndex","removeTraits","replacer","replaceTagWith","removePairOf","check","removeWrap","box","flattenSingleTuple","allowNamespaces","depth","withChecks","RegExp","matcher","isSized","tag","parts","trim","sanitizeMap","sanitize","options","memoized","getClassName","TypeDefInfo","isNotNested","counters","counter","KNOWN_INTERNALS","getTypeString","typeOrObj","JSON","_decodeEnum","details","fallbackType","info","isRustEnum","getTypeDef","_decodeTuple","subType","cDepth","fDepth","sDepth","tDepth","extract","typeSplit","_decodeAnyInt","clazz","strLength","parseInt","hasWrapper","nestedExtraction","vecType","parsed","_enum","_fallback","_bitLength","startsWith","_decodeSet","_set","_alias","NAME_LENGTH","wrappedExtraction","extractSubType","_type","nested","wrapped","XCM_MAPPINGS","mapXcmTypes","version","all","lazyVariants","lookup","getName","creator","variants","getSiType","def","asVariant","lazyMethod","Json","decodeJson","DoNotConstruct","compareArray","AbstractArray","inspectInner","toU8aInner","callbackfn","thisArg","Null","isNull","extractDef","_def","isBasic","isIndexed","defValues","createFromValue","entry","decodeFromJSON","keyLower","Enum","decodeEnum","asKeys","isKeys","stringPascalCase","isNone","defIndexes","_toRawStruct","isArrayLike","arg","isCodec","isEnum","isNumberLike","isBigInt","sortAsc","sortRes","minLen","sortArray","logger","decodeMapFromMap","KeyClass","ValClass","isComplex","decodeMap","keyType","valType","decodeMapFromU8a","CodecMap","rawValue","keyA","keyB","BTreeMap","compareSetArray","decodeSet","Set","decodeSetFromU8a","decodeSetFromSet","BTreeSet","strings","Compact","decodeCompact","bn","unwrap","HashMap","Int","checkCodec","isOnObject","checkRegistry","None","Option","decodeOption","isSome","unwrapOr","defaultValue","unwrapOrDefault","Tuple","Classes","decodeTuple","T","Range","rangeName","RangeInclusive","Result","Ok","Err","asErr","isErr","asError","asOk","isOk","isError","encodeSet","setValues","decodeSetArray","decodeSetNumber","_value","computed","CodecSet","valueEncoded","decodeVec","_offset","_length","Vec","Clazz","_other","U8aFixed","decodeU8aFixed","VecFixed","decodedLengthNoOffset","decodeVecFixed","WrapperKeepOpaque","opaqueName","compactStripLength","instance","decodeRaw","isDecoded","assertReturn","WrapperOpaque","getTypeDefType","lookupName","getSubDefArray","getSubType","getSubDef","getTypeClassMap","subs","getTypeClassArray","createInt","with","createHashMap","valueType","createWithSub","infoMapping","previous","getOrUnknown","getTypeClass","typeDef","getUnsafe","isLookupType","checkInstance","created","u8aEq","checkPedantic","isPedantic","initType","params","blockHash","isOptional","createdAtHash","createTypeUnsafe","firstError","__fallbackType","emptyCheck","extrinsic","LimitParathreadCommits","OnlyStakingAndClaims","PrevalidateAttests","RestrictFunctionality","TransactionCallFilter","ValidateDoubleVoteReports","shell","DisallowSigned","CheckMortality","era","substrate","ChargeTransactionPayment","tip","CheckBlockGasLimit","CheckEra","CheckGenesis","CheckNonZeroSender","CheckNonce","nonce","CheckSpecVersion","specVersion","CheckTxVersion","transactionVersion","CheckVersion","CheckWeight","LockStakingStatus","ValidateEquivocationReport","allExtensions","ChargeAssetTxPayment","assetId","fallbackExtensions","expandExtensionTypes","extensions","userExtensions","GenericEventData","meta","section","method","fields","createLookupType","GenericEvent","DataType","findMetaEvent","decodeEvent","docs","Base","EMPTY_U8A","IMMORTAL_ERA","VERSIONS","newFromValue","GenericExtrinsic","ExtrinsicBase","signKeys","getSignedExtensionTypes","getter","signature","objectProperty","argsDef","callIndex","signer","is","decodeExtrinsic","addSignature","sign","account","signFake","decodeMortalEra","U64","first","second","period","quantizeFactor","phase","decodeMortalU8a","calPeriod","log2","quantizedPhase","decodeMortalObject","decodeExtrinsicEra","GenericExtrinsicEra","hexToU8a","mortal","immortal","MortalEra","ImmortalEra","trailingZeros","binary","getTrailingZeros","birth","death","isImmortalEra","asImmortalEra","asMortalEra","isMortalEra","GenericExtrinsicPayload","decodeExtrinsicPayload","signerPair","GenericExtrinsicPayloadUnknown","GenericExtrinsicUnknown","knownTypes","address","blockNumber","runtimeVersion","signedExtensions","GenericSignerPayload","extensionTypes","getSignedExtensionExtra","toPayload","toRaw","GenericExtrinsicV4","GenericExtrinsicPayloadV4","withType","FAKE_SIGNATURE","toAddress","GenericExtrinsicSignatureV4","signTypes","decodeExtrinsicSignature","multiSignature","_injectSignature","createPayload","addressRaw","keccakAsU8a","createDualHasher","keccak256","keccak512","keccak256Js","keccak512Js","createBitHasher","createAsHex","isEthereumAddress","_address","char","byte","isEthereumChecksum","_3n","_8n","POW_2_256","CURVE","Gx","Gy","beta","weistrass","x3","USE_ENDOMORPHISM","JacobianPoint","Point","points","toInv","nums","scratch","inverted","invert","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","equals","X1","Y1","Z1","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","negate","double","E","F","X3","Y3","Z3","H","ZERO","HH","HHH","V","subtract","multiplyUnsafe","scalar","normalizeScalar","BASE","P0","k1neg","k1","k2neg","k2","splitScalarEndo","k1p","k2p","precomputeWindow","W","windows","wNAF","affinePoint","_WINDOW_SIZE","precomputes","pointPrecomputes","normalizeZ","f","windowSize","maxNumber","shiftBy","wbits","pr","cached","multiply","point","fake","f1p","f2p","invZ","iz1","iz2","iz3","ax","ay","WeakMap","_setWindowSize","delete","isShort","bytesToNumber","isValidFieldElement","_6n","_11n","_22n","_23n","_44n","_88n","pow2","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","assertValidity","ensureBytes","header","fromCompressedHex","fromUncompressedHex","privateKey","normalizePrivateKey","msgHash","recovery","truncateHash","normalizeSignature","fromHex","numTo32bStr","u1","u2","Q","multiplyAndAddUnsafe","toRawBytes","isCompressed","hexToBytes","toHexX","toRawX","aP","bQ","sliceDER","parseDERInt","bytesToHex","Signature","arr","isUint8a","hexToNumber","sBytes","rBytesLeft","parseDERSignature","fromDER","isWithinCurveOrder","hasHighS","HALF","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toCompactRawBytes","toCompactHex","hexes","uint8a","array","hexByte","isNaN","power","modulo","divNearest","POW_2_128","c1","c2","fromCompact","BN_BE_256_OPTS","getH160","publicKey","onlyJs","hasBigInt","isReady","wasm","secp256k1Expand","decodeAccountId","GenericEthereumAccountId","addressOrPublic","u8aAddress","ethereumEncode","encodeAddress","ss58Format","defaults","decodeAddress","base58Encode","sshash","MAX_1BYTE","MAX_2BYTE","MAX_4BYTE","decodeAccountIndex","GenericAccountIndex","calcLength","chainSS58","ACCOUNT_ID_PREFIX","decodeAddressOrIndex","GenericEthereumLookupSource","readLength","decodeString","rawLength","_rawLength","writeLength","GenericAccountId","GenericBlock","extrinsics","contentHash","getArgsDef","decodeCallViaObject","_meta","lookupIndex","GenericCallIndex","findMetaCall","decodeCallViaU8a","GenericCall","decodeCall","argsEntries","_call","_call2","createValue","asArray","decodeValue","tokenDecimals","tokenSymbol","GenericChainProperties","CID_AURA","stringToU8a","CID_BABE","CID_GRPA","CID_POW","GenericConsensusEngineId","isAura","isBabe","isGrandpa","isPow","extractAuthor","sessionValidators","slotNumber","getAuraAuthor","getBabeAuthor","getBytesAsAuthor","GenericLookupSource","Id","Address20","Index","GenericMultiAddress","Address32","decodeMultiAny","bool","Boolean","decodeBool","isFalse","isTrue","AYE_BITS","decodeVoteBool","decodeVote","decodeVoteU8a","Bool","aye","conviction","decodeVoteType","GenericVote","isAye","isNay","vote","decodeBitVec","decodeBitVecU8a","BitVec","isMsb","bitVec","i8","i16","i32","i64","i128","i256","Text","decodeText","setOverride","override","u8","u16","u128","u256","usize","decodeData","indicator","decodeDataU8a","Data","BlakeTwo256","Sha256","Keccak256","ShaThree256","isRaw","asRaw","asBlakeTwo256","asKeccak256","asSha256","asShaThree256","isBlakeTwo256","isKeccak256","isSha256","isShaThree256","_classPrivateFieldBase","id","_classPrivateFieldKey","stringIdentity","INFO_WRAP","encodeWithParams","paramsNotation","encodeTypeDef","encodeSubTypes","asEnum","extra","names","encoders","encodeType","withLookup","withTypeString","TYPE_UNWRAP","PRIMITIVE_ALIAS","Char","Str","PATHS_ALIAS","splitNamespace","PATHS_SET","BITVEC_NS","WRAPPERS","RESERVED","PATH_RM_INDEX_1","createNamespace","path","sanitizeDocs","matchParts","suba","subb","extractName","lower","instanceType","extractTypeInfo","portable","nameInfo","extracted","dedup","rewrite","allSame","oName","oIndex","oParams","paramIdx","findIndex","aIndex","adjusted","isPrimitive","asPrimitive","an","bi","hasNoDupes","removeDuplicateNames","lookups","_classPrivateFieldLooseKey","_lookups","_names","_params","_typeDefs","_types","_createSiDef","_getLookupId","_extract","_extractArray","_extractBitSequence","_extractCompact","_extractComposite","_extractCompositeSet","_extractFields","_extractFieldsAlias","_extractHistoric","_extractPrimitive","_extractAliasPath","_extractSequence","_extractTuple","_extractVariant","_extractVariantEnum","PortableRegistry","isContract","_extractVariantEnum2","_extractVariant2","_extractTuple2","_extractSequence2","_extractAliasPath2","_extractPrimitive2","_extractHistoric2","_extractFieldsAlias2","_extractFields2","_extractCompositeSet2","_extractComposite2","_extractCompact2","_extractBitSequence2","_extractArray2","_extract2","_getLookupId2","_createSiDef2","_params2","_classPrivateFieldLooseBase","hasParams","SpRuntimeUncheckedExtrinsic","warn","FrameSystemEventRecord","extractAliases","register","addrParam","sigParam","siAddress","nsSignature","nsAccountId","isMultiAddress","idParam","AccountId","Address","ExtrinsicSignature","registerTypes","lookupId","found","empty","lookupNameRoot","namespace","aliasType","asBitSequence","asCompact","asComposite","asHistoricMetaCompat","asSequence","asTuple","assertUnreachable","bitOrderType","bitStoreType","bitOrder","bitStore","pathFirst","pathLast","isStruct","isTuple","nameField","nameOrig","isFromSi","typeStr","ids","specialVariant","desired","valueToString","getFieldArgs","clearRecord","record","getVariantStringIdx","TypeRegistry","blake2AsU8a","Metadata","baseTypes","definitions","allKnown","createType","_this$chainProperties","allDecimals","_this$chainProperties2","_this$chainProperties3","allTokens","unit","metadata","unknownTypes","clearCache","createClass","findMetaError","errorIndex","eventIndex","withUnknown","knownTypeDef","definition","BaseType","constructTypeClass","getChainProperties","getDefinition","getModuleInstances","specName","moduleName","_this$knownTypes","_this$knownTypes$type","_this$knownTypes$type2","_this$knownTypes$type3","_this$knownTypes$type4","typesBundle","spec","instances","getOrThrow","hasClass","hasDef","hasType","_registerObject","setChainProperties","properties","setHasher","hasher","setKnownTypes","setLookup","setMetadata","asLatest","pallets","filtered","filterCallsSome","calls","sectionIndex","variant","createCallFunction","injectExtrinsics","errors","sectionName","injectErrors","filterEventsSome","events","injectEvents","setSignedExtensions","identifier","original","constants","decorateConstants","system","sS58Prefix","ss58Prefix","extractProperties","unknown","findUnknownExtensions","v11","ErrorMetadataV11","EventMetadataV11","ExtrinsicMetadataV11","FunctionArgumentMetadataV11","FunctionMetadataV11","MetadataV11","modules","ModuleConstantMetadataV11","ModuleMetadataV11","storage","StorageEntryModifierV11","StorageEntryMetadataV11","modifier","fallback","StorageEntryTypeV11","Plain","linked","DoubleMap","key1","key2","key2Hasher","StorageMetadataV11","items","StorageHasherV11","Blake2_128","Blake2_256","Blake2_128Concat","Twox128","Twox256","Twox64Concat","Identity","Si1Variant","v1","Si1Field","Si1LookupTypeId","Si1Path","Si1Type","Si1TypeDef","Composite","Variant","Sequence","Primitive","BitSequence","HistoricMetaCompat","Si1TypeDefArray","Si1TypeDefBitSequence","Si1TypeDefCompact","Si1TypeDefComposite","Si1TypeDefPrimitive","Si1TypeDefSequence","Si1TypeDefTuple","Si1TypeParameter","Si1TypeDefVariant","v14","PortableTypeV14","ErrorMetadataV14","EventMetadataV14","FunctionArgumentMetadataV14","FunctionMetadataV14","ExtrinsicMetadataV14","MetadataV14","PalletCallMetadataV14","PalletConstantMetadataV14","PalletErrorMetadataV14","PalletEventMetadataV14","PalletMetadataV14","PalletStorageMetadataV14","SignedExtensionMetadataV14","additionalSigned","StorageEntryMetadataV14","StorageEntryModifierV14","StorageEntryTypeV14","hashers","StorageHasherV14","rpc","ErrorMetadataV9","EventMetadataV9","FunctionArgumentMetadataV9","FunctionMetadataV9","MetadataV9","ModuleConstantMetadataV9","ModuleMetadataV9","StorageEntryMetadataV9","StorageEntryModifierV9","StorageEntryTypeV9","StorageHasherV9","StorageMetadataV9","ErrorMetadataV10","EventMetadataV10","FunctionArgumentMetadataV10","FunctionMetadataV10","MetadataV10","ModuleConstantMetadataV10","ModuleMetadataV10","StorageEntryModifierV10","StorageEntryMetadataV10","StorageEntryTypeV10","StorageMetadataV10","StorageHasherV10","ErrorMetadataV12","EventMetadataV12","ExtrinsicMetadataV12","FunctionArgumentMetadataV12","FunctionMetadataV12","MetadataV12","ModuleConstantMetadataV12","ModuleMetadataV12","StorageEntryModifierV12","StorageEntryMetadataV12","StorageEntryTypeV12","StorageMetadataV12","StorageHasherV12","ErrorMetadataV13","EventMetadataV13","ExtrinsicMetadataV13","FunctionArgumentMetadataV13","FunctionMetadataV13","MetadataV13","ModuleConstantMetadataV13","ModuleMetadataV13","StorageEntryModifierV13","StorageEntryMetadataV13","StorageEntryTypeV13","NMap","keyVec","StorageMetadataV13","StorageHasherV13","ErrorMetadataLatest","EventMetadataLatest","ExtrinsicMetadataLatest","FunctionArgumentMetadataLatest","FunctionMetadataLatest","MetadataLatest","PalletCallMetadataLatest","PalletConstantMetadataLatest","PalletErrorMetadataLatest","PalletEventMetadataLatest","PalletMetadataLatest","PalletStorageMetadataLatest","PortableType","SignedExtensionMetadataLatest","StorageEntryMetadataLatest","StorageEntryModifierLatest","StorageEntryTypeLatest","StorageHasher","MetadataAll","V0","V1","V2","V3","V4","V5","V6","V7","V8","V9","V10","V11","V12","V13","V14","Si0Field","Si0LookupTypeId","Si0Path","Si0Type","Si0TypeDef","Phantom","Si0TypeDefArray","Si0TypeDefBitSequence","Si0TypeDefCompact","Si0TypeDefComposite","Si0TypeDefPhantom","Si0TypeDefVariant","Si0TypeDefPrimitive","Si0TypeDefSequence","Si0TypeDefTuple","Si0TypeParameter","Si0Variant","discriminant","SiField","SiLookupTypeId","SiPath","SiType","SiTypeDef","SiTypeDefArray","SiTypeDefBitSequence","SiTypeDefCompact","SiTypeDefComposite","SiTypeDefPrimitive","SiTypeDefSequence","SiTypeDefTuple","SiTypeParameter","SiTypeDefVariant","SiVariant","AssetApprovalKey","owner","delegate","AssetApproval","amount","deposit","AssetBalance","balance","isFrozen","isSufficient","AssetDestroyWitness","accounts","sufficients","approvals","AssetDetails","issuer","admin","freezer","supply","minBalance","AssetMetadata","symbol","TAssetBalance","TAssetDepositBalance","UncleEntryItem","InclusionHeight","Uncle","RawAuraPreDigest","epochAuthorship","description","AllowedSlots","BabeAuthorityWeight","BabeEpochConfiguration","allowedSlots","BabeBlockWeight","BabeEquivocationProof","offender","firstHeader","secondHeader","BabeWeight","MaybeRandomness","MaybeVrf","EpochAuthorship","primary","secondary","secondary_vrf","NextConfigDescriptor","NextConfigDescriptorV1","Randomness","RawBabePreDigest","Primary","SecondaryPlain","SecondaryVRF","RawBabePreDigestPrimary","authorityIndex","vrfOutput","vrfProof","RawBabePreDigestSecondaryPlain","RawBabePreDigestSecondaryVRF","RawBabePreDigestTo159","Secondary","RawBabePreDigestPrimaryTo159","weight","RawBabePreDigestSecondaryTo159","RawBabePreDigestCompat","Zero","One","Two","Three","SlotNumber","VrfData","VrfOutput","VrfProof","AccountData","free","reserved","miscFrozen","feeFrozen","BalanceLockTo212","until","reasons","BalanceLock","BalanceStatus","Reasons","ReserveData","ReserveIdentifier","VestingSchedule","perBlock","startingBlock","WithdrawReasons","TransactionPayment","Transfer","Reserve","Fee","Tip","subscribeJustifications","pubsub","getFinalizedHead","BeefyCommitment","validatorSetId","BeefyId","BeefySignedCommitment","commitment","signatures","BeefyNextAuthoritySet","root","BeefyPayload","MmrRootHash","ValidatorSetId","CollectiveOrigin","Members","Member","MemberCount","ProposalIndex","VotesTo230","threshold","ayes","nays","Votes","AuthorityId","RawVRFOutput","isHistoric","instantiate","isHstoric","uploadCode","endpoint","getStorage","rentProjection","AliveContractInfo","trieId","storageSize","pairCount","codeHash","rentAllowance","rentPaid","deductBlock","lastWrite","_reserved","CodeHash","CodeSource","Upload","Existing","CodeUploadRequest","origin","code","storageDepositLimit","CodeUploadResult","CodeUploadResultValue","ContractCallRequest","gasLimit","inputData","ContractExecResultSuccessTo255","status","ContractExecResultTo255","Success","ContractExecResultSuccessTo260","flags","gasConsumed","ContractExecResultTo260","ContractExecResultErrModule","ContractExecResultErr","Other","CannotLookup","BadOrigin","Module","ContractExecResultOk","ContractExecResultResult","ContractExecResultTo267","debugMessage","ContractExecResult","gasRequired","storageDeposit","ContractInfo","Alive","Tombstone","ContractCallFlags","ForwardInput","CloneInput","TailCall","AllowReentry","ContractReturnFlags","Revert","ContractStorageKey","DeletedContract","ExecReturnValue","Gas","HostFnWeightsTo264","caller","gasLeft","valueTransferred","minimumBalance","tombstoneDeposit","now","weightToFee","gas","inputPerByte","return","returnPerByte","terminate","restoreTo","restoreToPerDelta","random","depositEvent","depositEventPerTopic","depositEventPerByte","setRentAllowance","setStorage","setStoragePerByte","clearStorage","getStoragePerByte","transfer","callTransferSurcharge","callPerInputByte","callPerOutputByte","instantiatePerInputByte","instantiatePerOutputByte","hashSha2256","hashSha2256PerByte","hashKeccak256","hashKeccak256PerByte","hashBlake2256","hashBlake2256PerByte","hashBlake2128","hashBlake2128PerByte","HostFnWeights","terminatePerCodeByte","restoreToPerCallerCodeByte","restoreToPerTombstoneCodeByte","callPerCodeByte","instantiatePerCodeByte","instantiatePerSaltByte","rentParams","InstantiateRequestV1","InstantiateRequestV2","InstantiateRequest","ContractInstantiateResultTo267","ContractInstantiateResultTo299","ContractInstantiateResult","InstantiateReturnValueTo267","accountId","InstantiateReturnValueOk","InstantiateReturnValue","InstructionWeights","i64const","i64load","i64store","select","rIf","br","brIf","brIable","brIablePerEntry","callIndirect","callIndirectPerParam","localGet","localSet","local_tee","globalGet","globalSet","memoryCurrent","memoryGrow","i64clz","i64ctz","i64popcnt","i64eqz","i64extendsi32","i64extendui32","i32wrapi64","i64eq","i64ne","i64lts","i64ltu","i64gts","i64gtu","i64les","i64leu","i64ges","i64geu","i64add","i64sub","i64mul","i64divs","i64divu","i64rems","i64remu","i64and","i64or","i64xor","i64shl","i64shrs","i64shru","i64rotl","i64rotr","LimitsTo264","eventTopics","stackHeight","globals","parameters","memoryPages","tableSize","brTableSize","subjectLen","codeSize","Limits","PrefabWasmModule","scheduleVersion","initial","maximum","refcount","originalCodeLen","RentProjection","EvictionAt","NoEviction","ScheduleTo212","putCodePerByteCost","growMemCost","regularOpCost","returnDataPerByteCost","eventDataPerByteCost","eventPerTopicCost","eventBaseCost","sandboxDataReadCost","sandboxDataWriteCost","maxEventTopics","maxStackHeight","maxMemoryPages","enablePrintln","maxSubjectLen","ScheduleTo258","transferCost","ScheduleTo264","limits","instructionWeights","hostFnWeights","Schedule","SeedOf","StorageDeposit","Refund","Charge","TombstoneContractInfo","TrieId","AccountVote","Standard","Split","AccountVoteSplit","nay","AccountVoteStandard","Conviction","Delegations","votes","capital","PreimageStatus","Missing","Available","PreimageStatusAvailable","provider","since","expiry","PriorLock","PropIndex","Proposal","ProxyState","Open","Active","ReferendumIndex","ReferendumInfoTo239","proposalHash","delay","ReferendumInfo","Ongoing","Finished","ReferendumInfoFinished","approved","ReferendumStatus","tally","Tally","turnout","Voting","Direct","Delegating","VotingDirect","delegations","prior","VotingDirectVote","VotingDelegating","target","getBlockStats","BlockStats","witnessLen","witnessCompactLen","blockNumExtrinsics","ApprovalFlag","DefunctVoter","who","voteCount","candidateCount","Renouncing","RunnerUp","Candidate","SetIndex","Vote","VoteIndex","VoterInfo","lastActive","lastWin","pot","stake","VoteThreshold","createBlock","finalizeBlock","CreatedBlock","aux","ImportedAux","headerOnly","clearJustificationRequests","needsJustification","badJustification","needsFinalityProof","isNewBest","EvmAccount","EvmLog","topics","EvmVicinity","gasPrice","ExitError","StackUnderflow","StackOverflow","InvalidJump","InvalidRange","DesignatedInvalid","CallTooDeep","CreateCollision","CreateContractLimit","OutOfOffset","OutOfGas","OutOfFund","PCUnderflow","CreateEmpty","ExitFatal","NotSupported","UnhandledInterrupt","CallErrorAsFatal","ExitReason","Succeed","Fatal","ExitRevert","ExitSucceed","Extrinsic","ExtrinsicEra","ExtrinsicPayload","ExtrinsicV4","ExtrinsicPayloadV4","ExtrinsicSignatureV4","ExtrinsicUnknown","ExtrinsicPayloadUnknown","Era","AnySignature","MultiSignature","Ed25519","Sr25519","Ecdsa","SignerPayload","EcdsaSignature","Ed25519Signature","Sr25519Signature","AssetOptions","initalIssuance","permissions","Owner","PermissionsV1","mint","burn","PermissionVersions","PermissionLatest","ActiveGilt","proportion","ActiveGiltsTotal","frozen","ActiveIndex","GiltBid","proveFinality","roundState","AuthorityIndex","AuthorityList","AuthoritySet","currentAuthorities","setId","pendingStandardChanges","pendingForcedChanges","authoritySetChanges","ForkTreePendingChange","roots","bestFinalizedNumber","ForkTreePendingChangeNode","children","AuthoritySetChange","AuthoritySetChanges","AuthorityWeight","DelayKind","Finalized","Best","DelayKindBest","medianLastFinalized","EncodedFinalityProofs","GrandpaEquivocation","Prevote","Precommit","GrandpaEquivocationProof","equivocation","GrandpaEquivocationValue","roundNumber","identity","GrandpaPrevote","targetHash","targetNumber","GrandpaCommit","precommits","GrandpaPrecommit","GrandpaSignedPrecommit","precommit","GrandpaJustification","commit","votesAncestries","JustificationNotification","KeyOwnerProof","NextAuthority","PendingChange","nextAuthorities","canonHeight","canonHash","delayKind","PendingPause","scheduledAt","PendingResume","Precommits","currentWeight","missing","Prevotes","ReportedRoundStates","best","background","RoundState","totalWeight","thresholdWeight","prevotes","SetId","StoredPendingChange","StoredState","Live","Paused","IdentityFields","Display","Legal","Web","Riot","Email","PgpFingerprint","Image","Twitter","IdentityInfoAdditional","IdentityInfoTo198","additional","display","legal","web","riot","email","pgpFingerprint","image","IdentityInfo","twitter","IdentityJudgement","Unknown","FeePaid","Reasonable","KnownGood","OutOfDate","LowQuality","Erroneous","RegistrationJudgement","RegistrationTo198","judgements","Registration","RegistrarIndex","RegistrarInfo","fee","AuthIndex","AuthoritySignature","Heartbeat","networkState","sessionIndex","validatorsLen","HeartbeatTo244","OpaqueMultiaddr","OpaquePeerId","OpaqueNetworkState","peerId","externalAddresses","CallIndex","LotteryConfig","price","repeat","generateProof","MmrLeafProof","leaf","proof","DeferredOffenceOf","Kind","OffenceDetails","reporters","Offender","OpaqueTimeSlot","ReportIdOf","Reporter","ProxyDefinition","proxyType","ProxyType","ProxyAnnouncement","real","callHash","height","ActiveRecovery","friends","RecoveryConfig","delayPeriod","Period","Priority","SchedulePeriod","SchedulePriority","Scheduled","maybeId","priority","maybePeriodic","ScheduledTo254","TaskAddress","BeefyKey","Keys","SessionKeys1","SessionKeys2","SessionKeys3","SessionKeys4","SessionKeys5","SessionKeys6","SessionKeys6B","SessionKeys7","SessionKeys7B","SessionKeys8","SessionKeys8B","SessionKeys9","SessionKeys9B","SessionKeys10","SessionKeys10B","FullIdentification","IdentificationTuple","MembershipProof","session","trieNodes","validatorCount","SessionIndex","ValidatorCount","Bid","kind","BidKind","Deposit","Vouch","SocietyJudgement","SocietyVote","StrikeCount","VouchingStatus","Points","EraPoints","individual","CompactAssignments","CompactAssignmentsWith16","votes1","votes2","votes3","votes4","votes5","votes6","votes7","votes8","votes9","votes10","votes11","votes12","votes13","votes14","votes15","votes16","CompactAssignmentsWith24","votes17","votes18","votes19","votes20","votes21","votes22","votes23","votes24","CompactAssignmentsTo265","CompactAssignmentsTo257","CompactScore","CompactScoreCompact","ElectionCompute","ElectionPhase","Off","Signed","Unsigned","Emergency","ElectionResult","compute","slotStake","electedStashes","exposures","ElectionScore","ElectionSize","validators","nominators","ElectionStatus","Close","ExtendedBalance","RawSolution","RawSolutionWith16","compact","score","RawSolutionWith24","RawSolutionTo265","ReadySolution","supports","RoundSnapshot","voters","targets","SeatHolder","SignedSubmission","solution","reward","SignedSubmissionTo276","SignedSubmissionOf","SolutionOrSnapshotSize","SolutionSupport","SolutionSupports","Supports","SubmissionIndicesOf","Voter","VoteWeight","ActiveEraInfo","EraIndex","EraRewardPoints","EraRewards","rewards","Exposure","own","others","Forcing","IndividualExposure","KeyType","MomentOf","Nominations","submittedIn","suppressed","NominatorIndex","NominatorIndexCompact","OffchainAccuracy","OffchainAccuracyCompact","PhragmenScore","RewardDestination","Staked","Stash","Controller","Account","RewardPoint","SlashJournalEntry","ownSlash","SlashingSpansTo204","spanIndex","lastStart","SlashingSpans","lastNonzeroSlash","SpanIndex","SpanRecord","slashed","paidOut","StakingLedgerTo223","stash","active","unlocking","StakingLedgerTo240","lastReward","StakingLedger","claimedRewards","UnappliedSlashOther","UnappliedSlash","validator","payout","UnlockChunk","ValidatorIndex","ValidatorIndexCompact","ValidatorPrefs","ValidatorPrefsWithCommission","commission","ValidatorPrefsWithBlocked","blocked","ValidatorPrefsTo196","validatorPayment","ValidatorPrefsTo145","unstakeThreshold","WeightToFeeCoefficient","coeffInteger","coeffFrac","degree","genSyncSpec","accountNextIndex","dryRun","chainType","health","localPeerId","localListenAddresses","peers","addReservedPeer","removeReservedPeer","reservedPeers","nodeRoles","syncState","addLogFilter","resetLogFilter","AccountInfo","AccountInfoWithRefCountU8","AccountInfoWithRefCount","AccountInfoWithDualRefCount","consumers","providers","AccountInfoWithProviders","AccountInfoWithTripleRefCount","ApplyExtrinsicResult","ArithmeticError","BlockLength","BlockWeights","baseBlock","maxBlock","perClass","ChainProperties","ChainType","Development","Local","Custom","ConsumedWeight","DigestOf","DispatchClass","DispatchError","ConsumerRemaining","NoProviders","Token","Arithmetic","DispatchErrorModule","DispatchErrorModuleU8a","DispatchErrorTo198","DispatchInfo","class","paysFee","DispatchInfoTo190","DispatchInfoTo244","DispatchOutcome","DispatchResult","DispatchResultOf","DispatchResultTo198","Event","EventId","EventIndex","EventRecord","event","Health","isSyncing","shouldHavePeers","InvalidTransaction","Call","Payment","Future","Stale","BadProof","AncientBirthBlock","ExhaustsResources","BadMandatory","MandatoryDispatch","Key","LastRuntimeUpgradeInfo","NetworkState","listenedAddresses","connectedPeers","notConnectedPeers","averageDownloadPerSec","averageUploadPerSec","peerset","NetworkStatePeerset","messageQueue","nodes","NetworkStatePeersetInfo","connected","reputation","NodeRole","Full","LightClient","Authority","UnknownRole","NotConnectedPeer","knownAddresses","latestPingTime","versionString","Peer","enabled","open","PeerEndpoint","listening","PeerEndpointAddr","localAddr","sendBackAddr","PeerPing","nanos","secs","PeerInfo","roles","protocolVersion","bestHash","bestNumber","PerDispatchClassU32","normal","operational","mandatory","PerDispatchClassWeight","PerDispatchClassWeightsPerClass","Phase","ApplyExtrinsic","Finalization","Initialization","RawOrigin","Root","RefCount","RefCountTo259","SyncState","currentBlock","highestBlock","SystemOrigin","TokenError","TransactionValidityError","Invalid","UnknownTransaction","NoUnsignedValidator","WeightPerClass","baseExtrinsic","maxExtrinsic","maxTotal","Bounty","proposer","curatorDeposit","bond","BountyIndex","BountyStatus","Proposed","Approved","Funded","CuratorProposed","PendingPayout","BountyStatusActive","curator","updateDue","BountyStatusCuratorProposed","BountyStatusPendingPayout","beneficiary","unlockAt","OpenTip","reason","finder","closes","tips","findersFee","OpenTipTo225","OpenTipFinderTo225","OpenTipTip","TreasuryProposal","Multiplier","ClassId","InstanceId","DepositBalance","DepositBalanceOf","ClassDetails","totalDeposit","freeHolding","instanceMetadatas","attributes","DestroyWitness","InstanceDetails","ClassMetadata","InstanceMetadata","Multisig","when","depositor","Timepoint","VestingInfo","locked","BlockAttestations","receipt","valid","invalid","IncludedBlocks","actualNumber","randomSeed","activeParachains","paraBlocks","MoreAttestations","BridgedBlockHash","BridgedBlockNumber","BridgedHeader","BridgeMessageId","CallOrigin","SourceRoot","TargetAccount","SourceAccount","ChainId","DeliveredMessages","dispatchResults","DispatchFeePayment","InboundLaneData","relayers","lastConfirmedNonce","InboundRelayer","InitializationData","authorityList","isHalted","LaneId","MessageData","MessagesDeliveryProofOf","bridgedHeaderHash","storageProof","lane","MessageKey","laneId","MessageNonce","MessagesProofOf","noncesStart","noncesEnd","OperatingMode","OutboundLaneData","oldestUnprunedNonce","latestReceivedNonce","latestGeneratedNonce","OutboundMessageFee","OutboundPayload","dispatchFeePayment","Parameter","RelayerId","UnrewardedRelayer","relayer","messages","UnrewardedRelayersState","unrewardedRelayer_Entries","messagesInOldestEntry","totalMessages","StatementKind","FundIndex","LastContribution","Never","PreEnding","Ending","FundInfo","verifier","raised","cap","lastContribution","firstPeriod","lastPeriod","trieIndex","TrieIndex","ConfigData","maxIndividual","MessageId","OverweightIndex","PageCounter","PageIndexData","beginUsed","endUsed","overweightCount","SlotRange10","SlotRange","Bidder","New","IncomingParachain","Unset","Fixed","Deploy","IncomingParachainDeploy","initialHeadData","IncomingParachainFixed","NewBidder","SubId","AuctionIndex","LeasePeriod","LeasePeriodOf","WinningData10","WinningData","WinningDataEntry","WinnersData10","WinnersData","WinnersDataTuple10","WinnersDataTuple","ServiceQuality","DisputeLocation","DisputeResult","DisputeState","validatorsFor","validatorsAgainst","concludedAt","DisputeStatement","Valid","DisputeStatementSet","candidateHash","statements","ExplicitDisputeStatement","InvalidDisputeStatementKind","MultiDisputeStatementSet","ValidDisputeStatementKind","Explicit","BackingSeconded","BackingValid","ApprovalChecking","HrmpChannel","maxCapacity","maxTotalSize","maxMessageSize","msgCount","totalSize","mqcHead","senderDeposit","recipientDeposit","HrmpChannelId","sender","HrmpOpenChannelRequest","confirmed","age","ParachainProposal","genesisHead","RegisteredParachainInfo","slotTypes","AbridgedCandidateReceipt","parachainIndex","relayParent","headData","collator","povBlockHash","commitments","AbridgedHostConfiguration","maxCodeSize","maxHeadDataSize","maxUpwardQueueCount","maxUpwardQueueSize","maxUpwardMessageSize","maxUpwardMessageNumPerCandidate","hrmpMaxMessageNumPerCandidate","validationUpgradeFrequency","validationUpgradeDelay","AbridgedHrmpChannel","AssignmentId","AssignmentKind","Parachain","Parathread","AttestedCandidate","candidate","validityVotes","validatorIndices","AuthorityDiscoveryId","AvailabilityBitfield","AvailabilityBitfieldRecord","bitfield","submittedTt","BackedCandidate","BufferedSessionChange","applyAt","queued","CandidateCommitments","upwardMessages","horizontalMessages","newValidationCode","processedDownwardMessages","hrmpWatermark","CandidateDescriptor","paraId","collatorId","persistedValidationDataHash","povHash","erasureRoot","paraHead","validationCodeHash","CandidateHash","CandidateInfo","CandidatePendingAvailability","core","availabilityVotes","backers","relayParentNumber","backedInNumber","backingGroup","CandidateReceipt","commitmentsHash","GlobalValidationData","CollatorId","CollatorSignature","CommittedCandidateReceipt","CoreAssignment","groupIdx","CoreIndex","CoreOccupied","DoubleVoteReport","signingContext","DownwardMessage","GroupIndex","GlobalValidationSchedule","HeadData","HostConfiguration","maxPovSize","maxDownwardMessageSize","preferredDispatchableUpwardMessagesStepWeight","hrmpMaxParachainOutboundChannels","hrmpMaxParathreadOutboundChannels","hrmpOpenRequestTtl","hrmpSenderDeposit","hrmpRecipientDeposit","hrmpChannelMaxCapacity","hrmpChannelMaxTotalSize","hrmpMaxParachainInboundChannels","hrmpMaxParathreadInboundChannels","hrmpChannelMaxMessageSize","codeRetentionPeriod","parathreadCores","parathreadRetries","groupRotationFrequency","chainAvailabilityPeriod","threadAvailabilityPeriod","schedulingLookahead","maxValidatorsPerCore","maxValidators","disputePeriod","disputePostConclusionAcceptancePeriod","disputeMaxSpamSlots","disputeConclusionByTimeOutPeriod","noShowSlots","nDelayTranches","zerothDelayTrancheWidth","neededApprovals","relayVrfModuloSamples","InboundDownwardMessage","pubSentAt","pubMsg","InboundHrmpMessage","sentAt","InboundHrmpMessages","LocalValidationData","parentHead","codeUpgradeAllowed","MessageIngestionType","downwardMessages","MessageQueueChain","OutboundHrmpMessage","recipient","ParachainDispatchOrigin","ParachainInherentData","validationData","relayChainState","ParachainsInherentData","bitfields","backedCandidates","disputes","parentHeader","ParaGenesisArgs","validationCode","parachain","ParaId","ParaInfo","manager","ParaLifecycle","ParaPastCodeMeta","upgradeTimes","lastPruned","ParaScheduling","ParathreadClaim","ParathreadClaimQueue","queue","nextCoreOffset","ParathreadEntry","claim","retries","ParaValidatorIndex","PersistedValidationData","relayParentStorageRoot","QueuedParathread","coreOffset","RelayBlockNumber","RelayChainBlockNumber","RelayHash","RelayChainHash","Remark","ReplacementTimes","expectedAt","activatedAt","Retriable","WithRetries","Scheduling","SessionInfo","discoveryKeys","assignmentKeys","validatorGroups","nCores","SessionInfoValidatorGroup","SignedAvailabilityBitfield","validatorIndex","SignedAvailabilityBitfields","SigningContext","parentHash","Statement","TransientValidationData","dmqLength","UpgradeGoAhead","UpgradeRestriction","UpwardMessage","ValidationFunctionParams","relayChainHeight","ValidationCode","ValidationCodeHash","ValidationData","persisted","transient","ValidationDataType","ValidatorSignature","ValidityAttestation","Implicit","MessagingStateSnapshot","relayDispatchQueueSize","egressChannels","MessagingStateSnapshotEgressEntry","SystemInherentData","VecInboundHrmpMessage","Approvals","AccountStatus","validity","freeBalance","lockedBalance","vat","AccountValidity","BodyId","Unit","Named","Executive","Technical","Legislative","Judicial","BodyPart","Voice","Fraction","nom","denom","AtLeastProportion","MoreThanProportion","InteriorMultiLocation","NetworkId","Any","Polkadot","Kusama","XcmOrigin","Xcm","XcmpMessageFormat","XcmAssetId","Concrete","Abstract","InboundStatus","OutboundStatus","MultiAssets","FungibilityV0","WildFungibilityV0","AssetInstanceV0","Undefined","Index8","Index16","Index32","Index64","Index128","Array4","Array8","Array16","Array32","Blob","JunctionV0","Parent","AccountId32","AccountIndex64","AccountKey20","PalletInstance","GeneralIndex","GeneralKey","OnlyChild","Plurality","part","MultiAssetV0","All","AllFungible","AllNonFungible","AllAbstractFungible","AllAbstractNonFungible","AllConcreteFungible","AllConcreteNonFungible","AbstractFungible","AbstractNonFungible","ConcreteFungible","ConcreteNonFungible","MultiLocationV0","Here","X4","X5","X6","X7","X8","OriginKindV0","ResponseV0","Assets","XcmV0","WithdrawAsset","assets","effects","ReserveAssetDeposit","ReceiveTeleportedAsset","QueryResponse","queryId","response","TransferAsset","TransferReserveAsset","Transact","originType","requireWeightAtMost","HrmpNewChannelOpenRequest","HrmpChannelAccepted","HrmpChannelClosing","initiator","RelayedFrom","XcmErrorV0","Overflow","Unimplemented","UnhandledXcmVersion","UnhandledXcmMessage","UnhandledEffect","EscalationOfPrivilege","UntrustedReserveLocation","UntrustedTeleportLocation","DestinationBufferOverflow","SendFailed","CannotReachDestination","MultiLocationFull","FailedToDecode","ExceedsMaxMessageSize","FailedToTransactAsset","WeightLimitReached","Wildcard","TooMuchWeightRequired","NotHoldingFees","WeightNotComputable","Barrier","NotWithdrawable","LocationCannotHold","TooExpensive","AssetNotFound","RecursionLimitReached","XcmOrderV0","DepositAsset","DepositReserveAsset","ExchangeAsset","give","receive","InitiateReserveWithdraw","reserve","InitiateTeleport","QueryHolding","BuyExecution","fees","debt","haltOnError","xcm","AssetInstanceV1","FungibilityV1","Fungible","NonFungible","JunctionV1","JunctionsV1","MultiAssetsV1","MultiAssetV1","fungibility","MultiAssetFilterV1","Definite","Wild","MultiLocationV1","parents","interior","OriginKindV1","ResponseV1","WildFungibilityV1","WildMultiAssetV1","AllOf","XcmV1","XcmErrorV1","DestinationUnsupported","XcmOrderV1","Noop","maxAssets","instructions","AssetInstanceV2","FungibilityV2","JunctionV2","JunctionsV2","MultiAssetsV2","MultiAssetV2","MultiAssetFilterV2","MultiLocationV2","OriginKindV2","WildFungibilityV2","ResponseV2","ExecutionResult","ResponseV2Error","ResponseV2Result","WeightLimitV2","Unlimited","Limited","InstructionV2","ReserveAssetDeposited","maxWeight","ClearOrigin","DescendOrigin","ReportError","maxResponseWeight","query_id","maxResponse_Weight","weightLimit","RefundSurplus","SetErrorHandler","SetAppendix","ClearError","ClaimAsset","ticket","Trap","WildMultiAssetV2","XcmV2","XcmErrorV2","MultiLocationNotInvertible","Transport","Unroutable","UnknownWeightRequired","UnknownClaim","InvalidLocation","XcmOrderV2","DoubleEncodedCall","XcmOriginKind","Outcome","Complete","Incomplete","QueryId","QueryStatus","Pending","responder","maybeNotify","timeout","Ready","at","QueueConfigData","suspendThreshold","dropThreshold","resumeThreshold","weightRestrictDecay","VersionMigrationStage","MigrateSupportedVersion","MigrateVersionNotifiers","NotifyCurrentTargets","MigrateAndNotifyOldTargets","VersionedMultiAsset","VersionedMultiAssets","VersionedMultiLocation","VersionedResponse","VersionedXcm","XcmVersion","ContractMetadataV0","ContractProjectInfo","source","contract","ContractCryptoHasher","ContractDiscriminant","ContractLayoutArray","cellsPerElem","layout","ContractLayoutCell","ty","ContractLayoutEnum","dispatchKey","ContractLayoutHash","strategy","ContractLayoutHashingStrategy","postfix","ContractLayoutKey","ContractLayoutStruct","ContractLayoutStructField","ContractStorageLayout","Cell","ContractConstructorSpecV0","selector","ContractConstructorSpecV1","ContractConstructorSpecV2","label","ContractConstructorSpecV3","payable","ContractContractSpecV0","constructors","ContractContractSpecV1","ContractContractSpecV2","ContractContractSpecV3","ContractDisplayName","ContractEventParamSpecV0","indexed","ContractEventParamSpecV2","ContractEventSpecV0","ContractEventSpecV1","ContractEventSpecV2","ContractMessageParamSpecV0","ContractMessageParamSpecV2","ContractMessageSpecV0","mutates","returnType","ContractMessageSpecV1","ContractMessageSpecV2","ContractSelector","ContractTypeSpec","ContractConstructorSpecLatest","ContractEventSpecLatest","ContractEventParamSpecLatest","ContractMessageParamSpecLatest","ContractMessageSpecLatest","ContractMetadataLatest","ContractMetadataV1","ContractMetadataV2","ContractMetadataV3","ContractMetadata","ContractProjectV0","metadataVersion","ContractProject","ContractProjectContract","authors","repository","homepage","license","ContractProjectSource","wasmHash","language","compiler","aliasSection","peerCount","clientVersion","sha3","chainId","coinbase","estimateGas","getBalance","getBlockByHash","getBlockByNumber","getBlockTransactionCountByHash","getBlockTransactionCountByNumber","getCode","getFilterChanges","getFilterLogs","getLogs","getProof","getStorageAt","getTransactionByBlockHashAndIndex","getTransactionByBlockNumberAndIndex","getTransactionByHash","getTransactionCount","getTransactionReceipt","getUncleByBlockHashAndIndex","getUncleByBlockNumberAndIndex","getUncleCountByBlockHash","getUncleCountByBlockNumber","getWork","hashrate","mining","newBlockFilter","newFilter","newPendingTransactionFilter","sendRawTransaction","sendTransaction","submitHashrate","submitWork","subscribe","syncing","uninstallFilter","BlockV0","transactions","ommers","LegacyTransaction","TransactionV0","BlockV1","EIP2930Transaction","accessList","oddYParity","TransactionV1","Legacy","EIP2930","BlockV2","EIP1559Transaction","maxPriorityFeePerGas","maxFeePerGas","TransactionV2","EIP1559","EthereumAccountId","EthereumAddress","EthereumLookupSource","EthereumSignature","EthAccessListItem","slots","EthAccessList","EthAccount","storageHash","accountProof","EthAddress","EthBlock","EthHeader","ommersHash","stateRoot","transactionsRoot","receiptsRoot","logsBloom","difficulty","gasUsed","timestamp","extraData","mixMash","EthRichBlock","blockSize","sha3Uncles","author","miner","totalDifficulty","sealFields","uncles","EthBloom","EthCallRequest","EthFilter","fromBlock","toBlock","EthFilterAddress","Single","Multiple","EthFilterChanges","Logs","Hashes","Empty","EthFilterTopic","EthFilterTopicEntry","EthFilterTopicInner","EthRichHeader","EthLog","transactionHash","transactionIndex","logIndex","transactionLogIndex","removed","EthReceipt","cumulativeGasUsed","contractAddress","logs","statusCode","EthStorageProof","EthSubKind","EthSubParams","EthSubResult","Header","Log","TransactionHash","EthSyncInfo","warpChunksAmount","warpChunksProcessed","EthSyncStatus","Info","EthTransaction","EthTransactionSignature","EthTransactionAction","Create","EthTransactionCondition","time","EthTransactionRequest","EthTransactionStatus","EthWork","powHash","seedHash","methods","RpcMethods","hasKey","hasSessionKeys","removeExtrinsic","insertKey","rotateKeys","pendingExtrinsics","submitExtrinsic","submitAndWatchExtrinsic","ExtrinsicOrHash","ExtrinsicStatus","Broadcast","InBlock","Retracted","FinalityTimeout","Usurped","Dropped","getHeader","getBlock","getBlockHash","subscribeNewHeads","subscribeFinalizedHeads","subscribeAllHeads","BlockHash","getKeys","getKeysPaged","getStorageEntries","getStorageHash","getStorageSize","PrefixedStorageKey","localStorageSet","localStorageGet","StorageKind","PERSISTENT","LOCAL","QUERY_PARAMS","queryInfo","queryFeeDetails","FeeDetails","inclusionFee","InclusionFee","baseFee","lenFee","adjustedWeightFee","RuntimeDispatchInfo","partialFee","getPairs","getChildKeys","getChildStorage","getChildStorageHash","getChildStorageSize","getMetadata","getRuntimeVersion","queryStorage","queryStorageAt","getChildReadProof","getReadProof","subscribeRuntimeVersion","subscribeStorage","traceBlock","trieMigrationStatus","ApiId","BlockTrace","tracingTargets","storageKeys","spans","BlockTraceEvent","parentId","BlockTraceEventData","stringValues","BlockTraceSpan","KeyValueOption","MigrationStatusResult","topRemainingToMigrate","childRemainingToMigrate","ReadProof","RuntimeVersionApi","RuntimeVersion","implName","authoringVersion","implVersion","apis","RuntimeVersionPartial","SpecVersion","StorageChangeSet","changes","TraceBlockResponse","TraceError","knownOrigins","Council","System","TechnicalCommittee","XcmPallet","GeneralCouncil","Fixed64","FixedI64","FixedU64","Fixed128","FixedI128","FixedU128","I32F32","U32F32","PerU16","Perbill","Percent","Permill","Perquintill","AccountId20","AccountIdOf","AccountIndex","AssetId","Balance","BalanceOf","Block","BlockNumber","BlockNumberFor","BlockNumberOf","CallHash","CallHashOf","ChangesTrieConfiguration","digestInterval","digestLevels","ChangesTrieSignal","NewConfiguration","ConsensusEngineId","CodecHash","CrateVersion","major","minor","patch","Digest","DigestItem","AuthoritiesChange","ChangesTrieRoot","SealV0","Consensus","Seal","PreRuntime","RuntimeEnvironmentUpdated","ExtrinsicsWeight","H32","H64","H128","H160","H256","H512","H1024","H2048","extrinsicsRoot","HeaderPartial","IndicesLookupSource","Justification","EncodedJustification","Justifications","KeyValue","KeyTypeId","LockIdentifier","LookupSource","LookupTarget","ModuleId","MultiAddress","MultiSigner","Moment","OpaqueCall","Origin","OriginCaller","PalletId","PalletsOrigin","PalletVersion","Pays","PhantomData","Releases","RuntimeDbWeight","read","write","SignedBlock","SignedBlockWithJustification","justification","SignedBlockWithJustifications","justifications","Slot","StorageData","StorageProof","TransactionPriority","TransactionInfo","dataSize","chunkRoot","blockChunks","TransactionStorageProof","chunk","ValidatorId","ValidatorIdOf","Weight","WeightMultiplier","createStorageHasher","createStorageType","entryType","isMap","asMap","isDoubleMap","asDoubleMap","asPlain","toV10","item","convertModule","toV11","toV12","toV13","typesAlias","Approval","ApprovalKey","babe","EquivocationProof","balances","Status","beefy","contracts","StorageKey","electionProviderMultiPhase","ethereum","Receipt","Transaction","TransactionStatus","evm","Vicinity","grandpa","Equivocation","Judgement","inclusion","paraDisputes","paraInclusion","paraScheduler","paraShared","parachains","parasDisputes","parasInclusion","parasScheduler","parasShared","proposeParachain","proxy","Announcement","scheduler","shared","society","staking","treasury","xcmPallet","BOXES","compatType","specs","makeTupleType","makeVariantType","modName","variantType","setTypeOverride","sectionTypes","aliased","orig","dst","convertCalls","convertConstants","convertErrors","_sectionTypes","convertEvents","createMapEntry","convertStorage","isPlain","plain","nm","asNMap","createPallet","_knownTypes$typesAlia","getAliasTypes","toV14","v13","metaVersion","compatTypes","registerOriginCaller","convertExtrinsic","toLatest","_metaVersion","MAGIC_NUMBER","MagicNumber","U32","trimDocs","firstEmpty","toCallsOnly","flattenUniq","list","extractSubSingle","extractTypes","extractSubArray","unhandled","mapping","extractFieldTypes","getUniqTypes","throwError","validateTypes","getPalletNames","MetadataVersioned","magicNumber","fromPrev","asCurr","asPrev","asCallsOnly","asV9","asV10","asV11","asV12","asV13","asV14","EMPTY_METADATA","_version","lazyMethods","constant","codec","objectNameToCamel","getSiName","callMetadata","expectedArgs","funcName","extrinsicFn","tx","isTx","createUnchecked","convert","HASHER_MAP","unwrapStorageType","outputType","unwrapStorageSi","decodeArgsFromMeta","hashLen","canDecode","decodeHashers","decodeStorageKey","getType","setMeta","getMeta","checkAddressChecksum","ss58Length","ss58Decoded","isPublicKey","ignoreChecksum","base58Decode","isValid","endPos","allowedDecodedLengths","allowedEncodedLengths","allowedPrefix","SS58_PREFIX","config","chars","coder","ipfs","base58Validate","ipfsCompat","createValidate","validate","createDecode","createEncode","blake2bJs","wa","js","__bridge","cachegetInt32","cachegetUint8","wasmPromise","wasmPromiseFn","withWasm","getWasm","getInt32","memory","Int32Array","getUint8","getU8a","ptr","allocU8a","__wbindgen_malloc","allocString","resultU8a","r0","r1","__wbindgen_free","resultString","ext_bip39_generate","phrase","ext_bip39_to_entropy","password","ext_bip39_to_mini_secret","ext_bip39_to_seed","ext_bip39_validate","seed","ext_ed_from_seed","pubkey","seckey","ext_ed_sign","ext_ed_verify","ext_secp_from_seed","ext_secp_pub_compress","ext_secp_pub_expand","sig","ext_secp_recover","ext_secp_sign","pair","cc","ext_sr_derive_keypair_hard","ext_sr_derive_keypair_soft","ext_sr_derive_public_soft","ext_sr_from_seed","secret","ext_sr_sign","ext_sr_verify","ext_sr_agree","context","ext_vrf_sign","outAndProof","ext_vrf_verify","ext_blake2b","ext_hmac_sha256","ext_hmac_sha512","ext_keccak256","ext_keccak512","ext_pbkdf2","log2n","ext_scrypt","ext_sha256","ext_sha512","ext_twox","condition","BN_ONE","BN_TWO","BN_FOUR","isToBigInt","isOn","isToBn","createEmpty","valueBn","flag","MAX_U8","MAX_U16","MAX_U32","SI","findSi","calcSi","forceUnit","siDefIndex","SI_MID","DEFAULT_UNIT","defaultDecimals","defaultUnit","getUnits","si","withSiFull","getPrePost","optDecimals","units","formatDecimal","getDefaults","getOptions","setDefaults","NUMBER_REGEX","matched","match","hasBuffer","hasProcess","process","U8_TO_HEX","U16_TO_HEX","HEX_TO_U8","HEX_TO_U16","hexStripPrefix","REGEX_HEX_PREFIXED","REGEX_HEX_NOPREFIX","stripped","valLength","endLength","dv","DataView","setUint16","setUint8","isBuffer","fns","ignoreLength","zeroPad","formatDate","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","logTo","debug","log","loggerFormat","formatOther","formatWithLength","maxLength","maxSize","fnResult","console","Date","noop","isDebugOn","isDebugOff","getDebugFlag","env","isDebug","DEBUG_MAX","DEBUG","parseEnv","xglobal","NaN","that","objectKeys","converter","format","encoder","extractGlobal","space","u8as","u8aa","u8ab","dvA","dvB","getUint32","getUint16","isPrefixed","decoder","fromCharCode","globalThis","global","Function","devAssert","formatValue","seenValues","previouslySeenValues","isJSONable","jsonValue","remaining","formatArray","object","getObjectTag","formatObject","formatObjectValue","Location","startToken","endToken","toStringTag","line","column","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","OperationTypeNode","dedentBlockStringLines","lines","_firstNonEmptyLine2","commonIndent","firstNonEmptyLine","lastNonEmptyLine","_firstNonEmptyLine","indent","leadingWhitespace","isWhiteSpace","isDigit","isLetter","isNameStart","isNameContinue","instanceOf","Source","body","locationOffset","isSource"],"sourceRoot":""}